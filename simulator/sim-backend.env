# Enable mutual TLS authentication. Useful when the simulator is not running in a Mojaloop
# environment, i.e. when you're running it locally against your own implementation.
MUTUAL_TLS_ENABLED=false

# Enable server-only TLS; i.e. serve on HTTPS instead of HTTP.
HTTPS_ENABLED=false

# Location of certs and key required for TLS
CA_CERT_PATH=./secrets/cacert.pem
SERVER_CERT_PATH=./secrets/servercert.pem
SERVER_KEY_PATH=./secrets/serverkey.pem

# The number of space characters by which to indent pretty-printed logs. If set to zero, log events
# will each be printed on a single line.
LOG_INDENT=0

# The name of the sqlite log file. This probably doesn't matter much to the user, except that
# setting :memory: will use an in-memory sqlite db, which will be faster and not consume disk
# space. However, it will also mean that the logs will be lost once the container is stopped.
SQLITE_LOG_FILE=:memory:

# The DFSPID of this simulator. The simulator will accept any requests routed to
# FSPIOP-Destination: $DFSP_ID. Other requests will be rejected.
DFSP_ID=payerfsp

# The name of the sqlite model database. If you would like to start the simulator with preloaded
# state you can use a preexisting file. If running in a container, you can mount a sqlite file as a
# volume in the container to preserve state between runs.
# Use MODEL_DATABASE=:memory: for an ephemeral in-memory database
MODEL_DATABASE=./model.sqlite

# Outbound API endpoint (It might be a container in the compose file so remember the networking IP)
OUTBOUND_ENDPOINT=http://scheme-adapter:4001

# The simulator can automatically add fees when generating quote responses. Use this
# variable to control the fee amounts added. e.g. for a transfer of 100 USD a FEE_MULTIPLIER of 0.1
# reuslts in fees of USD 10 being applied to the quote response
FEE_MULTIPLIER=0.05

# Specifies the location of a rules file for the simulator backend. Rules can be used to produce
# specific simulator behaviours in response to incoming requests that match certain conditions.
# e.g. a rule can be used to trigger NDC errors given transfers between certain limits.

RULES_FILE=./rules.json
