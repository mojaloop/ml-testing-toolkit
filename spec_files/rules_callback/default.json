[
  {
    "ruleId": 1,
    "priority": 1,
    "description": "ISO20022 get /parties/{Type}/{ID}/{SubId}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}/{SubId}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}/{SubId}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.parties+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}"
        },
        "body": {
          "Assgnmt": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}",
            "Assgnr": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.headers.fspiop-source}"
                  }
                }
              }
            },
            "Assgne": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              }
            }
          },
          "Rpt": {
            "OrgnlId": "{$request.params.Type}/{$request.params.ID}/{$request.params.SubId}",
            "Vrfctn": true,
            "UpdtdPtyAndAcctId": {
              "Acct": {
                "Ccy": "XTS"
              },
              "Pty": {
                "Nm": "Test Party",
                "Id": {
                  "PrvtId": {
                    "Othr": {
                      "Id": "{$request.params.ID}",
                      "SchmeNm": {
                        "Prtry": "{$request.params.Type}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "delay": 0,
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 2,
    "priority": 1,
    "description": "ISO20022 get /parties/{Type}/{ID}/{SubId}  for BUSINESS/ALIAS/DEVICE Types",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "pathParams",
          "operator": "in",
          "value": "BUSINESS,ALIAS,DEVICE",
          "path": "Type"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}/{SubId}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}/{SubId}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.parties+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}"
        },
        "body": {
          "Assgnmt": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}",
            "Assgnr": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.headers.fspiop-source}"
                  }
                }
              }
            },
            "Assgne": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              }
            }
          },
          "Rpt": {
            "OrgnlId": "{$request.params.Type}/{$request.params.ID}/{$request.params.SubId}",
            "Vrfctn": true,
            "UpdtdPtyAndAcctId": {
              "Acct": {
                "Ccy": "XTS"
              },
              "Pty": {
                "Nm": "Test Party",
                "Id": {
                  "OrgId": {
                    "Othr": {
                      "Id": "{$request.params.ID}",
                      "SchmeNm": {
                        "Prtry": "{$request.params.Type}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "delay": 0,
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 3,
    "priority": 1,
    "description": "ISO20022 get /parties/{Type}/{ID} for BUSINESS/ALIAS/DEVICE Types",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "pathParams",
          "operator": "in",
          "value": "BUSINESS,ALIAS,DEVICE",
          "path": "Type"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.parties+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}"
        },
        "body": {
          "Assgnmt": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}",
            "Assgnr": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.headers.fspiop-source}"
                  }
                }
              }
            },
            "Assgne": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              }
            }
          },
          "Rpt": {
            "OrgnlId": "{$request.params.Type}/{$request.params.ID}",
            "Vrfctn": true,
            "UpdtdPtyAndAcctId": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              },
              "Acct": {
                "Ccy": "XTS"
              },
              "Pty": {
                "Nm": "Test Party",
                "Id": {
                  "OrgId": {
                    "Othr": {
                      "Id": "{$request.params.ID}",
                      "SchmeNm": {
                        "Prtry": "{$request.params.Type}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 4,
    "priority": 1,
    "description": "ISO20022 get /parties/{Type}/{ID} ACCOUNT_ID",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "pathParams",
          "operator": "equal",
          "path": "Type",
          "value": "ACCOUNT_ID"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.parties+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}"
        },
        "body": {
          "Assgnmt": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}",
            "Assgnr": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.headers.fspiop-source}"
                  }
                }
              }
            },
            "Assgne": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              }
            }
          },
          "Rpt": {
            "OrgnlId": "{$request.params.Type}/{$request.params.ID}",
            "Vrfctn": true,
            "UpdtdPtyAndAcctId": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              },
              "Acct": {
                "Ccy": "XTS"
              },
              "Pty": {
                "Nm": "Test Party",
                "Id": {
                  "PrvtId": {
                    "Othr": {
                      "Id": "{$request.params.ID}",
                      "SchmeNm": {
                        "Prtry": "{$request.params.Type}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 5,
    "priority": 1,
    "description": "ISO20022 get /parties/{Type}/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.parties+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}"
        },
        "body": {
          "Assgnmt": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}",
            "Assgnr": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.headers.fspiop-source}"
                  }
                }
              }
            },
            "Assgne": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              }
            }
          },
          "Rpt": {
            "OrgnlId": "{$request.params.Type}/{$request.params.ID}",
            "Vrfctn": true,
            "UpdtdPtyAndAcctId": {
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$config.FSPID}"
                  }
                }
              },
              "Acct": {
                "Ccy": "XTS"
              },
              "Pty": {
                "Nm": "Test Party",
                "Id": {
                  "PrvtId": {
                    "Othr": {
                      "Id": "{$request.params.ID}",
                      "SchmeNm": {
                        "Prtry": "{$request.params.Type}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 6,
    "priority": 1,
    "description": "ISO20022 get /quotes/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/quotes/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/quotes/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "ruleId": 7,
    "priority": 1,
    "description": "ISO20022 post /quotes",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/quotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/quotes/{ID}",
      "params": {
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()",
            "environment.AccptncDtTm = new Date().toISOString()",
            "environment.PmtInstrXpryDtTm = new Date(new Date().getTime() + 24 * 60 * 60 * 1000).toISOString()"
          ],
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.quotes+json;version=2.0",
          "FSPIOP-Source": "{$request.headers.fspiop-destination}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}"
        },
        "body": {
          "GrpHdr": {
            "MsgId": "{$function.generic.generateULID}",
            "PmtInstrXpryDtTm": "{$environment.PmtInstrXpryDtTm}",
            "CreDtTm": "{$environment.CreDtTm}",
            "NbOfTxs": "1",
            "SttlmInf": {
              "SttlmMtd": "CLRG"
            }
          },
          "CdtTrfTxInf": {
            "VrfctnOfTerms": {
              "IlpV4PrepPacket": ""
            },
            "PmtId": {
              "TxId": "{$request.body.CdtTrfTxInf.PmtId.TxId}",
              "EndToEndId": "{$request.body.CdtTrfTxInf.PmtId.EndToEndId}"
            },
            "IntrBkSttlmAmt": {
              "Ccy": "{$request.body.CdtTrfTxInf.IntrBkSttlmAmt.Ccy}",
              "ActiveCurrencyAndAmount": "{$request.body.CdtTrfTxInf.IntrBkSttlmAmt.ActiveCurrencyAndAmount}"
            },
            "InstdAmt": {
              "Ccy": "{$request.body.CdtTrfTxInf.IntrBkSttlmAmt.Ccy}",
              "ActiveOrHistoricCurrencyAndAmount": "{$request.body.CdtTrfTxInf.IntrBkSttlmAmt.ActiveCurrencyAndAmount}"
            },
            "ChrgBr": "SHAR",
            "ChrgsInf": {
              "Amt": {
                "Ccy": "{$request.body.CdtTrfTxInf.IntrBkSttlmAmt.Ccy}",
                "ActiveOrHistoricCurrencyAndAmount": "0"
              },
              "Agt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "123456789",
                    "SchmeNm": {
                      "Cd": "BBA",
                      "Prtry": "Party Identification Scheme Name"
                    }
                  }
                }
              }
            },
            "Cdtr": {
              "Nm": "{$request.body.CdtTrfTxInf.Cdtr.Nm}",
              "Id": {
                "OrgId": {
                  "Othr": {
                    "Id": "{$request.body.CdtTrfTxInf.Cdtr.Id.OrgId.Othr.Id}",
                    "SchmeNm": {
                      "Prtry": "{$request.body.CdtTrfTxInf.Cdtr.Id.OrgId.Othr.SchmeNm.Prtry}"
                    }
                  }
                }
              }
            },
            "Dbtr": {
              "Nm": "{$request.body.CdtTrfTxInf.Dbtr.Nm}",
              "Id": {
                "OrgId": {
                  "Othr": {
                    "Id": "{$request.body.CdtTrfTxInf.Dbtr.Id.OrgId.Othr.Id}",
                    "SchmeNm": {
                      "Prtry": "{$request.body.CdtTrfTxInf.Dbtr.Id.OrgId.Othr.SchmeNm.Prtry}"
                    }
                  }
                }
              }
            },
            "DbtrAgt": {
              "FinInstnId": {
                "Othr": {
                  "Id": "{$request.headers['FSPIOP-Source']}",
                  "SchmeNm": {
                    "Cd": "BDID"
                  }
                }
              }
            },
            "CdtrAgt": {
              "FinInstnId": {
                "Othr": {
                  "Id": "{$request.headers['FSPIOP-Destination']}",
                  "SchmeNm": {
                    "Cd": "BDID"
                  }
                }
              }
            }
          }
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "type": "callback",
    "ruleId": 8,
    "priority": 1,
    "description": "ISO20022 get /transfers/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    },
    "version": 1
  },
  {
    "ruleId": 9,
    "priority": 1,
    "description": "ISO20022 post /transfers",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()",
            "environment.AccptncDtTm = new Date().toISOString()",
            "environment.PmtInstrXpryDtTm = new Date(new Date().getTime() + 24 * 60 * 60 * 1000).toISOString()"
          ],
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.transfers+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}"
        },
        "body": {
          "GrpHdr": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}"
          },
          "TxInfAndSts": {
            "StsId": "{$function.generic.generateULID}",
            "OrgnlInstrId": "{$request.body.CdtTrfTxInf.PmtId.InstrId}",
            "OrgnlEndToEndId": "{$request.body.CdtTrfTxInf.PmtId.EndToEndId}",
            "OrgnlTxId": "{$request.body.CdtTrfTxInf.PmtId.TxId}",
            "OrgnlUETR": "123e4567-e89b-12d3-a456-426614174000",
            "TxSts": "COMM",
            "StsRsnInf": {
              "Rsn": {
                "Prtry": "COMM"
              },
              "AddtlInf": "ADDITIONAL"
            },
            "AccptncDtTm": "{$environment.AccptncDtTm}",
            "PrcgDt": {
              "Dt": "{$environment.AccptncDtTm}"
            },
            "AcctSvcrRef": "ACCTSVCRREF",
            "ClrSysRef": "CLRSYSREF",
            "ExctnConf": "",
            "SplmtryData": {
              "PlcAndNm": "PLACE",
              "Envlp": {}
            }
          }
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 10,
    "priority": 1,
    "description": "ISO20022 get /fxQuotes/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxQuotes/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxQuotes/{ID}",
      "params": {
        "scripts": {
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.fxQuotes+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 11,
    "priority": 1,
    "description": "ISO20022 post /fxQuotes",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxQuotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxQuotes/{ID}",
      "params": {
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()",
            "environment.AccptncDtTm = new Date().toISOString()",
            "environment.PmtInstrXpryDtTm = new Date(new Date().getTime() + 24 * 60 * 60 * 1000).toISOString()"
          ],
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.fxQuotes+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}"
        },
        "body": {
          "GrpHdr": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}",
            "PmtInstrXpryDtTm": "{$environment.PmtInstrXpryDtTm}",
            "NbOfTxs": "1",
            "SttlmInf": {
              "SttlmMtd": "CLRG"
            }
          },
          "CdtTrfTxInf": {
            "VrfctnOfTerms": {
              "Sh256Sgntr": "GRzLaTP7DJ9t4P-a_BA0WA9wzzlsugf00-Tn6kESAfM"
            },
            "PmtId": {
              "TxId": "{$request.body.CdtTrfTxInf.PmtId.TxId}",
              "InstrId": "{$request.body.CdtTrfTxInf.PmtId.InstrId}",
              "EndToEndId": "{$request.body.CdtTrfTxInf.PmtId.EndToEndId}"
            },
            "PmtTpInf": {
              "InstrPrty": "NORM",
              "CtgyPurp": {
                "Cd": "SUPP"
              }
            },
            "UndrlygCstmrCdtTrf": {
              "InstdAmt": {
                "Ccy": "{$request.body.CdtTrfTxInf.UndrlygCstmrCdtTrf.InstdAmt.Ccy}",
                "ActiveOrHistoricCurrencyAndAmount": "{$request.body.CdtTrfTxInf.UndrlygCstmrCdtTrf.InstdAmt.ActiveOrHistoricCurrencyAndAmount}"
              },
              "Dbtr": {
                "Id": {
                  "OrgId": {
                    "Othr": {
                      "Id": "{$request.body.CdtTrfTxInf.Dbtr.Id.OrgId.Othr.Id}"
                    }
                  }
                }
              },
              "Cdtr": {
                "Id": {
                  "OrgId": {
                    "Othr": {
                      "Id": "{$request.body.CdtTrfTxInf.Cdtr.Id.OrgId.Othr.Id}"
                    }
                  }
                }
              },
              "CdtrAgt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.body.CdtTrfTxInf.Cdtr.Id.OrgId.Othr.Id}"
                  }
                }
              },
              "DbtrAgt": {
                "FinInstnId": {
                  "Othr": {
                    "Id": "{$request.body.CdtTrfTxInf.Dbtr.Id.OrgId.Othr.Id}"
                  }
                }
              }
            },
            "IntrBkSttlmAmt": {
              "ActiveCurrencyAndAmount": "100",
              "Ccy": "{$request.body.CdtTrfTxInf.IntrBkSttlmAmt.Ccy}"
            },
            "ChrgBr": "SLEV",
            "Cdtr": {
              "Name": "Test Creditor",
              "FinInstnId": {
                "Othr": {
                  "Id": "{$request.body.CdtTrfTxInf.Cdtr.FinInstnId.Othr.Id}"
                }
              },
              "Id": {
                "PrvtId": {
                  "DtAndPlcOfBirth": {
                    "BirthDt": "{$function.generic.curDate}"
                  }
                },
                "OrgId": {
                  "Othr": {
                    "Id": "{$request.body.CdtTrfTxInf.Cdtr.Id.OrgId.Othr.Id}",
                    "SchmeNm": {
                      "Prtry": "ACCOUNT_ID"
                    }
                  }
                }
              }
            },
            "CdtrAcct": {
              "Id": {
                "IBAN": "BE71096123456769"
              },
              "Tp": {
                "Cd": "CACC"
              },
              "Ccy": "XTS",
              "Nm": "My account"
            },
            "CdtrAgt": {
              "FinInstnId": {
                "BICFI": "BNBABEBB"
              }
            },
            "CdtrAgtAcct": {
              "Id": {
                "IBAN": "BE71096123456769"
              },
              "Tp": {
                "Cd": "CACC"
              },
              "Ccy": "XTS",
              "Nm": "My account"
            },
            "Dbtr": {
              "Name": "Test Debitor",
              "FinInstnId": {
                "Othr": {
                  "Id": "{$request.body.CdtTrfTxInf.Dbtr.FinInstnId.Othr.Id}"
                }
              },
              "Id": {
                "PrvtId": {
                  "DtAndPlcOfBirth": {
                    "BirthDt": "{$function.generic.curDate}"
                  }
                },
                "OrgId": {
                  "Othr": {
                    "Id": "{$request.body.CdtTrfTxInf.Dbtr.Id.OrgId.Othr.Id}",
                    "SchmeNm": {
                      "Prtry": "ACCOUNT_ID"
                    }
                  }
                }
              }
            },
            "DbtrAcct": {
              "Id": {
                "IBAN": "BE71096123456769"
              },
              "Tp": {
                "Cd": "CACC"
              },
              "Ccy": "XTS",
              "Nm": "My account"
            },
            "DbtrAgt": {
              "FinInstnId": {
                "BICFI": "BNBABEBB"
              }
            },
            "DbtrAgtAcct": {
              "Id": {
                "IBAN": "BE71096123456769"
              },
              "Tp": {
                "Cd": "CACC"
              },
              "Ccy": "XTS",
              "Nm": "My account"
            }
          }
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 12,
    "priority": 1,
    "description": "ISO20022 get /fxTransfers/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxTransfers/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxTransfers/{ID}",
      "params": {
        "scripts": {
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.fxTransfers+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 13,
    "priority": 1,
    "description": "ISO20022 post /fxTransfers",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "iso20022",
      "asynchronous": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0_iso20022/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0_iso20022/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0_iso20022/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0_iso20022/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "includesString",
          "value": "application/vnd.interoperability.iso20022",
          "path": "Accept"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxTransfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxTransfers/{ID}",
      "params": {
        "scripts": {
          "exec": [
            "environment.CreDtTm = new Date().toISOString()",
            "environment.AccptncDtTm = new Date().toISOString()",
            "environment.PmtInstrXpryDtTm = new Date(new Date().getTime() + 24 * 60 * 60 * 1000).toISOString()"
          ],
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "application/vnd.interoperability.iso20022.fxTransfers+json;version=2.0",
          "FSPIOP-Source": "{$config.FSPID}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}"
        },
        "body": {
          "GrpHdr": {
            "MsgId": "{$function.generic.generateULID}",
            "CreDtTm": "{$environment.CreDtTm}"
          },
          "TxInfAndSts": {
            "StsId": "12345",
            "OrgnlInstrId": "12345",
            "OrgnlEndToEndId": "12345",
            "OrgnlTxId": "12345",
            "OrgnlUETR": "123e4567-e89b-12d3-a456-426614174000",
            "TxSts": "RESV",
            "StsRsnInf": {
              "Rsn": {
                "Prtry": "ACPT"
              },
              "AddtlInf": "ADDITIONAL"
            },
            "AccptncDtTm": "{$environment.AccptncDtTm}",
            "AcctSvcrRef": "ACCTSVCRREF",
            "ClrSysRef": "CLRSYSREF",
            "ExctnConf": "UNlJ98hZTY_dsw0cAqw4i_UN3v4utt7CZFB4yfLbVFA",
            "SplmtryData": {
              "PlcAndNm": "PLACE",
              "Envlp": {}
            }
          }
        }
      },
      "type": "FIXED_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 51,
    "priority": 1,
    "description": "ttkpayeefsp PUT Notifications Failure Test-case due to invalid FSPIOP-Destination",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "equal",
          "value": "testingtoolkitdfsp",
          "path": "FSPIOP-Source"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "ttkpayeefsp",
          "path": "FSPIOP-Destination"
        },
        {
          "fact": "body",
          "operator": "numericEqual",
          "value": "104",
          "path": "amount.amount"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {
        "headers": {
          "FSPIOP-Destination": "doesnotexistfsp"
        },
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 52,
    "priority": 1,
    "description": "ttkpayeefsp PATCH Notifications Failure Test-case due to invalid fulfilment",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "equal",
          "value": "testingtoolkitdfsp",
          "path": "FSPIOP-Source"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "ttkpayeefsp",
          "path": "FSPIOP-Destination"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "application/vnd.interoperability.transfers+json;version=1.1",
          "path": "Content-Type"
        },
        {
          "fact": "body",
          "operator": "numericEqual",
          "value": "103",
          "path": "amount.amount"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {
        "body": {
          "fulfilment": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8",
          "completedTimestamp": "{$function.generic.curDateISO}",
          "transferState": "RESERVED",
          "extensionList": null
        },
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 53,
    "priority": 1,
    "description": "ttkpayeefsp PATCH Notifications Failure Test-case due to invalid FSPIOP-Destination",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "equal",
          "value": "testingtoolkitdfsp",
          "path": "FSPIOP-Source"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "ttkpayeefsp",
          "path": "FSPIOP-Destination"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "application/vnd.interoperability.transfers+json;version=1.1",
          "path": "Content-Type"
        },
        {
          "fact": "body",
          "operator": "numericEqual",
          "value": "102",
          "path": "amount.amount"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {
        "headers": {
          "FSPIOP-Destination": "doesnotexistfsp"
        },
        "body": {
          "transferState": "RESERVED"
        },
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 54,
    "priority": 1,
    "description": "ttkpayeefsp PATCH Notifications Success Test-case",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "equal",
          "value": "testingtoolkitdfsp",
          "path": "FSPIOP-Source"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "ttkpayeefsp",
          "path": "FSPIOP-Destination"
        },
        {
          "fact": "headers",
          "operator": "equal",
          "value": "application/vnd.interoperability.transfers+json;version=1.1",
          "path": "Content-Type"
        },
        {
          "fact": "body",
          "operator": "numericEqual",
          "value": "101",
          "path": "amount.amount"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {
        "body": {
          "transferState": "RESERVED"
        },
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 61,
    "priority": 1,
    "description": "get /parties/{Type}/{ID} for pinkbank",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "headers",
          "operator": "equal",
          "value": "pinkbankfsp",
          "path": "FSPIOP-Source"
        },
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.parties+json;version=1.0",
          "FSPIOP-Source": "greenbankfsp"
        },
        "body": {
          "party": {
            "partyIdInfo": {
              "fspId": "greenbankfsp"
            },
            "merchantClassificationCode": null,
            "name": "Justin Pierre",
            "personalInfo": {
              "complexName": {
                "firstName": "Justin",
                "middleName": "Pierre",
                "lastName": "Trudeau"
              },
              "dateOfBirth": "1971-12-25"
            }
          }
        },
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 101,
    "priority": 1,
    "description": "get /parties/{Type}/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}",
      "params": {
        "headers": {
          "Content-Type": "application/vnd.interoperability.parties+json;version=1.0"
        },
        "body": {
          "party": {
            "partyIdInfo": {
              "partySubIdOrType": null
            }
          }
        },
        "scripts": {}
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 102,
    "priority": 1,
    "description": "post /quotes",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/quotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/quotes/{ID}",
      "params": {
        "body": {
          "transferAmount": {
            "currency": "{$request.body.amount.currency}",
            "amount": "{$environment.quoteTransferAmount}"
          },
          "payeeReceiveAmount": {
            "currency": "{$request.body.amount.currency}",
            "amount": "{$environment.quotePayeeReceiveAmount}"
          },
          "payeeFspFee": {
            "currency": "{$request.body.amount.currency}",
            "amount": "{$environment.quotePayeeFspFee}"
          },
          "payeeFspCommission": {
            "currency": "{$request.body.amount.currency}",
            "amount": "{$environment.quotePayeeFspCommission}"
          },
          "expiration": "{$environment.quoteExpiration}"
        },
        "scripts": {
          "exec": [
            "const quoteBody = JSON.parse(request.body)",
            "environment.quoteTransferAmount = quoteBody.amount.amount",
            "environment.quotePayeeFspFee = 0.2",
            "environment.quotePayeeFspCommission = 0.3",
            "environment.quotePayeeReceiveAmount = quoteBody.amount.amount",
            "if (quoteBody.amountType === 'RECEIVE') {",
            "  environment.quoteTransferAmount = (+quoteBody.amount.amount) + environment.quotePayeeFspFee + environment.quotePayeeFspCommission",
            "}",
            "environment.quoteExpiration =new Date(new Date().getTime() + 24 * 60 * 60 * 1000).toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 103,
    "priority": 1,
    "description": "post /transfers",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 104,
    "priority": 1,
    "description": "post /transactionRequests",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transactionRequests"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transactionRequests/{ID}",
      "params": {
        "body": {
          "transactionRequestState": "RECEIVED"
        }
      },
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 105,
    "priority": 1,
    "description": "get /quotes/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/quotes/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/quotes/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 106,
    "priority": 1,
    "description": "get /participants/{Type}/{ID}/{SubId}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/participants/{Type}/{ID}/{SubId}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/participants/{Type}/{ID}/{SubId}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 107,
    "priority": 1,
    "description": "post /participants/{Type}/{ID}/{SubId}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/participants/{Type}/{ID}/{SubId}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/participants/{Type}/{ID}/{SubId}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 108,
    "priority": 1,
    "description": "get /participants/{Type}/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/participants/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/participants/{Type}/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 109,
    "priority": 1,
    "description": "post /participants/{Type}/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/participants/{Type}/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/participants/{Type}/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 110,
    "priority": 1,
    "description": "post /participants",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/participants"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/participants/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 111,
    "priority": 1,
    "description": "get /parties/{Type}/{ID}/{SubId}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{Type}/{ID}/{SubId}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/parties/{Type}/{ID}/{SubId}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 112,
    "priority": 1,
    "description": "get /transactionRequests/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transactionRequests/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transactionRequests/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 113,
    "priority": 1,
    "description": "get /authorizations/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/authorizations/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/authorizations/{ID}",
      "params": {
        "body": {
          "responseType": "ENTERED"
        }
      },
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 114,
    "priority": 1,
    "description": "get /transfers/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transfers/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 115,
    "priority": 1,
    "description": "get /transactions/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transactions/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/transactions/{ID}",
      "params": {
        "body": {
          "transactionState": "COMPLETED"
        }
      },
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 116,
    "priority": 1,
    "description": "get /bulkQuotes/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/bulkQuotes/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 117,
    "priority": 1,
    "description": "post /bulkQuotes",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/bulkQuotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/bulkQuotes/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 118,
    "priority": 1,
    "description": "get /bulkTransfers/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/bulkTransfers/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "type": "callback",
    "version": 1,
    "ruleId": 119,
    "priority": 1,
    "description": "post /bulkTransfers",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "fspiop",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/bulkTransfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/bulkTransfers/{ID}",
      "params": {},
      "delay": 0,
      "type": "MOCK_CALLBACK"
    }
  },
  {
    "ruleId": 151,
    "priority": 1,
    "description": "get /fxQuotes/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "fspiop",
      "asynchronous": true,
      "additionalApi": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxQuotes/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxQuotes/{ID}",
      "params": {
        "scripts": {
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "{$request.headers.content-type}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Source": "{$request.headers.fspiop-destination}"
        },
        "body": {
          "condition": "HOr33-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks",
          "conversionTerms": {
            "conversionId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "initiatingFsp": "testingtoolkitdfsp",
            "counterPartyFsp": "fxp_123",
            "amountType": "RECEIVE",
            "sourceAmount": {
              "currency": "USD",
              "amount": "105.23"
            },
            "targetAmount": {
              "currency": "EUR",
              "amount": "100"
            },
            "expiration": "2016-05-24T08:38:08.699-04:00",
            "charges": [
              {
                "chargeType": "Conversion fee",
                "sourceAmount": {
                  "currency": "USD",
                  "amount": "10"
                },
                "targetAmount": {
                  "currency": "AED",
                  "amount": "9.5"
                }
              }
            ],
            "determiningTransferId": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          }
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 152,
    "priority": 1,
    "description": "post /fxTransfers",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "fspiop",
      "asynchronous": true,
      "additionalApi": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxTransfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxTransfers/{ID}",
      "params": {
        "scripts": {
          "scriptingEngine": "postman"
        },
        "headers": {
          "Content-Type": "{$request.headers.content-type}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Source": "{$request.body.counterPartyFsp}"
        },
        "body": {
          "fulfilment": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8",
          "completedTimestamp": "2016-05-24T08:38:08.699-04:00",
          "conversionState": "RESERVED"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 153,
    "priority": 1,
    "description": "get /fxTransfers/{ID}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "fspiop",
      "asynchronous": true,
      "additionalApi": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxTransfers/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxTransfers/{ID}",
      "params": {
        "scripts": {
          "scriptingEngine": "postman"
        },
        "headers": {
          "Content-Type": "{$request.headers.content-type}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Source": "{$request.headers.fspiop-destination}"
        },
        "body": {
          "fulfilment": "WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8",
          "completedTimestamp": "2016-05-24T08:38:08.699-04:00",
          "conversionState": "RESERVED"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 154,
    "priority": 1,
    "description": "get /services/FXP",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "fspiop",
      "asynchronous": true,
      "additionalApi": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/services/FXP"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/services/FXP",
      "params": {
        "scripts": {
          "scriptingEngine": "postman"
        },
        "headers": {
          "Content-Type": "{$request.headers.content-type}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Source": "{$request.headers.fspiop-destination}"
        },
        "body": {
          "providers": [
            "fxp_123"
          ]
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 155,
    "priority": 1,
    "description": "get /services/FXP/{SourceCurrency}/{TargetCurrency}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "fspiop",
      "asynchronous": true,
      "additionalApi": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/services/FXP/{SourceCurrency}/{TargetCurrency}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/services/FXP/{SourceCurrency}/{TargetCurrency}",
      "params": {
        "scripts": {
          "scriptingEngine": "postman"
        },
        "body": {
          "providers": [
            "fxp_123"
          ]
        },
        "headers": {
          "Content-Type": "{$request.headers.content-type}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Source": "hub_1"
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  },
  {
    "ruleId": 156,
    "priority": 1,
    "description": "post /fxQuotes",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 2,
      "type": "fspiop",
      "asynchronous": true,
      "additionalApi": true,
      "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxQuotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": "put",
      "path": "/fxQuotes/{ID}",
      "params": {
        "scripts": {
          "scriptingEngine": "javascript"
        },
        "headers": {
          "Content-Type": "{$request.headers.content-type}",
          "Date": "{$request.headers.date}",
          "FSPIOP-Source": "{$request.headers.fspiop-destination}"
        },
        "body": {
          "condition": "HOr33-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks",
          "conversionTerms": {
            "conversionId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "initiatingFsp": "testingtoolkitdfsp",
            "counterPartyFsp": "fxp_123",
            "amountType": "RECEIVE",
            "sourceAmount": {
              "currency": "USD",
              "amount": "105.23"
            },
            "targetAmount": {
              "currency": "EUR",
              "amount": "100"
            },
            "expiration": "2016-05-24T08:38:08.699-04:00",
            "charges": [
              {
                "chargeType": "Conversion fee",
                "sourceAmount": {
                  "currency": "USD",
                  "amount": "10"
                },
                "targetAmount": {
                  "currency": "AED",
                  "amount": "9.5"
                }
              }
            ],
            "determiningTransferId": "b51ec534-ee48-4575-b6a9-ead2955b8069"
          }
        }
      },
      "type": "MOCK_CALLBACK"
    },
    "type": "callback",
    "version": 1
  }
]