{
  "/authorizations": {
    "post": {
      "successCallback": {
        "method": "put",
        "path": "/authorizations/{ID}",
        "pathPattern": "/authorizations/{$request.body.transactionRequestId}",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        }
      },
      "errorCallback": {
        "method": "put",
        "path": "/authorizations/{ID}/error",
        "pathPattern": "/authorizations/{$request.params.ID}/error",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        }
      }
    }
  },
  "/transfers": {
    "post": {
      "successCallback": {
        "method": "put",
        "path": "/transfers/{ID}",
        "pathPattern": "/transfers/{$request.body.transferId}",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        }
      },
      "errorCallback": {
        "method": "put",
        "path": "/transfers/{ID}/error",
        "pathPattern": "/transfers/{$request.body.transferId}/error",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        }
      }
    }
  },
  "/quotes": {
    "post": {
      "successCallback": {
        "method": "put",
        "path": "/quotes/{ID}",
        "pathPattern": "/quotes/{$request.body.quoteId}",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        },
        "bodyOverride": {
          "transferAmount": {
            "currency": "{$request.body.amount.currency}",
            "amount": "{$request.body.amount.amount}"
          }
        }
      },
      "errorCallback": {
        "method": "put",
        "path": "/quotes/{ID}/error",
        "pathPattern": "/quotes/{$request.body.quoteId}/error",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        }
      }
    }
  },
  "/parties/{Type}/{ID}": {
    "get": {
      "successCallback": {
        "method": "put",
        "path": "/parties/{Type}/{ID}",
        "pathPattern": "/parties/{$request.params.Type}/{$request.params.ID}",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        },
        "bodyOverride": {
          "party": {
            "partyIdInfo": {
              "partyIdType": "{$request.params.Type}",
              "partyIdentifier": "{$request.params.ID}",
              "fspId": "{$config.FSPID}"
            }
          }
        }
      },
      "errorCallback": {
        "method": "put",
        "path": "/parties/{Type}/{ID}/error",
        "pathPattern": "/parties/{$request.params.Type}/{$request.params.ID}/error",
        "headerOverride": {
          "FSPIOP-Source": "{$config.FSPID}",
          "FSPIOP-Destination": "{$request.headers.fspiop-source}",
          "Content-Type": "{$session.negotiatedContentType}",
          "Date": "{$request.headers.date}"
        }
      }
    }
  }
}