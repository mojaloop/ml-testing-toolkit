{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/gsma/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a Transaction",
        "description": "Provided with a valid object representation, this endpoint allows for a new transaction to be created",
        "operationId": "transactionsPOST",
        "parameters": [
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Transaction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTransaction"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/transactions/{transactionReference}/reversals": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create A Reversal",
        "description": "Provided with a valid object representation, this endpoint allows for a new reversal to be created",
        "operationId": "transactionsTransactionReferenceReversalsPOST",
        "parameters": [
          {
            "name": "transactionReference",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReversal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Transaction Reversal response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReversal"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/transactions/type/{transactionType}": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a Transaction",
        "description": "Provided with a valid object representation, this endpoint allows for a new transaction to be created for a given transaction type passed via the URL.",
        "operationId": "transactionstypetransactionTypePUT",
        "parameters": [
          {
            "name": "transactionType",
            "in": "path",
            "description": "Identifies the type of transaction that is to be created.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "billpay",
                "deposit",
                "disbursement",
                "transfer",
                "merchantpay",
                "inttransfer",
                "adjustment",
                "reversal",
                "withdrawal"
              ]
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTransactionType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Transaction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTransactionType"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/quotations": {
      "post": {
        "tags": [
          "Quotations"
        ],
        "summary": "Create A New Quotation",
        "description": "Provided with a valid object representation, this endpoint allows for a new quotation to be created.",
        "operationId": "quotationsPOST",
        "parameters": [
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestQuotation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Quotation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseQuotation"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/bills/{billReference}/payments": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Payments for a Bill",
        "description": "This endpoint allows for bill payments for a given bill reference to be returned",
        "operationId": "abillsBillReferencePaymentsGET",
        "parameters": [
          {
            "name": "billReference",
            "in": "path",
            "description": "Path variable to uniquely identify a bill.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a list of Bill Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create A Bill Payment",
        "description": "Provided with a valid object representation, this endpoint allows for a new bill payment to be created.",
        "operationId": "billsBillReferencePaymentsPOST",
        "parameters": [
          {
            "name": "billReference",
            "in": "path",
            "description": "Path variable to uniquely identify a bill.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBillPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Bill Payment response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/batchtransactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create A Transaction Batch",
        "description": "Provided with a valid object representation, this endpoint allows for a new transaction batch to be created",
        "operationId": "batchtransactionsPOST",
        "parameters": [
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBatchTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identityType}": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create an Account",
        "description": "Provided with a valid object representation, this endpoint allows for a new account to be created",
        "operationId": "accountsPOST",
        "parameters": [
          {
            "name": "identityType",
            "in": "path",
            "description": "Identifies the type of identity that is associated with the Account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "individual"
              ]
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents an Account creation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccount"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/links": {
      "post": {
        "tags": [
          "Links"
        ],
        "summary": "Create A Link",
        "description": "Provided with a valid object representation, this endpoint allows a new link to be created for a specific account.",
        "operationId": "accountsIdentifierTypeIdentifierLinksPOST",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Link response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLink"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/debitmandates": {
      "post": {
        "tags": [
          "Debit Mandates"
        ],
        "summary": "Create A Debit Mandate",
        "description": "Provided with a valid object representation, this endpoint allows for a new debit mandate to be created for a specific account.",
        "operationId": "accountsIdentifierTypeIdentifierDebitmandatesPOST",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDebitMandate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Debit Mandate response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDebitMandate"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/bills/{billReference}/payments": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Payments for a Bill",
        "description": "This endpoint allows for bill payments for a specific account to be returned",
        "operationId": "accountsIdentifierTypeIdentifierBillsBillReferencePaymentsGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "billReference",
            "in": "path",
            "description": "Path variable to uniquely identify a bill.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a list of Bill Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create A Bill Payment",
        "description": "Provided with a valid object representation, this endpoint allows for a new bill payment to be created for a specific account.",
        "operationId": "accountsIdentifierTypeIdentifierBillsBillReferencePaymentsPOST",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "billReference",
            "in": "path",
            "description": "Path variable to uniquely identify a bill.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBillPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Bill Payment response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/bills/payments": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Payments for a Bill without a Bill Reference",
        "description": "This endpoint allows for bill payments for a specific account to be returned",
        "operationId": "accountsIdentifierTypeIdentifierBillsBillPaymentsGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a list of Bill Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment2"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create A Bill Payment without a Bill Reference",
        "description": "Provided with a valid object representation, this endpoint allows for a new bill payment to be created for a specific account.",
        "operationId": "accountsIdentifierTypeIdentifierBillsBillPaymentsPOST",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBillPayment2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Bill Payment response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment2"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/authorisationcodes": {
      "get": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "View Authorisation Codes for a given account",
        "description": "This endpoint allows allows a mobile money payer or payee to view authorisation codes for a given account.",
        "operationId": "accountsIdentifierTypeIdentifierAuthorisationCodesGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "codeState",
            "in": "query",
            "description": "Allows returned records to be filtered on state of the authorisation code.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an authorisation codes response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthorisationCode"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "Create an Authorisation Code via an account identifier.",
        "description": "This endpoint allows allows a mobile money payer or payee to generate a code which when presented to the other party, can be redeemed for an amount set by the payer or payee, depending upon the use case.",
        "operationId": "accountsIdentifierTypeIdentifierAuthorisationCodesPOST",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAuthorisationCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents an Authorisation Code response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthorisationCode"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/links": {
      "post": {
        "tags": [
          "Links"
        ],
        "summary": "Create A Link",
        "description": "Provided with a valid object representation, this endpoint allows a new link to be created for a specific account",
        "operationId": "accountsAccountIdLinksPOST",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Link response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLink"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/debitmandates": {
      "post": {
        "tags": [
          "Debit Mandates"
        ],
        "summary": "Create A Debit Mandate",
        "description": "Provided with a valid object representation, this endpoint allows for a new debit mandate to be created for a specific account.",
        "operationId": "accountsAccountIdDebitmandatesPOST",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestDebitMandate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Debit Mandate response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDebitMandate"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/bills/{billReference}/payments": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Payments for a Bill",
        "description": "This endpoint allows for bill payments for a specific account to be returned",
        "operationId": "accountsAccountIdBillsBillReferencePaymentsGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "billReference",
            "in": "path",
            "description": "Path variable to uniquely identify a bill.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a list of Bill Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create A Bill Payment",
        "description": "Provided with a valid object representation, this endpoint allows for a new bill payment to be created for a specific account",
        "operationId": "accountsAccountIdBillsBillReferencePaymentsPOST",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "billReference",
            "in": "path",
            "description": "Path variable to uniquely identify a bill.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBillPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Bill Payment response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/bills/payments": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Payments for a Bill without a Bill Reference",
        "description": "This endpoint allows for bill payments for a specific account to be returned",
        "operationId": "accountsAccountIdBillsBillPaymentsGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a list of Bill Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment2"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create A Bill Payment without a Bill Reference",
        "description": "Provided with a valid object representation, this endpoint allows for a new bill payment to be created for a specific account",
        "operationId": "accountsAccountIdBillsBillPaymentsPOST",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBillPayment2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents a Bill Payment response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillPayment2"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/authorisationcodes": {
      "get": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "View Authorisation Codes for a given account",
        "description": "This endpoint allows allows a mobile money payer or payee to view authorisation codes for a given account.",
        "operationId": "accountsAccountIdAuthorisationcodesGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "codeState",
            "in": "query",
            "description": "Allows returned records to be filtered on state of the authorisation code.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an authorisation codes response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthorisationCode"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "Create an Authorisation Code",
        "description": "this endpoint allows allows a mobile money payer or payee to generate a code which when presented to the other party, can be redeemed for an amount set by the payer or payee, depending upon the use case",
        "operationId": "accountsAccountIdAuthorisationcodesPOST",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAuthorisationCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Represents an Authorisation Code response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthorisationCode"
                }
              }
            }
          },
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/channel/workflow/{workflowInstanceKey}/cancel": {
      "post": {
        "tags": [
          "workflow-api-controller"
        ],
        "operationId": "workflowKey",
        "parameters": [
          {
            "name": "workflowInstanceKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/channel/workflow/resolve": {
      "post": {
        "tags": [
          "workflow-api-controller"
        ],
        "operationId": "workflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/channel/transfer": {
      "post": {
        "tags": [
          "transfer-api-controller"
        ],
        "operationId": "transfer",
        "parameters": [
          {
            "name": "Platform-TenantId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/channel/transactionRequest": {
      "post": {
        "tags": [
          "transaction-api-controller"
        ],
        "operationId": "transaction",
        "parameters": [
          {
            "name": "Platform-TenantId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/channel/transaction/{transactionId}/resolve": {
      "post": {
        "tags": [
          "transaction-api-controller"
        ],
        "operationId": "transactionId",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/channel/partyRegistration": {
      "post": {
        "tags": [
          "party-registration-api-controller"
        ],
        "operationId": "partyRegistration",
        "parameters": [
          {
            "name": "Platform-TenantId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/channel/job/resolve": {
      "post": {
        "tags": [
          "job-api-controller"
        ],
        "operationId": "job",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/channel/collection": {
      "post": {
        "tags": [
          "collection-api-controller"
        ],
        "operationId": "collection",
        "parameters": [
          {
            "name": "Platform-TenantId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/transactions/{transactionReference}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "View A Transaction",
        "description": "This endpoint returns the details of a transaction",
        "operationId": "transactionsTransactionReferenceGET",
        "parameters": [
          {
            "name": "transactionReference",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Transaction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update A Transaction",
        "description": "This endpoint allows the transactionStatus of a transaction to be updated.",
        "operationId": "transactionsTransactionReferencePATCH",
        "parameters": [
          {
            "name": "transactionReference",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/requeststates/{serverCorrelationId}": {
      "get": {
        "tags": [
          "Supporting"
        ],
        "summary": "View A Request State",
        "description": "This endpoint returns a specific request state",
        "operationId": "requeststatesServerCorrelationIdGET",
        "parameters": [
          {
            "name": "serverCorrelationId",
            "in": "path",
            "description": "Path variable to uniquely identify a request state. Must be supplied as a UUID.",
            "required": true,
            "schema": {
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Supporting"
        ],
        "summary": "Update A Request State",
        "description": "This endpoint updates a specific request state. This operation is to be deprecated. Please refer to Callback definitions for the revised approach to implementing asynchronous callbacks.",
        "operationId": "requeststatesServerCorrelationIdPATCH",
        "parameters": [
          {
            "name": "serverCorrelationId",
            "in": "path",
            "description": "Path variable to uniquely identify a request state. Must be supplied as a UUID.",
            "required": true,
            "schema": {
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "An empty response is returned for a synchronous successful patch."
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/batchtransactions/{batchId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "View A Transaction Batch",
        "description": "This endpoint returns the current status of a batch transaction",
        "operationId": "batchtransactionsBatchIdGET",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction batch.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Batch Transaction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBatchTransaction"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update A Transaction Batch",
        "description": "This endpoint updates a specific transaction batch. Only the batchStatus field can be modified.",
        "operationId": "batchtransactionsBatchIdPATCH",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction batch.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View an Account",
        "description": "This endpoint returns the details of an account.",
        "operationId": "accountsIdentifierTypeIdentifierGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccount"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an Account",
        "description": "This endpoint updates an account. Currently, accountStatus and accountSubStatus fields can be updated.",
        "operationId": "accountsIdentifierTypeIdentifierPATCH",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/links/{linkReference}": {
      "get": {
        "tags": [
          "Links"
        ],
        "summary": "View A Link",
        "description": "This endpoint returns a specific link for a given account.",
        "operationId": "accountsIdentifierTypeIdentifierLinksLinkReferenceGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "linkReference",
            "in": "path",
            "description": "Path variable to uniquely identify a link.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Link response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLink"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Links"
        ],
        "summary": "Update A Link",
        "description": "This endpoint updates a specific link. mode and status fields are modifiable.",
        "operationId": "accountsIdentifierTypeIdentifierLinksLinkReferencePATCH",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "linkReference",
            "in": "path",
            "description": "Path variable to uniquely identify a link.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/identities/{identityId}": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an Account Identity",
        "description": "This endpoint updates an account identity. identityStatus, kycVerificationStatus, kycVerificationEntity and kycLevel field updates are permitted.",
        "operationId": "accountIdentitiesIdentifierTypeIdentifierPATCH",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "identityId",
            "in": "path",
            "description": "A unique id for the identity as assigned by the API Provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/debitmandates/{debitMandateReference}": {
      "get": {
        "tags": [
          "Debit Mandates"
        ],
        "summary": "View A Debit Mandate",
        "description": "This endpoint returns a specific debit mandate linked to an account.",
        "operationId": "accountsIdentifierTypeIdentifierDebitmandatesDebitMandateReferenceGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "debitMandateReference",
            "in": "path",
            "description": "Path variable to uniquely identify a Debit Mandate Reference.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Debit Mandate response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDebitMandate"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Debit Mandates"
        ],
        "summary": "Update A Debit Mandate",
        "description": "This endpoint updates a specific debit mandate linked to an account. The following fields are modifiable] mandateStatus, startDate, endDate, frequencyType, numberOfPayments.",
        "operationId": "accountsIdentifierTypeIdentifierDebitmandatesDebitMandateReferencePATCH",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "debitMandateReference",
            "in": "path",
            "description": "Path variable to uniquely identify a Debit Mandate Reference.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/authorisationcodes/{authorisationCode}": {
      "get": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "View an Authorisation Code",
        "description": "This endpoint returns a specific Authorisation Code linked to an account.",
        "operationId": "accountsIdentifierTypeIdentifierAuthorisationCodesAuthorisationCodeGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "authorisationCode",
            "in": "path",
            "description": "Path variable to uniquely identify an authorisation code.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Authorisation Code response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthorisationCode"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "Cancel an Authorisation Code",
        "description": "This endpoint updates a specific Authorisation Code linked to an account. The only permissable modification is to set codeState to cancelled.",
        "operationId": "accountsIdentifierTypeIdentifierAuthorisationCodesAuthorisationCodePATCH",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "authorisationCode",
            "in": "path",
            "description": "Path variable to uniquely identify an authorisation code.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View an Account",
        "description": "This endpoint returns details for a given account. This API accepts multiple account identifiers",
        "operationId": "accountsAccountIdGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccount"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an Account",
        "description": "This endpoint updates an account. Currently, accountStatus and accountSubStatus fields can be updated.",
        "operationId": "accountsAccountIdPATCH",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/links/{linkReference}": {
      "get": {
        "tags": [
          "Links"
        ],
        "summary": "View A Link",
        "description": "This endpoint returns a specific link",
        "operationId": "accountsAccountIdLinksLinkReferenceGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "linkReference",
            "in": "path",
            "description": "Path variable to uniquely identify a link.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Link response\"",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLink"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Links"
        ],
        "summary": "Update A Link",
        "description": "This endpoint updates a specific link. mode and status fields are modifiable.",
        "operationId": "accountsAccountIdLinksLinkReferencePATCH",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "linkReference",
            "in": "path",
            "description": "Path variable to uniquely identify a link.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/identities/{identityId}": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an Account Identity.",
        "description": "This endpoint updates an account identity. identityStatus, kycVerificationStatus, kycVerificationEntity and kycLevel field updates are permitted.",
        "operationId": "accountIdentitiesAccountIdPATCH",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "identityId",
            "in": "path",
            "description": "A unique id for the identity as assigned by the API Provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/debitmandates/{debitMandateReference}": {
      "get": {
        "tags": [
          "Debit Mandates"
        ],
        "summary": "View A Debit Mandate",
        "description": "This endpoint returns a specific debit mandate linked to an account",
        "operationId": "accountsAccountIdDebitmandatesDebitMandateReferenceGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "debitMandateReference",
            "in": "path",
            "description": "Path variable to uniquely identify a Debit Mandate Reference.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Debit Mandate response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDebitMandate"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Debit Mandates"
        ],
        "summary": "Update A Debit Mandate",
        "description": "This endpoint updates a specific debit mandate linked to an account. The following fields are modifiable] mandateStatus, startDate, endDate, frequencyType, numberOfPayments.",
        "operationId": "accountsAccountIdDebitmandatesDebitMandateReferencePATCH",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "debitMandateReference",
            "in": "path",
            "description": "Path variable to uniquely identify a Debit Mandate Reference.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/authorisationcodes/{authorisationCode}": {
      "get": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "View an Authorisation Code",
        "description": "This endpoint returns a specific Authorisation Code linked to an account",
        "operationId": "accountsAccountIdAuthorisationCodeAuthorisationCodeGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "authorisationCode",
            "in": "path",
            "description": "Path variable to uniquely identify an authorisation code.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Authorisation Code response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAuthorisationCode"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authorisation Codes"
        ],
        "summary": "Update an Authorisation Code",
        "description": "This endpoint updates a specific Authorisation Code linked to an account. The only permissable modification is to set codeState to cancelled.",
        "operationId": "accountsAccountIdAuthorisationCodesAuthorisationCodePATCH",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "authorisationCode",
            "in": "path",
            "description": "Path variable to uniquely identify an authorisation code.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Header parameter to uniquely identify the request. Must be supplied as a UUID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Callback-URL",
            "in": "header",
            "description": "The URL supplied by the client that will be used to return the callback in the form of a HTTP PUT.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Represents the request body of a batch of generic Patch operation.",
                "items": {
                  "$ref": "#/components/schemas/RequestGenericPatch"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Represents an Asynchronous response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "204": {
            "description": "An empty response is returned for a synchronous successful patch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestStateObject"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/statemententries/{transactionReference}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Specific Statement",
        "description": "The Statement Entries API enables generic representations of transactions to be returned. Typically, the returned representations are used for the purposes of presenting a statement to the account holder. In order to return a statement, a transaction reference must be specified.",
        "operationId": "statemententriesTransactionReferenceGET",
        "parameters": [
          {
            "name": "transactionReference",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Statement Entries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatementEntries"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/responses/{clientCorrelationId}": {
      "get": {
        "tags": [
          "Supporting"
        ],
        "summary": "View A Response",
        "description": "This endpoint returns a specific response.",
        "operationId": "responsesClientCorrelationIdGET",
        "parameters": [
          {
            "name": "clientCorrelationId",
            "in": "path",
            "description": "Path variable to uniquely identify a response object. Must be supplied as a UUID.",
            "required": true,
            "schema": {
              "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Response object response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/quotations/{quotationReference}": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "View A Quotation",
        "description": "This endpoint returns a specific quotation",
        "operationId": "quotationsQuotationReferenceGET",
        "parameters": [
          {
            "name": "quotationReference",
            "in": "path",
            "description": "Path variable to uniquely identify the quotation.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Quotation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseQuotation"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/heartbeat": {
      "get": {
        "tags": [
          "Supporting"
        ],
        "summary": "Check API availability",
        "description": "This endpoint returns the current status of the API",
        "operationId": "heartbeatGET",
        "parameters": [
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Heartbeat response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHeartbeat"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/billcompanies": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Bill Companies",
        "description": "The Bill Companies API is used to return a list of Service Providers that accept Bill Payments.",
        "operationId": "billCompaniesGET",
        "parameters": [
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Bill Companies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBillCompanies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/billcompanies/{serviceProvider}": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View a Specific Bill Company",
        "description": "This Bill Companies API is used to return a information for a specific Service Providers that accepts Bill Payments.",
        "operationId": "billCompaniesServiceProviderGET",
        "parameters": [
          {
            "name": "serviceProvider",
            "in": "path",
            "description": "The identifier for the Bill Payment Service Provider.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific Bill Payment Service Provider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBillCompanies"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/batchtransactions/{batchId}/rejections": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "View Batch Rejections",
        "description": "This endpoint returns rejected transactions for a specific batch\"",
        "operationId": "batchtransactionsBatchIdRejectionsGET",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction batch.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents a Batch Transaction Rejection response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBatchTransactionRejection"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/batchtransactions/{batchId}/completions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "View Batch Completions",
        "description": "This endpoint returns completed transactions for a specific batch",
        "operationId": "batchtransactionsBatchIdCompletionsGET",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "description": "Path variable to uniquely identify the transaction batch.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Batch Completions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBatchTransactionCompletion"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/transactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Specific Transaction",
        "description": "This endpoint returns transactions linked to a specific account.",
        "operationId": "accountsIdentifierTypeIdentifierTransactionsGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "description": "Query variable to uniquely identify the transaction status.",
            "required": false,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "Identifies the type of transaction.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "billpay",
                "deposit",
                "disbursement",
                "transfer",
                "merchantpay",
                "inttransfer",
                "adjustment",
                "reversal",
                "withdrawal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTransaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/status": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Status",
        "description": "This endpoint returns the current status of an account.",
        "operationId": "accountsIdentifierTypeIdentifierStatusGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountStatus"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/statemententries": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Statements",
        "description": "The Statement Entries API enables generic representations of transactions to be returned. Typically, the returned representations are used for the purposes of presenting a statement to the account holder. In order to return a statement, an account must be specified.",
        "operationId": "accountsIdentifierTypeIdentifierStatemententriesGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "description": "Query variable to uniquely identify the transaction status.",
            "required": false,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "displayType",
            "in": "query",
            "description": "Query parameter to to identify the display type of the statement entries to be returned.",
            "required": false,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Statement Entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseStatementEntries"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/bills": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Account Bills",
        "description": "This endpoint returns bills linked to an account.",
        "operationId": "accountsIdentifierTypeIdentifierBillsGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBills"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/billcompanies": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Bill Companies",
        "description": "This Bill Companies API is used to return a list of Service Providers that accept Bill Payments for a given account.",
        "operationId": "accountsIdentifierTypeIdentifierBillCompaniesGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Bill Companies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBillCompanies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/balance": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Balance",
        "description": "This endpoint returns the balance of an account.",
        "operationId": "accountsIdentifierTypeIdentifierBalanceGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Balance response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountBalance"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{identifierType}/{identifier}/accountname": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Name",
        "description": "This endpoint returns the name of an account holder.",
        "operationId": "accountsIdentifierTypeIdentifierAccountnameGET",
        "parameters": [
          {
            "name": "identifierType",
            "in": "path",
            "description": "Path variable to specify the type of the identifier that is used to identify the account.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accountid",
                "msisdn",
                "walletid",
                "linkref",
                "consumerno",
                "serviceprovider",
                "storeid",
                "accountcategory",
                "bankaccountno",
                "accountrank",
                "identityalias",
                "iban",
                "swiftbic",
                "sortcode",
                "organisationid",
                "bankname",
                "bankaccounttitle",
                "username",
                "emailaddress",
                "mandatereference"
              ]
            }
          },
          {
            "name": "identifier",
            "in": "path",
            "description": "Path variable that contains the account identifier.",
            "required": true,
            "schema": {
              "maxLength": 256,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Name response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountName"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Specific Transaction",
        "description": "This endpoint returns transactions linked to a specific account",
        "operationId": "accountsAccountIdTransactionsGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "description": "Query variable to uniquely identify the transaction status.",
            "required": false,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "Identifies the type of transaction.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "billpay",
                "deposit",
                "disbursement",
                "transfer",
                "merchantpay",
                "inttransfer",
                "adjustment",
                "reversal",
                "withdrawal"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTransaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/status": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Status",
        "description": "This endpoint returns the current status of an account. This API accepts multiple identifiers",
        "operationId": "accountsAccountIdStatusGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountStatus"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/statemententries": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Statements",
        "description": "The Statement Entries API enables generic representations of transactions to be returned. Typically, the returned representations are used for the purposes of presenting a statement to the account holder. In order to return a statement, an account must be specified.",
        "operationId": "accountsAccountIdStatemententriesGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "description": "Query variable to uniquely identify the transaction status.",
            "required": false,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "displayType",
            "in": "query",
            "description": "Query parameter to to identify the display type of the statement entries to be returned.",
            "required": false,
            "schema": {
              "maxLength": 256,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Statement Entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseStatementEntries"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/bills": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Account Bills",
        "description": "This endpoint returns bills linked to an account",
        "operationId": "accountsAccountIdBillsGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDateTime",
            "in": "query",
            "description": "Indicates the minimum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "toDateTime",
            "in": "query",
            "description": "Indicates the maximum creation date for which records should be returned.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBills"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/billcompanies": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "View Bill Companies",
        "description": "This Bill Companies API is used to return a list of Service Providers that accept Bill Payments for a given account.",
        "operationId": "accountsAccountIdBillCompaniesGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Supports pagination. If this is not supplied, then the server will apply a limit of 50 records returned for each request.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Supports pagination. This value will indicate the cursor position from where to retrieve the set of records. For example, a limit of 50 and offset of 10 will return records 11 to 60.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represent a list of Bill Companies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBillCompanies"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/balance": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Balance",
        "description": "This endpoint returns the balance of an account",
        "operationId": "accountsAccountIdBalanceGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Balance response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountBalance"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/{accountId}/accountname": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Name",
        "description": "This endpoint returns the status of a given account.",
        "operationId": "accountsAccountIdAccountnameGET",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Path variable to uniquely identify an account. Up to three account identifiers can be supplied.  Identifiers are delimited by $ and values are delimited by @. Example: organisationid@1234$accountid@3333. Valid account identifiers are accountcategory, bankaccountno, accountrank, identityalias, iban, accountid, msisdn, swiftbic, sortcode, organisationid, username, walletid, linkref, consumerno, serviceprovider, storeid, bankname, bankaccounttitle, emailaddress, mandatereference.",
            "required": true,
            "schema": {
              "pattern": "^((accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+))(\\$(accountcategory|bankaccountno|accountrank|identityalias|iban|accountid|msisdn|swiftbic|sortcode|organisationid|username|walletid|linkref|consumerno|serviceprovider|storeid|bankname|bankaccounttitle|emailaddress|mandatereference)@([^$\\n]+)){0,2}$",
              "type": "string"
            }
          },
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Name response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountName"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/accounts/balance": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "View Account Balance",
        "description": "This endpoint returns the balance of an account. As the account is not passed as a parameter, the account is assumed to be that of the calling client.",
        "operationId": "accountsBalanceGET",
        "parameters": [
          {
            "name": "X-Date",
            "in": "header",
            "description": "Header parameter to indicate the date and time that the message was originated. It is used for basic message integrity checks, to ensure the request is not stale. Note that the header was previously referenced as 'Date' in version 1.0 of the Mobile Money API.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OffsetDateTime"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "Used to pass pre-shared client's API key to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Bearer",
            "in": "header",
            "description": "Used to pass user’s access token when OAuth 2.0/OIDC authorisation framework is used for end-user authentication.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Id",
            "in": "header",
            "description": "Used to pass pre-shared client's identifier to the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Content-Hash",
            "in": "header",
            "description": "SHA-256 hex digest of the request content (encrypted or plain). Applicable only if basic data integrity checking is to be performed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-1",
            "in": "header",
            "description": "The end-users encrypted security credential. Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-User-Credential-2",
            "in": "header",
            "description": "The end-users encrypted security credential Should only be used when OAuth 2.0/OIDC authorisation framework has not been implemented by the API Provider.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "String containing the channel that was used to originate the request. For example USSD, Web, App.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier-Type",
            "in": "header",
            "description": "A header variable that identifies the type of the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier header.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "lei",
                "swiftbic",
                "organisationid"
              ]
            }
          },
          {
            "name": "X-Account-Holding-Institution-Identifier",
            "in": "header",
            "description": "A header variable that identifies the account holding institution. This header is used to support request routing and should be used in conjunction with the X-Account-Holding-Institution-Identifier-Type header.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Represents an Account Balance response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccountBalance"
                }
              }
            }
          },
          "400": {
            "description": "Represents an Error Caused by the Violation of a Business Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "401": {
            "description": "Represents an Error Caused by an Authorisation Failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "404": {
            "description": "Represents an Error Caused by a Failure to Identify the Target Resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "500": {
            "description": "Represents an Error Caused by a General Server-Side Issue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          },
          "503": {
            "description": "Represents an Error Caused by System Unavailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/gsma/": {
      "get": {
        "tags": [
          "accounts-api-controller"
        ],
        "operationId": "test",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/channel/transfer/{transactionId}": {
      "get": {
        "tags": [
          "transfer-api-controller"
        ],
        "operationId": "transferId",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Platform-TenantId",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "index-api-controller"
        ],
        "operationId": "index",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Chronology": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "calendarType": {
            "type": "string"
          }
        }
      },
      "CustomData": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the type of additional field."
          },
          "value": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the value of the additional field."
          }
        },
        "description": "A collection of key/value pairs. These can be used to populate provider specific fields."
      },
      "Duration": {
        "type": "object",
        "properties": {
          "seconds": {
            "type": "integer",
            "format": "int64"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemporalUnit"
            }
          },
          "zero": {
            "type": "boolean"
          },
          "negative": {
            "type": "boolean"
          }
        }
      },
      "Era": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Fees": {
        "required": [
          "feeAmount",
          "feeCurrency",
          "feeType"
        ],
        "type": "object",
        "properties": {
          "feeType": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Defines the type of fee."
          },
          "feeAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "feeCurrency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          }
        },
        "description": "Returns all fees that are applicable to the object."
      },
      "IdDocument": {
        "required": [
          "idType"
        ],
        "type": "object",
        "properties": {
          "idType": {
            "type": "string",
            "description": "Indicates the type of identification for the KYC subject, e.g. passport, driving licence etc.",
            "enum": [
              "passport",
              "nationalregistration",
              "otherId",
              "drivinglicence",
              "socialsecurity",
              "alienregistration",
              "nationalidcard",
              "employer",
              "taxid",
              "seniorcitizenscard",
              "marriagecertificate",
              "birthcertificate",
              "healthcard",
              "votersid",
              "villageelderLetter",
              "pancard",
              "officialletter"
            ]
          },
          "idNumber": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Reference pertaining to the type of identification for the KYC subject."
          },
          "issueDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "expiryDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "issuer": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the organisation/government entity that issued the ID document."
          },
          "issuerPlace": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Place of issue for the identification type."
          },
          "issuerCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "otherIddescription": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Where an ID Type of otherid is specified, a description of the type of identification can be provided in this field."
          }
        },
        "description": "An array of properties containing the forms of identification that are associated with the subject."
      },
      "Instant": {
        "type": "object",
        "properties": {
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "epochSecond": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InternationalTransferInformation": {
        "required": [
          "originCountry"
        ],
        "type": "object",
        "properties": {
          "quotationReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reference for the quotation that was provided to the sender."
          },
          "quoteId": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "The specific quote associated with the quotation."
          },
          "originCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "deliveryMethod": {
            "type": "string",
            "enum": [
              "directtoaccount",
              "agent",
              "personaldelivery"
            ]
          },
          "receivingCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "relationshipSender": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the relationship (if any) between the sender and the receiver."
          },
          "remittancePurpose": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Field providing a description of the reason for the international remittance."
          },
          "sendingServiceProviderCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          }
        },
        "description": "A collection of properties detailing information specifically used for international transfers."
      },
      "IsoChronology": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "calendarType": {
            "type": "string"
          }
        }
      },
      "Kyc": {
        "type": "object",
        "properties": {
          "birthCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "contactPhone": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Contact phone number (mobile or landline) of the KYC subject."
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Email address of the KYC subject."
          },
          "employerName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Employer name of the KYC subject."
          },
          "gender": {
            "type": "string",
            "enum": [
              "m",
              "f",
              "u"
            ]
          },
          "idDocument": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "An array of properties containing the forms of identification that are associated with the subject.",
            "items": {
              "$ref": "#/components/schemas/IdDocument"
            }
          },
          "nationality": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "occupation": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Occupation of the KYC subject."
          },
          "postalAddress": {
            "$ref": "#/components/schemas/PostalAddress"
          },
          "subjectName": {
            "$ref": "#/components/schemas/SubjectName"
          }
        }
      },
      "LocalDate": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "chronology": {
            "$ref": "#/components/schemas/IsoChronology"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "leapYear": {
            "type": "boolean"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "era": {
            "$ref": "#/components/schemas/Era"
          }
        },
        "description": "Date on which the Bill is due to be paid.",
        "example": "Tue Nov 20 00:00:00 GMT 2018"
      },
      "LocalDateTime": {
        "type": "object",
        "properties": {
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Metadata": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the type of additional field."
          },
          "value": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the value of the additional field."
          }
        },
        "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource."
      },
      "OffsetDateTime": {
        "type": "object",
        "properties": {
          "offset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          }
        },
        "description": "The timestamp indicating when the error occurred."
      },
      "Party": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Provides the account identifier type.",
            "example": "msisdn"
          },
          "value": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Provides the account identifier type value.",
            "example": 33555123456
          }
        },
        "description": "A collection of key/value pairs that enable the redemption account to be identified. Keys include MSISDN and Wallet Identifier."
      },
      "PostalAddress": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "First line of the address."
          },
          "addressLine2": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Second line of the address."
          },
          "addressLine3": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Third line of the address."
          },
          "city": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "City/Town"
          },
          "stateProvince": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "State or Province"
          },
          "postalCode": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Postal Code"
          },
          "country": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          }
        }
      },
      "RequestTransaction": {
        "required": [
          "amount",
          "creditParty",
          "currency",
          "debitParty",
          "type"
        ],
        "type": "object",
        "properties": {
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "originalTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "For reversals and refunds, this field indicates the transaction which is the subject of the reversal."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "billpay",
              "deposit",
              "disbursement",
              "transfer",
              "merchantpay",
              "inttransfer",
              "adjustment",
              "reversal",
              "withdrawal"
            ]
          },
          "subType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          },
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "descriptionText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on a notification SMS and on an account statement."
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "geoCode": {
            "maxLength": 256,
            "minLength": 0,
            "pattern": "^(-?(90|(\\d|[1-8]\\d)(\\.\\d{1,6}){0,1}))\\,{1}(-?(180|(\\d|\\d\\d|1[0-7]\\d)(\\.\\d{1,6}){0,1}))$",
            "type": "string",
            "description": "Indicates the geographic location from where the transaction was initiated.",
            "example": "37.423825,-122.082900"
          },
          "internationalTransferInformation": {
            "$ref": "#/components/schemas/InternationalTransferInformation"
          },
          "oneTimeCode": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A one-time code that can be supplied in the request or can be generated in the response depending upon the use case. An authorisation code can be supplied in this field for requests that have been pre-authorised."
          },
          "recipientKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "senderKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "servicingIdentity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The field is used to identify the servicing identity for transactions, e.g. till, POS ID, assistant ID."
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "receivingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is receiving the transaction."
          },
          "requestingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is requesting the transaction."
          }
        },
        "description": "Represents the request body of a transaction."
      },
      "RequestingOrganisation": {
        "required": [
          "requestingOrganisationIdentifier",
          "requestingOrganisationIdentifierType"
        ],
        "type": "object",
        "properties": {
          "requestingOrganisationIdentifierType": {
            "type": "string",
            "description": "Identifies the identifier type of the requesting organisation.",
            "enum": [
              "lei",
              "swiftbic",
              "organisationid"
            ]
          },
          "requestingOrganisationIdentifier": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Contains the requesting organisation identifier."
          }
        },
        "description": "An object that details the originating organisation of the request."
      },
      "SubjectName": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The given title of the KYC subject, e.g. Mr, Mrs, Dr."
          },
          "firstName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "First name (also referred to as given name) of the KYC subject."
          },
          "middleName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Middle Name of the KYC subject."
          },
          "lastName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Surname (also referred to as last or family name) of the KYC subject."
          },
          "fullName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The full name of the KYC subject."
          },
          "nativeName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The full name expressed as in the native language."
          }
        }
      },
      "TemporalUnit": {
        "type": "object",
        "properties": {
          "dateBased": {
            "type": "boolean"
          },
          "timeBased": {
            "type": "boolean"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "durationEstimated": {
            "type": "boolean"
          }
        }
      },
      "ZoneOffset": {
        "type": "object",
        "properties": {
          "totalSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "rules": {
            "$ref": "#/components/schemas/ZoneRules"
          }
        }
      },
      "ZoneOffsetTransition": {
        "type": "object",
        "properties": {
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "gap": {
            "type": "boolean"
          },
          "dateTimeBefore": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "dateTimeAfter": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "instant": {
            "$ref": "#/components/schemas/Instant"
          },
          "overlap": {
            "type": "boolean"
          }
        }
      },
      "ZoneOffsetTransitionRule": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "timeDefinition": {
            "type": "string",
            "enum": [
              "UTC",
              "WALL",
              "STANDARD"
            ]
          },
          "standardOffset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "dayOfMonthIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "localTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "midnightEndOfDay": {
            "type": "boolean"
          }
        }
      },
      "ZoneRules": {
        "type": "object",
        "properties": {
          "fixedOffset": {
            "type": "boolean"
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransition"
            }
          },
          "transitionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransitionRule"
            }
          }
        }
      },
      "ErrorObject": {
        "required": [
          "errorCategory",
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCategory": {
            "type": "string",
            "description": "The category grouping for the error.",
            "enum": [
              "businessRule",
              "validation",
              "authorisation",
              "identification",
              "internal",
              "serviceUnavailable"
            ]
          },
          "errorCode": {
            "type": "string",
            "description": "The harmonised error code identifying the reason for error.",
            "enum": [
              "genericError",
              "dailyVolumeLimitExceeded",
              "dailyValueLimitExceeded",
              "weeklyVolumeLimitExceeded",
              "weeklyValueLimitExceeded",
              "monthlyVolumeLimitExceeded",
              "monthlyValueLimitExceeded",
              "accountMaxTotalVolumeExceeded",
              "accountMaxTotalValueExceeded",
              "lessThanTransactionMinValue",
              "greaterThanTransactionMaxValue",
              "maxBalanceExceeded",
              "samePartiesError",
              "duplicateRequest",
              "insufficientFunds",
              "incorrectState",
              "underPaymentNotAllowed",
              "overPaymentNotAllowed",
              "rateLimitError",
              "transactionTypeError",
              "noMandateAuthority",
              "linkViolation",
              "countryofOriginNotPermitted",
              "nationalityNotPermitted",
              "idDocumentNotSupported",
              "issuingCountryNotSupported",
              "quoteHasExpired",
              "identifierError",
              "lengthError",
              "formatError",
              "negativeValue",
              "currencyNotSupported",
              "mandatoryValueNotSupplied",
              "invalidOffset",
              "clientAuthorisationError",
              "requestDeclined",
              "servicingPartyAuthorisationError",
              "requestingPartyAuthorisationError"
            ]
          },
          "errordescription": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A textual description of the error."
          },
          "errorDateTime": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "errorParameters": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "InternationalTransferInformationResponse": {
        "required": [
          "originCountry"
        ],
        "type": "object",
        "properties": {
          "originCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "quotationReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reference for the quotation that was provided to the sender."
          },
          "quoteId": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "The specific quote associated with the quotation."
          },
          "deliveryMethod": {
            "type": "string",
            "enum": [
              "directtoaccount",
              "agent",
              "personaldelivery"
            ]
          },
          "receivingCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "relationshipSender": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the relationship (if any) between the sender and the receiver."
          },
          "remittancePurpose": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Field providing a description of the reason for the international remittance."
          },
          "recipientBlockingReason": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The reason for blocking the quotation, based on AML checks on the recipient."
          },
          "senderBlockingReason": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The reason for blocking the quotation, based on AML checks on the sender."
          },
          "sendingServiceProviderCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          }
        }
      },
      "ResponseTransaction": {
        "required": [
          "amount",
          "creditParty",
          "currency",
          "debitParty",
          "transactionReference",
          "transactionStatus",
          "type"
        ],
        "type": "object",
        "properties": {
          "transactionReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference for the transaction. This is returned in the response by API provider."
          },
          "originalTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "For reversals and refunds, this field indicates the transaction which is the subject of the reversal."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "billpay",
              "deposit",
              "disbursement",
              "transfer",
              "merchantpay",
              "inttransfer",
              "adjustment",
              "reversal",
              "withdrawal"
            ]
          },
          "subType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          },
          "transactionStatus": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Indicates the status of the transaction as stored by the API provider."
          },
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "descriptionText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on a notification SMS and on an account statement."
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "geoCode": {
            "maxLength": 256,
            "minLength": 0,
            "pattern": "^(-?(90|(\\d|[1-8]\\d)(\\.\\d{1,6}){0,1}))\\,{1}(-?(180|(\\d|\\d\\d|1[0-7]\\d)(\\.\\d{1,6}){0,1}))$",
            "type": "string",
            "description": "Indicates the geographic location from where the transaction was initiated.",
            "example": "37.423825,-122.082900"
          },
          "internationalTransferInformation": {
            "$ref": "#/components/schemas/InternationalTransferInformationResponse"
          },
          "oneTimeCode": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A one-time code that can be supplied in the request or can be generated in the response depending upon the use case. An authorisation code can be supplied in this field for requests that have been pre-authorised."
          },
          "recipientKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "senderKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "servicingIdentity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The field is used to identify the servicing identity for transactions, e.g. till, POS ID, assistant ID."
          },
          "transactionReceipt": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Transaction receipt number as notified to the parties. This may differ from the Transaction Reference."
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "dateCreated": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "dateModified": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "receivingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is receiving the transaction."
          },
          "requestingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is requesting the transaction."
          }
        }
      },
      "RequestStateObject": {
        "required": [
          "notificationMethod",
          "serverCorrelationId",
          "status"
        ],
        "type": "object",
        "properties": {
          "serverCorrelationId": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
            "type": "string",
            "description": "A unique identifier issued by the provider to enable the client to identify the RequestState resource on subsequent polling requests. Must be supplied as a UUID."
          },
          "objectReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Provides a reference to the subject resource, e.g. transaction reference."
          },
          "status": {
            "type": "string",
            "description": "Indicates the status of the request.",
            "enum": [
              "pending",
              "completed",
              "failed"
            ]
          },
          "notificationMethod": {
            "type": "string",
            "description": "Indicates whether a callback will be issued or whether the client will need to poll.",
            "enum": [
              "callback",
              "polling"
            ]
          },
          "pendingReason": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A textual description that can be provided to describe the reason for a pending status."
          },
          "expiryTime": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "pollLimit": {
            "minimum": 0,
            "type": "number",
            "description": "Indicates the number of poll attempts for the given requeststate resource that will be allowed by the provider."
          },
          "error": {
            "$ref": "#/components/schemas/ErrorObject"
          }
        }
      },
      "RequestReversal": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "adjustment",
              "reversal"
            ]
          },
          "subType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          },
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "descriptionText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on a notification SMS and on an account statement."
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "geoCode": {
            "maxLength": 256,
            "minLength": 0,
            "pattern": "^(-?(90|(\\d|[1-8]\\d)(\\.\\d{1,6}){0,1}))\\,{1}(-?(180|(\\d|\\d\\d|1[0-7]\\d)(\\.\\d{1,6}){0,1}))$",
            "type": "string",
            "description": "Indicates the geographic location from where the transaction was initiated.",
            "example": "37.423825,-122.082900"
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "servicingIdentity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The field is used to identify the servicing identity for transactions, e.g. till, POS ID, assistant ID."
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "receivingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is receiving the transaction."
          },
          "requestingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is requesting the transaction."
          }
        },
        "description": "Represents the request body of a transaction reversal."
      },
      "ResponseReversal": {
        "required": [
          "originalTransactionReference",
          "transactionReference",
          "transactionStatus",
          "type"
        ],
        "type": "object",
        "properties": {
          "transactionReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference for the transaction. This is returned in the response by API provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "originalTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "For reversals and refunds, this field indicates the transaction which is the subject of the reversal."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "adjustment",
              "reversal"
            ]
          },
          "subType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          },
          "transactionStatus": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Indicates the status of the transaction as stored by the API provider."
          },
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "descriptionText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on a notification SMS and on an account statement."
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "geoCode": {
            "maxLength": 256,
            "minLength": 0,
            "pattern": "^(-?(90|(\\d|[1-8]\\d)(\\.\\d{1,6}){0,1}))\\,{1}(-?(180|(\\d|\\d\\d|1[0-7]\\d)(\\.\\d{1,6}){0,1}))$",
            "type": "string",
            "description": "Indicates the geographic location from where the transaction was initiated.",
            "example": "37.423825,-122.082900"
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "servicingIdentity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The field is used to identify the servicing identity for transactions, e.g. till, POS ID, assistant ID."
          },
          "transactionReceipt": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Transaction receipt number as notified to the parties. This may differ from the Transaction Reference."
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "dateCreated": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "dateModified": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "receivingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is receiving the transaction."
          },
          "requestingLei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier of the organisation that is requesting the transaction."
          }
        }
      },
      "RequestTransactionType": {
        "type": "object",
        "description": "Represents the request body of a transaction without Type."
      },
      "ResponseTransactionType": {
        "type": "object"
      },
      "RequestQuotation": {
        "required": [
          "creditParty",
          "debitParty",
          "requestAmount",
          "requestCurrency"
        ],
        "type": "object",
        "properties": {
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "billpay",
              "deposit",
              "disbursement",
              "transfer",
              "merchantpay",
              "inttransfer",
              "adjustment",
              "reversal",
              "withdrawal"
            ]
          },
          "subType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          },
          "requestAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "requestCurrency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "chosenDeliveryMethod": {
            "type": "string",
            "enum": [
              "directtoaccount",
              "agent",
              "personaldelivery"
            ]
          },
          "originCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "receivingCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "recipientKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "senderKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "sendingServiceProviderCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        },
        "description": "Represents the request body of a Quotation."
      },
      "Quotes": {
        "required": [
          "quoteId",
          "receivingAmount",
          "receivingCurrency",
          "sendingAmount",
          "sendingCurrency"
        ],
        "type": "object",
        "properties": {
          "quoteId": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "The specific quote associated with the quotation."
          },
          "receivingAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "receivingCurrency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "sendingAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "sendingCurrency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "deliveryMethod": {
            "type": "string",
            "enum": [
              "directtoaccount",
              "agent",
              "personaldelivery"
            ]
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "fxRate": {
            "maxLength": 256,
            "minLength": 4,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,10}[1-9])?$",
            "type": "string",
            "description": "The conversion rate applicable between the sending and the receiving currency for the requested transaction.",
            "example": "1.3436"
          },
          "quoteExpiryTime": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "receivingServiceProvider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The name of the receiving service provider, i.e. the provider that the quote is associated with."
          }
        },
        "description": "A collection of quotes. A quote can be received from a single financial service provider or from multiple providers."
      },
      "ResponseQuotation": {
        "required": [
          "creditParty",
          "debitParty",
          "quotationReference",
          "requestAmount",
          "requestCurrency"
        ],
        "type": "object",
        "properties": {
          "quotationReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reference for the quotation that was provided to the sender."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "billpay",
              "deposit",
              "disbursement",
              "transfer",
              "merchantpay",
              "inttransfer",
              "adjustment",
              "reversal",
              "withdrawal"
            ]
          },
          "subType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          },
          "quotationStatus": {
            "type": "string",
            "enum": [
              "pending",
              "rejected",
              "completed"
            ]
          },
          "requestAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "requestCurrency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "availableDeliveryMethod": {
            "type": "string",
            "enum": [
              "directtoaccount",
              "agent",
              "personaldelivery"
            ]
          },
          "chosenDeliveryMethod": {
            "type": "string",
            "enum": [
              "directtoaccount",
              "agent",
              "personaldelivery"
            ]
          },
          "originCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "receivingCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "quotes": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of quotes. A quote can be received from a single financial service provider or from multiple providers.",
            "items": {
              "$ref": "#/components/schemas/Quotes"
            }
          },
          "recipientKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "senderKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "recipientBlockingReason": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The reason for blocking the quotation, based on AML checks on the recipient."
          },
          "senderBlockingReason": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The reason for blocking the quotation, based on AML checks on the sender."
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "sendingServiceProviderCountry": {
            "type": "string",
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CH",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ]
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "dateModified": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "RequestBillPayment": {
        "required": [
          "amountPaid",
          "currency"
        ],
        "type": "object",
        "properties": {
          "serviceProviderPaymentReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Reference for the payment generated by the service provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "partialpayment",
              "fullpayment"
            ]
          },
          "amountPaid": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "customerReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Textual reference provided by the customer paying the bill."
          },
          "requestingOrganisation": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The originating mobile money provider or financial institution that holds the wallet/account of the payer."
          },
          "supplementaryBillReferenceDetails": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "In some cases, a single reference is not sufficient to identify a bill. This key-value collection enables further reference information to be supplied.",
            "items": {
              "$ref": "#/components/schemas/SupplementaryBillReferenceDetails"
            }
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "paidAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          }
        },
        "description": "Represents the request body of a bill payment."
      },
      "SupplementaryBillReferenceDetails": {
        "required": [
          "paymentReferenceType",
          "paymentReferenceValue"
        ],
        "type": "object",
        "properties": {
          "paymentReferenceType": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the type of the additional payment reference."
          },
          "paymentReferenceValue": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the value of the additional payment reference."
          }
        },
        "description": "In some cases, a single reference is not sufficient to identify a bill. This key-value collection enables further reference information to be supplied."
      },
      "ResponseBillPayment": {
        "required": [
          "amountPaid",
          "billPaymentStatus",
          "currency"
        ],
        "type": "object",
        "properties": {
          "serviceProviderPaymentReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Reference for the payment generated by the service provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "customerReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Textual reference provided by the customer paying the bill."
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "partialpayment",
              "fullpayment"
            ]
          },
          "billPaymentStatus": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the status of the bill payment as stored by the API provider."
          },
          "amountPaid": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "requestingOrganisation": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The originating mobile money provider or financial institution that holds the wallet/account of the payer."
          },
          "supplementaryBillReferenceDetails": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "In some cases, a single reference is not sufficient to identify a bill. This key-value collection enables further reference information to be supplied.",
            "items": {
              "$ref": "#/components/schemas/SupplementaryBillReferenceDetails"
            }
          },
          "serviceProviderComment": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Allows the Service Provider to include specific information regarding the bill payment."
          },
          "serviceProviderNotification": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Allows the Service Provider to include specific information that will be included on the notification to the customer by the mobile money provider."
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "paidAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          }
        }
      },
      "RequestBatchTransaction": {
        "required": [
          "transactions"
        ],
        "type": "object",
        "properties": {
          "batchStatus": {
            "type": "string",
            "enum": [
              "created",
              "approved",
              "completed"
            ]
          },
          "transactions": {
            "maxItems": 999999,
            "minItems": 1,
            "type": "array",
            "description": "Collection of Transactions that are to be processed.",
            "items": {
              "$ref": "#/components/schemas/RequestTransaction"
            }
          },
          "batchTitle": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Client-provided title for the batch."
          },
          "batchdescription": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Client-provided description of the batch."
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "scheduledStartDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        },
        "description": "Represents the request body of a batch of transactions."
      },
      "IdentityRequest": {
        "required": [
          "accountRelationship",
          "identityKyc"
        ],
        "type": "object",
        "properties": {
          "identityKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "accountRelationship": {
            "type": "string",
            "enum": [
              "accountholder"
            ]
          },
          "kycVerificationStatus": {
            "type": "string",
            "enum": [
              "verified",
              "unverified",
              "rejected"
            ]
          },
          "kycVerificationEntity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the entity (e.g. mobile money agent) that has verified the KYC of the identity."
          },
          "kycLevel": {
            "type": "integer",
            "description": "Indicates the KYC level that the identity is associated with.",
            "format": "int32",
            "example": 1
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        },
        "description": "An array containing the details of each identity associated with an account."
      },
      "RequestAccount": {
        "required": [
          "identity"
        ],
        "type": "object",
        "properties": {
          "accountIdentifiers": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "identity": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "An array containing the details of each identity associated with an account.",
            "items": {
              "$ref": "#/components/schemas/IdentityRequest"
            }
          },
          "accountType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised field that indicates the type of the account."
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "registeringEntity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The entity that registered the account, for example, a mobile money agent."
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        },
        "description": "Represents the request body of an Account."
      },
      "CommissionEarned": {
        "required": [
          "commissionAmount",
          "commissionCurrency",
          "commissionType"
        ],
        "type": "object",
        "properties": {
          "commissionType": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Defines the type of commission."
          },
          "commissionAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "commissionCurrency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          }
        },
        "description": "Returns all commission earned by the registering entity for the creation of the account."
      },
      "IdentityResponse": {
        "required": [
          "accountRelationship",
          "identityId",
          "identityKyc",
          "identityType"
        ],
        "type": "object",
        "properties": {
          "identityId": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "A unique id for the identity as assigned by the API Provider."
          },
          "identityType": {
            "type": "string",
            "enum": [
              "individual"
            ]
          },
          "identityStatus": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A unique id for the identity as assigned by the API Provider."
          },
          "identityKyc": {
            "$ref": "#/components/schemas/Kyc"
          },
          "accountRelationship": {
            "type": "string",
            "enum": [
              "accountholder"
            ]
          },
          "kycVerificationStatus": {
            "type": "string",
            "enum": [
              "verified",
              "unverified",
              "rejected"
            ]
          },
          "kycVerificationEntity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the entity (e.g. mobile money agent) that has verified the KYC of the identity."
          },
          "kycLevel": {
            "type": "integer",
            "description": "Indicates the KYC level that the identity is associated with.",
            "format": "int32",
            "example": 1
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        },
        "description": "An array containing the details of each identity associated with an account."
      },
      "ResponseAccount": {
        "required": [
          "accountIdentifiers",
          "accountStatus",
          "identity"
        ],
        "type": "object",
        "properties": {
          "accountIdentifiers": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "identity": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "An array containing the details of each identity associated with an account.",
            "items": {
              "$ref": "#/components/schemas/IdentityResponse"
            }
          },
          "accountType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised field that indicates the type of the account."
          },
          "accountStatus": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "enum": [
              "available",
              "unavailable",
              "unregistered"
            ]
          },
          "accountSubStatus": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Field can be used to return a provider-specific status for the account."
          },
          "currentBalance": {
            "type": "string"
          },
          "availableBalance": {
            "type": "string"
          },
          "reservedBalance": {
            "type": "string"
          },
          "unclearedBalance": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "fees": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all fees that are applicable to the object.",
            "items": {
              "$ref": "#/components/schemas/Fees"
            }
          },
          "commissionEarned": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Returns all commission earned by the registering entity for the creation of the account.",
            "items": {
              "$ref": "#/components/schemas/CommissionEarned"
            }
          },
          "registeringEntity": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The entity that registered the account, for example, a mobile money agent."
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        }
      },
      "RequestLink": {
        "required": [
          "mode",
          "sourceAccountIdentifiers",
          "status"
        ],
        "type": "object",
        "properties": {
          "sourceAccountIdentifiers": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "mode": {
            "type": "string",
            "enum": [
              "push",
              "pull",
              "both"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        },
        "description": "Represents the request body of a Link."
      },
      "ResponseLink": {
        "required": [
          "linkReference",
          "mode",
          "sourceAccountIdentifiers",
          "status"
        ],
        "type": "object",
        "properties": {
          "linkReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Indicates the Link reference. This enables a linked account to be uniquely identified."
          },
          "sourceAccountIdentifiers": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "mode": {
            "type": "string",
            "enum": [
              "push",
              "pull",
              "both"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        }
      },
      "RequestDebitMandate": {
        "required": [
          "startDate"
        ],
        "type": "object",
        "properties": {
          "payee": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the payee to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "mandateStatus": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "amountLimit": {
            "type": "object",
            "description": "The maximum amount that can be taken by the Payee on a payment request."
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "startDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "endDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "frequencyType": {
            "type": "string",
            "enum": [
              "weekly",
              "fortnight",
              "monthspecificdate",
              "twomonths",
              "threemonths",
              "fourmonths",
              "sixmonths",
              "yearly",
              "lastdaymonth",
              "lastdaymonthworking",
              "lastmonday",
              "lasttuesday",
              "lastwednesday",
              "lastthursday",
              "lastfriday",
              "lastsaturday",
              "lastsunday",
              "specificdaymonthly"
            ]
          },
          "numberOfPayments": {
            "minimum": 0,
            "type": "number",
            "description": "Indicates the number of consecutive payments that are to be taken."
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          }
        },
        "description": "Represents the request body of a debit mandate."
      },
      "ResponseDebitMandate": {
        "required": [
          "mandateReference"
        ],
        "type": "object",
        "properties": {
          "mandateReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Unique reference provided by the API Provider for the mandate."
          },
          "payee": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the payee to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "mandateStatus": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "startDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "amountLimit": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "endDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "frequencyType": {
            "type": "string",
            "enum": [
              "weekly",
              "fortnight",
              "monthspecificdate",
              "twomonths",
              "threemonths",
              "fourmonths",
              "sixmonths",
              "yearly",
              "lastdaymonth",
              "lastdaymonthworking",
              "lastmonday",
              "lasttuesday",
              "lastwednesday",
              "lastthursday",
              "lastfriday",
              "lastsaturday",
              "lastsunday",
              "specificdaymonthly"
            ]
          },
          "numberOfPayments": {
            "minimum": 0,
            "type": "number",
            "description": "Indicates the number of consecutive payments that are to be taken."
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "dateCreated": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "dateModified": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "RequestBillPayment2": {
        "required": [
          "amountPaid",
          "currency"
        ],
        "type": "object",
        "properties": {
          "serviceProviderPaymentReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Reference for the payment generated by the service provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "partialpayment",
              "fullpayment"
            ]
          },
          "amountPaid": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "customerReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Textual reference provided by the customer paying the bill."
          },
          "requestingOrganisation": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The originating mobile money provider or financial institution that holds the wallet/account of the payer."
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "paidAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          }
        },
        "description": "Represents the request body of a bill payment."
      },
      "ResponseBillPayment2": {
        "required": [
          "amountPaid",
          "billPaymentStatus",
          "currency"
        ],
        "type": "object",
        "properties": {
          "serviceProviderPaymentReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Reference for the payment generated by the service provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "customerReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Textual reference provided by the customer paying the bill."
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "partialpayment",
              "fullpayment"
            ]
          },
          "billPaymentStatus": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Indicates the status of the bill payment as stored by the API provider."
          },
          "amountPaid": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "requestingOrganisation": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The originating mobile money provider or financial institution that holds the wallet/account of the payer."
          },
          "serviceProviderComment": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Allows the Service Provider to include specific information regarding the bill payment."
          },
          "serviceProviderNotification": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Allows the Service Provider to include specific information that will be included on the notification to the customer by the mobile money provider."
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          },
          "paidAmount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          }
        }
      },
      "RedemptionChannelsInner": {
        "required": [
          "channelType"
        ],
        "type": "object",
        "properties": {
          "channelType": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the channel type."
          }
        },
        "description": "Indicates the channel(s) that the code can be redeemed against, e.g. ATM, Merchant, etc."
      },
      "RedemptionTransactionTypesInner": {
        "required": [
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "transactionType": {
            "type": "string",
            "enum": [
              "billpay",
              "deposit",
              "disbursement",
              "transfer",
              "merchantpay",
              "inttransfer",
              "adjustment",
              "reversal",
              "withdrawal"
            ]
          },
          "transactionSubtype": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A non-harmonised sub-classification of the type of transaction. Values are not fixed, and usage will vary according to Provider."
          }
        },
        "description": "Indicates the Transaction Types(s) that the code can be redeemed against."
      },
      "RequestAuthorisationCode": {
        "type": "object",
        "properties": {
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "amountType": {
            "type": "string",
            "enum": [
              "exact",
              "maximum"
            ]
          },
          "codeLifetime": {
            "minimum": 1,
            "type": "number",
            "description": "Indicates the expiry time in seconds of the code.",
            "example": 600
          },
          "holdFundsIndicator": {
            "type": "boolean",
            "description": "Indicates whether funds should be reserved against the payers account where the payer is the requestor."
          },
          "redemptionAccountIdentifiers": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the redemption account to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "redemptionChannels": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Indicates the channel(s) that the code can be redeemed against, e.g. ATM, Merchant, etc.",
            "items": {
              "$ref": "#/components/schemas/RedemptionChannelsInner"
            }
          },
          "redemptionTransactionTypes": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Indicates the Transaction Types(s) that the code can be redeemed against.",
            "items": {
              "$ref": "#/components/schemas/RedemptionTransactionTypesInner"
            }
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        },
        "description": "Represents the request body of an Authorisation Code."
      },
      "ResponseAuthorisationCode": {
        "required": [
          "authorisationCode",
          "codeState"
        ],
        "type": "object",
        "properties": {
          "authorisationCode": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The code that will be presented to the other party for redemption."
          },
          "codeState": {
            "type": "string",
            "enum": [
              "active",
              "expired",
              "cancelled"
            ]
          },
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "amountType": {
            "type": "string",
            "enum": [
              "exact",
              "maximum"
            ]
          },
          "codeLifetime": {
            "minimum": 1,
            "type": "number",
            "description": "Indicates the expiry time in seconds of the code.",
            "example": 600
          },
          "holdFundsIndicator": {
            "type": "boolean",
            "description": "Indicates whether funds should be reserved against the payers account where the payer is the requestor."
          },
          "redemptionAccountIdentifiers": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the redemption account to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "redemptionChannels": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Indicates the channel(s) that the code can be redeemed against, e.g. ATM, Merchant, etc.",
            "items": {
              "$ref": "#/components/schemas/RedemptionChannelsInner"
            }
          },
          "redemptionTransactionTypes": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "Indicates the Transaction Types(s) that the code can be redeemed against.",
            "items": {
              "$ref": "#/components/schemas/RedemptionTransactionTypesInner"
            }
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "RequestGenericPatch": {
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "description": "Indicates the Patch operation to be performed. 'replace' is used to update a field and 'add' is used to add a new field.",
            "enum": [
              "replace",
              "add"
            ]
          },
          "path": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Specify the field to be updated or added preceded by '/'."
          },
          "value": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Specify the value of the field to be updated or added."
          }
        }
      },
      "ResponseStatementEntries": {
        "required": [
          "amount",
          "creditParty",
          "currency",
          "debitParty",
          "transactionReference",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "transactionReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference for the transaction. This is returned in the response by API provider."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "transactionStatus": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Indicates the status of the transaction as stored by the API provider."
          },
          "amount": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "descriptionText": {
            "maxLength": 160,
            "minLength": 0,
            "type": "string",
            "description": "Free format text description of the transaction provided by the client. This can be provided as a reference for the receiver on a notification SMS and on an account statement."
          },
          "displayType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "The transaction type that is to be used for presentation to the account holder as determined by the API provider. This is not necessarily the actual transaction type."
          },
          "transactionReceipt": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Transaction receipt number as notified to the parties. This may differ from the Transaction Reference."
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "dateCreated": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "dateModified": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "ResponseResponse": {
        "required": [
          "link"
        ],
        "type": "object",
        "properties": {
          "link": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Provides a URL to the resource."
          }
        }
      },
      "ResponseHeartbeat": {
        "required": [
          "serviceStatus"
        ],
        "type": "object",
        "properties": {
          "serviceStatus": {
            "type": "string",
            "enum": [
              "available",
              "unavailable",
              "degraded"
            ]
          },
          "delay": {
            "type": "number",
            "description": "The anticipated processing delay in milliseconds."
          },
          "plannedRestorationTime": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "ResponseBillCompanies": {
        "required": [
          "companyName",
          "serviceProvider"
        ],
        "type": "object",
        "properties": {
          "serviceProvider": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Service Provider Reference Code."
          },
          "serviceProviderType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Type of Service Provider that accepts payments."
          },
          "serviceProviderSubType": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Sub-Type of Service Provider."
          },
          "companyName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Display Name for the Service Provider."
          },
          "supplementaryServiceProviderDetails": {
            "maxItems": 20,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "ResponseBatchTransaction": {
        "required": [
          "approvalDate",
          "batchId",
          "batchStatus",
          "completionDate"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identifier for the Batch that is assigned by the API provider. This ID is used by the client on subsequent GET or PATCH methods."
          },
          "batchStatus": {
            "type": "string",
            "enum": [
              "created",
              "approved",
              "completed"
            ]
          },
          "approvalDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "completionDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "batchTitle": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Client-provided title for the batch."
          },
          "batchdescription": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Client-provided description of the batch."
          },
          "processingFlag": {
            "type": "boolean",
            "description": "Indicates whether the batch is currently undergoing processing by the API Provider."
          },
          "completedCount": {
            "minimum": 0,
            "type": "number",
            "description": "Indicates the number of records that have been successful completed."
          },
          "rejectionCount": {
            "minimum": 0,
            "type": "number",
            "description": "Indicates the number of records that have been rejected, either during parsing or during final processing."
          },
          "parsingSuccessCount": {
            "minimum": 0,
            "type": "number",
            "description": "Indicates the number of records that have been parsed successfully."
          },
          "requestingOrganisation": {
            "$ref": "#/components/schemas/RequestingOrganisation"
          },
          "scheduledStartDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "requestDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "completedDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "ResponseBatchTransactionRejection": {
        "required": [
          "creditParty",
          "debitParty",
          "rejectionDate",
          "rejectionReason"
        ],
        "type": "object",
        "properties": {
          "transactionReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference for the transaction. This is returned in the response by API provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "rejectionReason": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "The reason for the transaction request as indicated by the API provider."
          },
          "rejectionDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "dateRejected": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "ResponseBatchTransactionCompletion": {
        "required": [
          "completionDate",
          "creditParty",
          "debitParty",
          "link",
          "transactionReference"
        ],
        "type": "object",
        "properties": {
          "transactionReference": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference for the transaction. This is returned in the response by API provider."
          },
          "requestingOrganisationTransactionReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "A reference provided by the requesting organisation that is to be associated with the transaction."
          },
          "creditParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "debitParty": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs that enable the party to be identified. Keys include MSISDN and Wallet Identifier.",
            "items": {
              "$ref": "#/components/schemas/Party"
            }
          },
          "completionDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "link": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Provides a URL to the resource."
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "completedDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "ResponseAccountStatus": {
        "required": [
          "accountStatus"
        ],
        "type": "object",
        "properties": {
          "accountStatus": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "enum": [
              "available",
              "unavailable",
              "unregistered"
            ]
          },
          "subStatus": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Can be used to return a provider-specific status for the account."
          },
          "lei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier.",
            "example": "5493000IBP32UQZ0KL24"
          }
        }
      },
      "ResponseBills": {
        "type": "object",
        "properties": {
          "billReference": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Reference number for the Bill that the payer can use when making a payment."
          },
          "billStatus": {
            "type": "string",
            "enum": [
              "unpaid",
              "paid",
              "partialpaid"
            ]
          },
          "amountDue": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          },
          "billdescription": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Description of the bill that is to be paid"
          },
          "dueDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "minimumAmountDue": {
            "maxLength": 23,
            "minLength": 1,
            "pattern": "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$",
            "type": "string",
            "example": "15.21"
          },
          "creationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "modificationDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "customData": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate provider specific fields.",
            "items": {
              "$ref": "#/components/schemas/CustomData"
            }
          },
          "metadata": {
            "type": "array",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "description": "A collection of key/value pairs. These can be used to populate additional properties that describe administrative information regarding the resource.",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "ResponseAccountBalance": {
        "type": "object",
        "properties": {
          "accountStatus": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "enum": [
              "available",
              "unavailable",
              "unregistered"
            ]
          },
          "currentBalance": {
            "type": "string"
          },
          "availableBalance": {
            "type": "string"
          },
          "reservedBalance": {
            "type": "string"
          },
          "unclearedBalance": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "enum": [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHF",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "GBP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XAG",
              "XAU",
              "XBA",
              "XBB",
              "XBC",
              "XBD",
              "XCD",
              "XDR",
              "XOF",
              "XPD",
              "XPF",
              "XPT",
              "XSU",
              "XTS",
              "XUA",
              "XXX",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          }
        }
      },
      "ResponseAccountName": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SubjectName"
          },
          "lei": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{4}00[A-Z0-9]{12}\\d{2}$",
            "type": "string",
            "description": "Legal Entity Identifier.",
            "example": "5493000IBP32UQZ0KL24"
          }
        }
      }
    }
  }
}