{"version":3,"sources":["variables/charts.jsx","assets/img/theme/react.jpg","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/vue.jpg","views/rules/BuilderTools.jsx","assets/img/brand/mojaloop.png","components/Navbars/AdminNavbar.jsx","components/Footers/AdminFooter.jsx","components/Sidebar/Sidebar.jsx","components/Headers/Header.jsx","views/dashboard/Dashboard.jsx","components/Headers/UserHeader.jsx","views/examples/Profile.jsx","views/examples/Maps.jsx","views/examples/Register.jsx","views/examples/Login.jsx","views/examples/Tables.jsx","views/examples/Icons.jsx","views/rules/ConditionBuilder.jsx","views/rules/EventBuilder.jsx","views/rules/EventResponseBuilder.jsx","views/rules/RuleEditor.jsx","views/rules/RuleViewer.jsx","views/rules/RulesResponse.jsx","views/rules/RulesValidation.jsx","views/rules/RulesCallback.jsx","views/outbound/RequestBuilder.jsx","views/outbound/OutboundRequest.jsx","views/monitor/Monitor.jsx","routes.js","layouts/Admin.jsx","index.js"],"names":["Chart","require","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","mode","fonts","colors","gray","100","200","300","400","500","600","700","800","900","theme","default","primary","secondary","info","success","danger","warning","black","white","transparent","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","module","exports","chartOptions","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","maxBarThickness","parseOptions","parent","chartExample2","__webpack_require__","p","Ajv","allErrors","Select","Option","jsf","option","FactSelect","_React$Component","_this","Object","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","componentDidMount","componentDidUpdate","state","factData","props","factTreeData","getNodeFacts","undefined","selectedFact","findValueInFactData","onSelect","setState","treeData","valueArr","split","tFactData","_loop","tFact","find","v","nodeObject","_ret","nodeData","parentId","arguments","valuePrefix","property","properties","isLeaf","fact","type","random","toString","substring","push","id","pId","title","disabled","onLoadData","treeNode","Promise","resolve","_treeNode$props","setImmediate","concat","onChange","extra","triggerNode","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_7__","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","key","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_11__","treeDataSimpleMode","style","minWidth","dropdownStyle","maxHeight","overflow","placeholder","loadData","React","Component","FactDataGenerator","_this2","getBodyFactData","resourceDefinition","bodySchema","requestBody","schema","err","getBodySample","bodySample","getHeadersFactData","rootParameters","totalParameters","headerSchema","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","parameters","in","name","console","log","getPathParametersFactData","pathParametersSchema","getQueryParametersFactData","queryParametersSchema","getSelectedResponseBodySchema","responses","statusCode","getSelectedResponseHeaders","headers","pickSuccessCodeFromResponsesObject","successCode","responseCode","generateSample","_ref","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","sample","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","AdminNavbar","react_default","Fragment","Navbar","className","expand","Container","fluid","Link","to","brandText","Footer","Sidebar","classCallCheck","possibleConstructorReturn","getPrototypeOf","collapseOpen","toggleCollapse","closeCollapse","createLinks","routes","map","prop","NavItem","es_NavLink","path","tag","NavLinkRRD","onClick","activeClassName","icon","subTitle","activeRoute","bind","assertThisInitialized","routeName","location","pathname","navbarBrandProps","_this$props","logo","innerLink","outterLink","href","target","NavbarBrand","assign","alt","imgAlt","src","imgSrc","Nav","UncontrolledDropdown","nav","DropdownToggle","DropdownMenu","aria-labelledby","DropdownItem","divider","Collapse","navbar","isOpen","Row","Col","xs","Form","InputGroup","Input","aria-label","InputGroupAddon","addonType","InputGroupText","defaultProps","Header","minHeight","backgroundSize","backgroundPosition","Index","activeNav","chartExample1Data","toggleNavs","e","preventDefault","wow","setTimeout","window","Headers_Header","xl","Card","CardHeader","CardBody","es","Button","size","Table","scope","Progress","max","barClassName","UserHeader","backgroundImage","lg","md","MapWrapper","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","ajv","ValueSelector","validateAjv","handleValueChange","newValue","compile","ajvErrors","errors","getValueInput","enum","es_select","input","getErrorMessage","tooltip","errorsText","Condition","asyncToGenerator","regenerator_default","selectedFactType","selectedFactPath","allParameters","allFactTypes","condition","updateFactData","onConditionChange","handleDelete","onDelete","factTypes","havePathParams","haveQueryParams","getFactTypeItems","tempFactTypes","toConsumableArray","JSON","stringify","handleFactTypeSelect","_ref2","_callee2","selectedValueObject","_context2","parse","t0","handleFactSelect","factObject","selectedOperator","operator","handleOperatorSelect","operatorDisplayNames","numericEqual","numericNotEqual","numericLessThan","numericGreaterThan","numericLessThanInclusive","numericGreaterThanInclusive","dateBefore","dateAfter","propertyTitleOperators","Amount","getOperatorItems","operatorList","displayName","FormGroup","htmlFor","BuilderTools","colSpan","ConditionBuilder_ValueSelector","align","Conditions","handleConditionChange","_this3","onConditionsChange","handleConditionDelete","conditions","splice","_this4","ConditionBuilder_Condition","resource","ConditionBuilder","_this5","newCondition","addCondition","objectSpread","handleConditionsChange","_this6","ConditionBuilder_Conditions","ConfigurableParameter","modes","inputValue","getModeMenu","EventBuilder_Option","handleModeChange","updateChanges","getValueComponent","_x2","finalValue","FixedCallbackBuilder","callbackDefinition","allParamsFromDefinition","callbackRootParameters","allParamsObject","k","description","addHeaderItemsFromDefinition","_callee3","onlyRequired","_args3","_context3","param","required","eventParams","addHeaderItem","itemName","handleHeaderItemChange","handleHeaderItemDelete","_ref4","_callee4","_context4","_x3","handleBodyChange","bodyObject","body","handleAddHeaderClick","event","children","headerItemsMenu","menuItems","filter","menu","Item","paramsObject","getHeaderItems","headerItems","headerName","EventBuilder_HeaderInputComponent","itemKey","handleAddConfigParam","configurableParameterSelected","handlePopulateSampleBodyClick","_callee5","newBody","_context5","callbackObject","bodyOverride","_","merge","refs","bodyEditor","jsonEditor","update","handleConfigParamCopyToClipboard","navigator","clipboard","writeText","message","EventBuilder_ConfigurableParameter","card","dropdown","overlay","popover","trigger","textAlign","jsoneditor_react_es","ref","ace","search","statusBar","navigationBar","HeaderInputComponent","handleNameChange","placement","defaultValue","MockCallbackBuilder","overrideChecked","handleOverrideChecked","checked","handleOverrideValuesChange","es_checkbox","EventBuilder_FixedCallbackBuilder","ParamsBuilder","eventType","EventBuilder_MockCallbackBuilder","EventBuilder","successEventTypes","errorEventTypes","handleEventTypeSelect","handleEventChange","method","getEventTypes","eventTypes","handleParamsChange","newParams","params","selectedResource","EventBuilder_ParamsBuilder","EventResponseBuilder_Option","allHeadersArray","allHeadersObject","updateBodyAndHeadersSchemaForResponseCode","_args5","_ref6","_callee6","_context6","EventResponseBuilder_HeaderInputComponent","_callee7","_context7","EventResponseBuilder_ConfigurableParameter","EventResponseBuilder_FixedCallbackBuilder","resourceObject","forceUpdate","getResponseItems","responseItems","handleResponseSelect","response","EventResponseBuilder_MockCallbackBuilder","EventResponseBuilder","_this7","EventResponseBuilder_ParamsBuilder","ResourceSelector","resourceOptions","getResourceOptions","openApiDefinition","pathKey","paths","methodKey","RuleEditor_Option","getResourceValue","eventKey","ApiVersionSelector","apiVersionOptions","getApiVersionOptions","apiVersions","majorVersion","minorVersion","getApiVersionValue","RulesEditor","inputRule","pathObject","methodObject","pathMethodConditions","selectedApiVersion","getApiVersions","rule","all","delay","apiVersion","fetchAllApiData","apiType","version","callbackMap","responseMap","getDefinition","getCallbackMap","getResponseMap","t1","getConditions","getPathMethodConditions","getEvent","getRule","axios","get","_x4","_ref5","_x5","_x6","_x7","_x8","handleSave","onSave","apiVersionSelectHandler","resourceSelectHandler","getResourceDefinition","getRootParameters","rootParams","getCallbackObject","callbackObj","getCallbackRootParameters","getCallbackDefinition","getResponseObject","responseObj","getResponses","handleDescriptionChange","origJson","curJson","ruleId","RuleEditor_ApiVersionSelector","RuleEditor_ResourceSelector","rules_ConditionBuilder","rules_EventResponseBuilder","responseObject","rules_EventBuilder","rows","RuleViewer","pathCondition","methodCondition","conditionItems","cellPadding","fontSize","toUpperCase","entries","Panel","Menu","SubMenu","RulesResponse","getResponseRulesFiles","activeRulesFile","loading","responseRulesFiles","files","duration","selectedRuleFile","ruleItemActive","updateRulesFileDisplay","getResponseRulesFileContent","ruleFile","curRules","Array","isArray","getRulesFilesItems","isActive","handleRuleFileSelect","_ref3","selectedItem","getRulesFileContentItems","header","handleRuleClick","handleRuleDelete","rules_RuleViewer","tRule","editRule","handleAddNewRuleClick","highestRule","reduce","prevItem","newRuleId","priority","handleRuleCancelClick","handleRuleSave","newRule","newRuleFull","updatedRules","put","Content-Type","handleNewRulesFileClick","fileName","handleRuleFileDelete","delete","handleRuleFileSetActive","_callee8","_context8","newFileName","modal","centered","destroyOnClose","forceRender","visible","footer","onCancel","RuleEditor","endsWith","test","error","selectedKeys","collapse","handleRuleItemActivePanelChange","RulesValidation","getValidationRulesFiles","validationRulesFiles","getValidationRulesFileContent","RulesValidation_Panel","RulesCallback","getCallbackRulesFiles","callbackRulesFiles","getCallbackRulesFileContent","RulesCallback_Panel","paramTypes","getParamTypeMenu","RequestBuilder_Option","handleParamTypeChange","paramType","selectedValueComponent","getRequestFactComponent","inputOptionItems","inputValues","handleParamSelect","requestSelectionOptionItems","allRequests","request","requestId","operationPath","bodyFactData","headerFactData","functionOptionItems","generateUUID","curDate","paramValue","row","col","PathBuilder","updatePath","replace","getPathItems","pathItems","span","pathParam","pathValue","dynamicPathValue","startsWith","paramName","slice","temp","borderStyle","HeaderBodyBuilder","_args4","RequestBuilder_HeaderInputComponent","RequestBuilder_ConfigurableParameter","getDynamicValue","dynamicValue","gutter","twoToneColor","RequestBuilder","handleRequestChange","RequestBuilder_PathBuilder","RequestBuilder_HeaderBodyBuilder","Step","Steps","TabPane","Tabs","InputValues","addInputValueDialogVisible","newInputValueName","handleDeleteClick","inputValueName","getInputItems","inputItems","descriptions","values","handleAddInputValue","hasOwnProperty","addInputValueDialogContent","onVisibleChange","bordered","OutboundRequest_Option","resourceArr","RequestGenerator","getRequest","OutboundRequest_ResourceSelector","outbound_RequestBuilder","OutboundRequest","socket","componentWillUnmount","disconnect","socketIOClient","on","handleIncomingProgress","replaceInputValues","inputObject","resultObject","matchedArray","match","element","template","getRequestGeneratorItems","requests","status","tabs","defaultActiveKey","tab","OutboundRequest_RequestGenerator","handleRequestDelete","skeleton","paragraph","active","getStepItems","stepItems","spanCol","steps","current","handleInputValuesChange","handleInputValuesDelete","handleAddNewRequestClick","maxId","m","deleteIndex","findIndex","progress","handleSendClick","outboundRequestID","post","convertTemplate","remainingProps","objectWithoutProperties","newRequests","handleCreateNewTemplateClick","templateName","download","contentType","document","file","Blob","URL","createObjectURL","click","handleTemplateSaveClick","handleImportFile","file_to_read","fileRead","FileReader","onload","result","intern","readAsText","addNewRequestDialogVisible","newRequestDescription","newTemplateName","createNewTemplateDialogVisible","saveTemplateFileName","saveTemplateDialogVisible","_this8","addNewRequestDialogContent","createNewTemplateDialogContent","saveTemplateDialogContent","showTemplate","affix","offsetTop","upload","accept","showUploadList","beforeUpload","OutboundRequest_InputValues","DetailComponent","dataItem","additionalData","fontFamily","margin","GridDetailRow","IncomingTimelineItem","expandChange","expanded","toggleLogsVisibility","logsVisible","logs","timeline","logTime","erroneous","main","detail","expandField","onExpandChange","field","IncomingMonitor","newState","incomingItemsObj","incomingItemsArr","lastIncomingTime","endpoint","getTimelineItems","Monitor_IncomingTimelineItem","dot","handleClearLogs","newLog","uniqueId","timeDiffMillis","Date","verbosity","itemIndex","reverse","pending","component","Dashboard","Tables","Monitor_IncomingMonitor","Admin","getRoutes","Route","getBrandText","documentElement","scrollTop","scrollingElement","mainContent","components_Sidebar_Sidebar","Navbars_AdminNavbar","Switch","AdminFooter","ReactDOM","render","BrowserRouter","layouts_Admin","Redirect","from","getElementById"],"mappings":"6EAiBA,IAAMA,EAAQC,EAAQ,IAMtBD,EAAME,SAASC,UAAUC,UAAUC,KAAO,WACxC,IAEIC,EAAMC,EAAOC,EAAKC,EAAQC,EAAOC,EAAOC,EAFxCC,EAAMC,KAAKC,OAAOF,IAClBG,EAAKF,KAAKG,MAEVC,EAAcF,EAAGE,YA2BrB,GAtBKF,EAAGG,YAWNb,EAAOU,EAAGI,KACVb,EAAQS,EAAGK,EACXb,EAAMQ,EAAGM,EAAIN,EAAGO,OAAS,EACzBd,EAASO,EAAGM,EAAIN,EAAGO,OAAS,EAC5Bb,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBI,EAAGJ,eAAiB,SAfpCN,EAAOU,EAAGK,EAAIL,EAAGQ,MAAQ,EACzBjB,EAAQS,EAAGK,EAAIL,EAAGQ,MAAQ,EAC1BhB,EAAMQ,EAAGM,EAETZ,EAAQ,EACRC,GAFAF,EAASO,EAAGI,MAEKZ,EAAM,GAAK,EAC5BI,EAAgBI,EAAGJ,eAAiB,UAclCM,EAAa,CAEf,IAAIO,EAAUC,KAAKC,IAAID,KAAKE,IAAItB,EAAOC,GAAQmB,KAAKE,IAAIpB,EAAMC,IAE1DoB,GADJX,EAAcA,EAAcO,EAAUA,EAAUP,GACjB,EAE3BY,EAAaxB,GAA0B,SAAlBM,EAA2BiB,EAAanB,EAAQ,GACrEqB,EACFxB,GAA2B,UAAlBK,GAA6BiB,EAAanB,EAAQ,GACzDsB,EAAYxB,GAAyB,QAAlBI,EAA0BiB,EAAalB,EAAQ,GAClEsB,EACFxB,GAA4B,WAAlBG,GAA8BiB,EAAalB,EAAQ,GAE3DmB,IAAeC,IACjBvB,EAAMwB,EACNvB,EAASwB,GAGPD,IAAcC,IAChB3B,EAAOwB,EACPvB,EAAQwB,GAIZlB,EAAIqB,YACJrB,EAAIsB,UAAYnB,EAAGoB,gBACnBvB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAIsB,EAAU,CAAC,CAAClC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAI9DgC,EADU,CAAC,SAAU,OAAQ,MAAO,SACdC,QAAQ9B,EAAe,GAKjD,SAAS+B,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAKjB,IAKIC,EALAzB,EAAQgB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjB,EAASiB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpCnB,EAAImB,EAAQ,GAAG,GACflB,EAAIkB,EAAQ,GAAG,IAEfS,EAvFa,GA0FJ1B,EAAS,IACpB0B,EAAS1B,EAAS,GAEhB0B,EAASzB,EAAQ,IACnByB,EAASzB,EAAQ,GAGnBX,EAAIiC,OAAOzB,EAAI4B,EAAQ3B,GACvBT,EAAIqC,OAAO7B,EAAIG,EAAQyB,EAAQ3B,GAC/BT,EAAIsC,iBAAiB9B,EAAIG,EAAOF,EAAGD,EAAIG,EAAOF,EAAI2B,GAClDpC,EAAIqC,OAAO7B,EAAIG,EAAOF,EAAIC,EAAS0B,GACnCpC,EAAIsC,iBAAiB9B,EAAIG,EAAOF,EAAIC,EAAQF,EAAIG,EAAQyB,EAAQ3B,EAAIC,GACpEV,EAAIqC,OAAO7B,EAAI4B,EAAQ3B,EAAIC,GAC3BV,EAAIsC,iBAAiB9B,EAAGC,EAAIC,EAAQF,EAAGC,EAAIC,EAAS0B,GACpDpC,EAAIqC,OAAO7B,EAAGC,EAAI2B,GAClBpC,EAAIsC,iBAAiB9B,EAAGC,EAAGD,EAAI4B,EAAQ3B,GAGzCT,EAAIuC,OACAlC,GACFL,EAAIwC,UAIR,IAAIC,EAAO,QACPC,EAAQ,CACVnC,KAAM,aAIJoC,EAAS,CACXC,KAAM,CACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAEPC,MAAO,CACLC,QAAS,UACTC,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,QAAS,WAEXC,MAAO,UACPC,MAAO,UACPC,YAAa,eAoIf,IAAIC,EAAgB,CAClBC,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAO3B,EAAOC,KAAK,KACnB2B,cAAe5B,EAAOC,KAAK,MAE7B4B,MAAO,CACLC,SAAU,SAASC,GACjB,KAAMA,EAAQ,IACZ,MAAO,IAAMA,EAAQ,SAOjCC,SAAU,CACRC,UAAW,CACTC,MAAO,SAASC,EAAMC,GACpB,IAAIF,EAAQE,EAAKC,SAASF,EAAKG,cAAcJ,OAAS,GAClDK,EAASJ,EAAKI,OACdC,EAAU,GAOd,OALIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWN,GAGbM,GAAW,IAAMD,EAAS,QAMlCG,MAAO,SAAAC,GACL,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DP,SAAU,CACR,CACEH,MAAO,cACPE,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAK9CS,MAAO,SAAAF,GACL,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DP,SAAU,CACR,CACEH,MAAO,cACPE,KAAM,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,SAkD/CU,EAAOC,QAAU,CACfC,aAtOF,WAEE,IAAIzB,EAAU,CACZ0B,SAAU,CACRC,OAAQ,CACNC,YAAY,EACZC,qBAAqB,EACrBC,aAAuB,SAATvD,EAAkBE,EAAOC,KAAK,KAAOD,EAAOC,KAAK,KAC/DqD,iBAA2B,SAATxD,EAAkBE,EAAOC,KAAK,KAAOD,EAAOC,KAAK,KACnEsD,kBAAmBxD,EAAMnC,KACzB4F,gBAAiB,GACjBC,OAAQ,CACNC,QAAS,GAEXC,OAAQ,CACNC,SAAS,EACTC,SAAU,SACVjB,OAAQ,CACNkB,eAAe,EACfJ,QAAS,KAGbhH,SAAU,CACRqH,MAAO,CACLtE,OAAQ,EACRb,gBAAiBoB,EAAOW,MAAP,SAEnBqD,KAAM,CACJC,QAAS,GACTvG,YAAa,EACboB,YAAakB,EAAOW,MAAP,QACb/B,gBAAiBoB,EAAOqB,YACxB6C,eAAgB,WAElBC,UAAW,CACTvF,gBAAiBoB,EAAOW,MAAP,SAEnByD,IAAK,CACHxF,gBAAiBoB,EAAOW,MAAP,QACjB7B,YAAsB,SAATgB,EAAkBE,EAAOC,KAAK,KAAOD,EAAOoB,MACzD1D,YAAa,IAGjBsE,SAAU,CACRqC,SAAS,EACTvE,KAAM,QACNwE,WAAW,IAGfC,SAAU,CACRC,iBAAkB,GAClBC,eAAgB,SAASC,GACvB,IAAItC,EAAOsC,EAAMtC,KACbI,EAAU,GAcd,OAZAJ,EAAKQ,OAAO+B,QAAQ,SAASzC,EAAO9C,GAClC,IAAIwF,EAAUxC,EAAKC,SAAS,GAAGzD,gBAAgBQ,GAE/CoD,GAAW,mCACXA,GACE,8DACAoC,EACA,SACFpC,GAAWN,EACXM,GAAW,YAGNA,MA4Cf,OArCAhG,EAAMqI,aAAaC,oBAAoB,SAAU,CAC/CpD,UAAW,CACTqD,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnBrD,MAAgB,SAAT7B,EAAkBE,EAAOC,KAAK,KAAOD,EAAOC,KAAK,KACxDgF,YAAY,EACZC,WAAW,EACXnG,UAAW,EACXoG,cAAe,EACfvD,cAAwB,SAAT9B,EAAkBE,EAAOC,KAAK,KAAOD,EAAOC,KAAK,KAChEmF,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,IAE7BxD,MAAO,CACLyD,aAAa,EACb5B,QAAS,GACT5B,SAAU,SAASC,GACjB,KAAMA,EAAQ,IACZ,OAAOA,MAOfvF,EAAMqI,aAAaC,oBAAoB,WAAY,CACjDpD,UAAW,CACTuD,YAAY,EACZM,iBAAiB,EACjBL,WAAW,GAEbrD,MAAO,CACL6B,QAAS,IAEX8B,gBAAiB,KAGZjE,GAwHPkE,aApHF,SAASA,EAAaC,EAAQnE,GAC5B,IAAK,IAAIY,KAAQZ,EACc,kBAAlBA,EAAQY,GACjBuD,EAAOvD,GAAQZ,EAAQY,GAEvBsD,EAAaC,EAAOvD,GAAOZ,EAAQY,KAgHvCb,gBACAqE,cA9CkB,CAClBpE,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEI,MAAO,CACLC,SAAU,SAASC,GACjB,KAAMA,EAAQ,IAEZ,OAAOA,OAOnBC,SAAU,CACRC,UAAW,CACTC,MAAO,SAASC,EAAMC,GACpB,IAAIF,EAAQE,EAAKC,SAASF,EAAKG,cAAcJ,OAAS,GAClDK,EAASJ,EAAKI,OACdC,EAAU,GAKd,OAJIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWN,GAEbM,GAAWD,MAMnBH,KAAM,CACJQ,OAAQ,CAAC,2BAA4B,eAAgB,mBACrDP,SAAU,CACR,CACEH,MAAO,QACPE,KAAM,CAAC,GAAI,GAAI,6BClZvBU,EAAAC,QAAiB6C,EAAAC,EAAuB,uDCAxC/C,EAAAC,QAAiB6C,EAAAC,EAAuB,wDCAxC/C,EAAAC,QAAiB6C,EAAAC,EAAuB,wDCAxC/C,EAAAC,QAAiB6C,EAAAC,EAAuB,2DCAxC/C,EAAAC,QAAiB6C,EAAAC,EAAuB,yDCAxC/C,EAAAC,QAAiB6C,EAAAC,EAAuB,wDCAxC/C,EAAAC,QAAiB6C,EAAAC,EAAuB,sSCkB5B,WAAIC,GAAI,CAACC,WAAW,IAEbC,IAAXC,OAERC,IAAIC,OAAO,uBAAuB,GAE3B,IAAMC,EAAb,SAAAC,GACE,SAAAD,IAAe,IAAAE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjJ,KAAA8I,IACbE,EAAAC,OAAAE,EAAA,EAAAF,CAAAjJ,KAAAiJ,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAArJ,QAQFsJ,kBAAoB,WAClBN,EAAKO,sBAVQP,EAafO,mBAAqB,WACnB,GAAIP,EAAKQ,MAAMC,WAAaT,EAAKU,MAAMD,SAAU,CAC/C,IAAIE,EAAe,GACfX,EAAKU,MAAMD,WACbE,EAAeX,EAAKY,aAAaZ,EAAKU,MAAMD,WAG9C,IAAIhF,OAAQoF,EACZ,GAAIb,EAAKU,MAAMjF,MAAO,CACpBA,EAAQuE,EAAKU,MAAMjF,MACnB,IAAMqF,EAAed,EAAKe,oBAAoBtF,EAAOuE,EAAKU,MAAMD,UAChET,EAAKU,MAAMM,SAASvF,EAAOqF,GAG7Bd,EAAKiB,SAAS,CAACC,SAAUP,EAAcF,SAAUT,EAAKU,MAAMD,SAAUhF,YA3B3DuE,EA+Bfe,oBAAsB,SAACtF,EAAOgF,GAK5B,IAHA,IAAMU,EAAW1F,EAAM2F,MAAM,KACzBC,EAAYrB,EAAKU,MAAMD,SAHca,EAAA,SAKjCrI,GACN,IACMsI,EADevB,EAAKY,aAAaS,GACZG,KAAK,SAAA3F,GAC9B,OAAOA,EAAKJ,QAAU0F,EAASlI,KAEjC,IAAIsI,EACF,OAAAE,EAAO,MAETJ,EAAYE,EAAMG,YARZzI,EAAE,EAAGA,EAAEkI,EAAShF,OAAQlD,IAAK,KAAA0I,EAAAL,EAA7BrI,GAA6B,qBAAA0I,EAAA,OAAAA,EAAAF,EAUrC,OAAOJ,GA9CMrB,EAkDfY,aAAe,SAACgB,GAAyC,IAA/BC,EAA+BC,UAAA3F,OAAA,QAAA0E,IAAAiB,UAAA,GAAAA,UAAA,GAAtB,EAAGC,EAAmBD,UAAA3F,OAAA,QAAA0E,IAAAiB,UAAA,GAAAA,UAAA,GAAP,GAC5CnB,EAAe,GACnB,IAAK,IAAIqB,KAAYJ,EAASK,WAAY,CACxC,IAAIC,GAAS,EACPC,EAAOP,EAASK,WAAWD,GACf,WAAdG,EAAKC,OACPF,GAAS,GAEX,IAAIG,EAASzK,KAAKyK,SACjBC,SAAS,IACTC,UAAU,EAAG,GACd5B,EAAa6B,KAAK,CAAEC,GAAIJ,EAAQK,IAAKb,EAAUpG,MAAOsG,EAAcC,EAAUN,WAAYS,EAAMQ,MAAOX,EAAUE,SAAQU,UAAWV,IAEtI,OAAOvB,GA/DMX,EAkEf6C,WAAa,SAAAC,GAAQ,OACnB,IAAIC,QAAQ,SAAAC,GAAW,IAAAC,EACaH,EAASpC,MAAnC+B,EADaQ,EACbR,GAAIf,EADSuB,EACTvB,WAAYjG,EADHwH,EACGxH,MACxByH,EAAa,WACXlD,EAAKiB,SAAS,CACZC,SAAUlB,EAAKQ,MAAMU,SAASiC,OAAOnD,EAAKY,aAAac,EAAYe,EAAIhH,EAAQ,QAEjFuH,SAzEShD,EA6EfoD,SAAW,SAAC3H,EAAOG,EAAOyH,GACxBrD,EAAKiB,SAAS,CAAExF,UAChBuE,EAAKU,MAAMM,SAASvF,EAAO4H,EAAMC,YAAY5C,MAAMgB,aA7EnD1B,EAAKQ,MAAQ,CACX/E,WAAOoF,EACPK,SAAU,GACVT,SAAU,MALCT,EADjB,OAAAC,OAAAsD,EAAA,EAAAtD,CAAAH,EAAAC,GAAAE,OAAAuD,EAAA,EAAAvD,CAAAH,EAAA,EAAA2D,IAAA,SAAAhI,MAAA,WAqFW,IACCyF,EAAalK,KAAKwJ,MAAlBU,SACR,OACEwC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,oBAAkB,EAClBC,MAAO,CAAErM,MAAO,OAAQsM,SAAU,SAClCvI,MAAOzE,KAAKwJ,MAAM/E,MAClBwI,cAAe,CAAEC,UAAW,IAAKC,SAAU,QAC3CC,YAAY,gBACZhB,SAAUpM,KAAKoM,SACfiB,SAAUrN,KAAK6L,WACf3B,SAAUA,QAhGlBpB,EAAA,CAAgCwE,IAAMC,WAsGzBC,EAAb,SAAAA,IAAA,IAAAC,EAAAzN,KAAAiJ,OAAAC,EAAA,EAAAD,CAAAjJ,KAAAwN,GAAAxN,KAEE0N,gBAAkB,SAACC,GACjB,IAAIC,EAAa,GACjB,IACEA,EAAaD,EAAmBE,YAAY3I,QAAQ,oBAAoB4I,OACxE,MAAMC,IAER,OAAOH,GARX5N,KAWEgO,cAAgB,SAACL,GACf,IAAIM,EAAa,KACjB,IACEA,EAAaN,EAAmB,cAAc,oBAC9C,MAAMI,IAER,OAAOE,GAjBXjO,KAoBEkO,mBAAqB,SAACP,EAAoBQ,GAExC,IAGIC,EAHAC,EAAe,CACjBpD,WAAY,IAIZmD,EADCD,EACclF,OAAAqF,EAAA,EAAArF,CAAOkF,GAEJ,GAEpB,IACEC,EAAgBjC,OAAOwB,EAAmBY,YAAYlH,QAAQ,SAACxC,GAC7C,WAAZA,EAAK2J,KACPH,EAAapD,WAAWpG,EAAK4J,MAAQ5J,EAAKiJ,UAG9C,MAAMC,GACNW,QAAQC,IAAIZ,GAEd,OAAOM,GAxCXrO,KA2CE4O,0BAA4B,SAACL,GAE3B,IAAIM,EAAuB,CACzB5D,WAAY,IAEd,IACEsD,EAAWlH,QAAQ,SAACxC,GACF,SAAZA,EAAK2J,KACPK,EAAqB5D,WAAWpG,EAAK4J,MAAQ5J,EAAKiJ,UAGtD,MAAMC,GACNW,QAAQC,IAAIZ,GAEd,OAAOc,GAzDX7O,KA4DE8O,2BAA6B,SAACP,GAE5B,IAAIQ,EAAwB,CAC1B9D,WAAY,IAEd,IACEsD,EAAWlH,QAAQ,SAACxC,GACF,UAAZA,EAAK2J,KACPO,EAAsB9D,WAAWpG,EAAK4J,MAAQ5J,EAAKiJ,UAGvD,MAAMC,GACNW,QAAQC,IAAIZ,GAEd,OAAOgB,GA1EX/O,KA6EEgP,8BAAgC,SAACC,EAAWC,GAC1C,IAAItB,EAAa,GACjB,IACEA,EAAaqB,EAAUC,GAAYhK,QAAQ,oBAAoB4I,OAC/D,MAAMC,IAER,OAAOH,GAnFX5N,KAsFEmP,2BAA6B,SAACF,GAC5B,IAAIG,EAAU,GACd,IAEEA,EAAUH,EADUxB,EAAK4B,mCAAmCJ,IAC3BG,QACjC,MAAMrB,IAER,OAAOqB,GA7FXpP,KAgGEqP,mCAAqC,SAACJ,GACpC,IAAIK,EACJ,IAAK,IAAIC,KAAgBN,EACvB,GAAGM,GAAgB,KAAOA,GAAe,IAAK,CAC5CD,EAAcC,EACd,MAGJ,OAAGD,GAGM,WA3GbtP,KA+GEwP,eA/GF,eAAAC,EAAAxG,OAAAyG,EAAA,EAAAzG,CAAA0G,EAAAhD,EAAAiD,KA+GmB,SAAAC,EAAO/B,GAAP,IAAAgC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMtH,IAAIoD,QAAQ8B,GADlB,cACTgC,EADSE,EAAAG,KAAAH,EAAAI,OAAA,SAERN,GAFQ,wBAAAE,EAAAK,SAAAR,MA/GnB,gBAAAS,GAAA,OAAAb,EAAAc,MAAAvQ,KAAA8K,YAAA,8RC9HAtF,EAAAC,QAAiB6C,EAAAC,EAAuB,gPCyDzBiI,mLA9BX,OACEC,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CAAQC,UAAU,yBAAyBC,OAAO,KAAKpF,GAAG,eACxDgF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWC,OAAK,GACdN,EAAA9D,EAAAC,cAACoE,EAAA,EAAD,CACEJ,UAAU,6DACVK,GAAG,KAEFjR,KAAK0J,MAAMwH,qBAVA5D,IAAMC,WCIjB4D,mLAJX,OAAO,YAFU7D,IAAMC,4KCkCrB6D,cAIJ,SAAAA,EAAY1H,GAAO,IAAAV,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAoR,IACjBpI,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAmI,GAAA/H,KAAArJ,KAAM0J,KAJRF,MAAQ,CACNgI,cAAc,GAEGxI,EASnByI,eAAiB,WACfzI,EAAKiB,SAAS,CACZuH,cAAexI,EAAKQ,MAAMgI,gBAXXxI,EAenB0I,cAAgB,WACd1I,EAAKiB,SAAS,CACZuH,cAAc,KAjBCxI,EAqBnB2I,YAAc,SAAAC,GACZ,OAAOA,EAAOC,IAAI,SAACC,EAAMrF,GACvB,OACEgE,EAAA9D,EAAAC,cAACmF,EAAA,EAAD,CAAStF,IAAKA,GACZgE,EAAA9D,EAAAC,cAACoF,EAAA,EAAD,CACEf,GAAIa,EAAK3L,OAAS2L,EAAKG,KACvBC,IAAKC,IACLC,QAASpJ,EAAK0I,cACdW,gBAAgB,UAEhB5B,EAAA9D,EAAAC,cAAA,KAAGgE,UAAWkB,EAAKQ,OAClBR,EAAKrD,KACNgC,EAAA9D,EAAAC,cAAA,WARF,IAQUkF,EAAKS,cA/BrBvJ,EAAKwJ,YAAYC,KAAjBxJ,OAAAyJ,EAAA,EAAAzJ,QAAAyJ,EAAA,EAAAzJ,CAAAD,KAFiBA,2EAKP2J,GACV,OAAO3S,KAAK0J,MAAMkJ,SAASC,SAASjR,QAAQ+Q,IAAc,EAAI,SAAW,oCAiClE,IAEHG,EAFGC,EAC2B/S,KAAK0J,MAAtBkI,GADVmB,EACCzL,QADDyL,EACUnB,QAAQoB,EADlBD,EACkBC,KAazB,OAXIA,GAAQA,EAAKC,UACfH,EAAmB,CACjB7B,GAAI+B,EAAKC,UACTf,IAAKlB,KAEEgC,GAAQA,EAAKE,aACtBJ,EAAmB,CACjBK,KAAMH,EAAKE,WACXE,OAAQ,WAIV3C,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACEC,UAAU,mDACVC,OAAO,KACPpF,GAAG,gBAEHgF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWC,OAAK,GAEdN,EAAA9D,EAAAC,cAAA,UACEgE,UAAU,iBACVxF,KAAK,SACLgH,QAASpS,KAAKyR,gBAEdhB,EAAA9D,EAAAC,cAAA,QAAMgE,UAAU,yBAGjBoC,EACCvC,EAAA9D,EAAAC,cAACyG,EAAA,EAADpK,OAAAqK,OAAA,CAAa1C,UAAU,QAAWkC,GAChCrC,EAAA9D,EAAAC,cAAA,OACE2G,IAAKP,EAAKQ,OACV5C,UAAU,mBACV6C,IAAKT,EAAKU,SAEZjD,EAAA9D,EAAAC,cAAA,WACA6D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,yBAEA,KAEJH,EAAA9D,EAAAC,cAAC+G,EAAA,EAAD,CAAK/C,UAAU,gCACbH,EAAA9D,EAAAC,cAACgH,EAAA,EAAD,CAAsBC,KAAG,GACvBpD,EAAA9D,EAAAC,cAACkH,EAAA,EAAD,CAAgBD,KAAG,EAACjD,UAAU,iBAC5BH,EAAA9D,EAAAC,cAAA,KAAGgE,UAAU,mBAEfH,EAAA9D,EAAAC,cAACmH,EAAA,EAAD,CACEC,kBAAgB,4BAChBpD,UAAU,sBACVnR,OAAK,GAELgR,EAAA9D,EAAAC,cAACqH,EAAA,EAAD,eACAxD,EAAA9D,EAAAC,cAACqH,EAAA,EAAD,uBACAxD,EAAA9D,EAAAC,cAACqH,EAAA,EAAD,CAAcC,SAAO,IACrBzD,EAAA9D,EAAAC,cAACqH,EAAA,EAAD,+BAKNxD,EAAA9D,EAAAC,cAACuH,EAAA,EAAD,CAAUC,QAAM,EAACC,OAAQrU,KAAKwJ,MAAMgI,cAElCf,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,oCACbH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACGtB,EACCvC,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,iBAAiB4D,GAAG,KAChCxB,EAAKC,UACJxC,EAAA9D,EAAAC,cAACoE,EAAA,EAAD,CAAMC,GAAI+B,EAAKC,WACbxC,EAAA9D,EAAAC,cAAA,OAAK2G,IAAKP,EAAKQ,OAAQC,IAAKT,EAAKU,UAGnCjD,EAAA9D,EAAAC,cAAA,KAAGuG,KAAMH,EAAKE,YACZzC,EAAA9D,EAAAC,cAAA,OAAK2G,IAAKP,EAAKQ,OAAQC,IAAKT,EAAKU,WAIrC,KACJjD,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,iBAAiB4D,GAAG,KACjC/D,EAAA9D,EAAAC,cAAA,UACEgE,UAAU,iBACVxF,KAAK,SACLgH,QAASpS,KAAKyR,gBAEdhB,EAAA9D,EAAAC,cAAA,aACA6D,EAAA9D,EAAAC,cAAA,iBAMR6D,EAAA9D,EAAAC,cAAC6H,EAAA,EAAD,CAAM7D,UAAU,uBACdH,EAAA9D,EAAAC,cAAC8H,EAAA,EAAD,CAAY9D,UAAU,yCACpBH,EAAA9D,EAAAC,cAAC+H,EAAA,EAAD,CACEC,aAAW,SACXhE,UAAU,8CACVxD,YAAY,SACZhC,KAAK,WAEPqF,EAAA9D,EAAAC,cAACiI,EAAA,EAAD,CAAiBC,UAAU,WACzBrE,EAAA9D,EAAAC,cAACmI,EAAA,EAAD,KACEtE,EAAA9D,EAAAC,cAAA,QAAMgE,UAAU,qBAMxBH,EAAA9D,EAAAC,cAAC+G,EAAA,EAAD,CAAKS,QAAM,GAAEpU,KAAK2R,YAAYC,IAE9BnB,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,mBAvJJtD,IAAMC,WA+J5B6D,EAAQ4D,aAAe,CACrBpD,OAAQ,CAAC,KAoBIR,wGCrMA6D,mLAhBX,OACExE,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,OACEgE,UAAU,mFACV7D,MAAO,CACLmI,UAAW,QACXC,eAAgB,QAChBC,mBAAoB,wBATX9H,IAAMC,WC2RZ8H,6MA9Pb7L,MAAQ,CACN8L,UAAW,EACXC,kBAAmB,WAErBC,WAAa,SAACC,EAAG3T,GACf2T,EAAEC,iBACF1M,EAAKiB,SAAS,CACZqL,UAAWxT,EACXyT,kBACmC,UAAjCvM,EAAKQ,MAAM+L,kBAAgC,QAAU,UAEzD,IAAII,EAAM,WACRjH,QAAQC,IAAI3F,EAAKQ,QAEnBmM,EAAIlD,KAAJxJ,OAAAyJ,EAAA,EAAAzJ,QAAAyJ,EAAA,EAAAzJ,CAAAD,KACA4M,WAAW,kBAAMD,KAAO,0FAIpBE,OAAO3W,OACTiJ,uBAAajJ,IAAOwG,2DAItB,OACE+K,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAACkJ,EAAD,MAEArF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChCN,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKwB,GAAG,KACNtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,UACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,kBACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,OACbH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,uCAAd,iBAGAH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,eAINH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KAEEzF,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,SACbH,EAAA9D,EAAAC,cAACuJ,EAAA,EAAD,CACErR,KAAMuD,gBAAcvD,KACpBb,QAASoE,gBAAcpE,cAMjCwM,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKwB,GAAG,KACNtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,UACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,kBACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,OACbH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,uCAAd,iBAGAH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,eAINH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KAEEzF,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,SACbH,EAAA9D,EAAAC,cAACuJ,EAAA,EAAD,CACErR,KAAMuD,gBAAcvD,KACpBb,QAASoE,gBAAcpE,eAOnCwM,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,eAAemF,GAAG,KAC/BtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,UACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,YACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,OACbH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,2BAEFH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,kBACbH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACN8O,KAAK,SACLf,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,kBAChBW,KAAK,MAJP,cAWN5F,EAAA9D,EAAAC,cAAC0J,EAAA,EAAD,CAAO1F,UAAU,iCAAiC/K,YAAU,GAC1D4K,EAAA9D,EAAAC,cAAA,SAAOgE,UAAU,eACfH,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,iBACA9F,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,QACA9F,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,kBACA9F,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,gBAGJ9F,EAAA9D,EAAAC,cAAA,aACE6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,wBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,gBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,kBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,wBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,kBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,oBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,8BACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,wBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,qBAIF6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,0BACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,iBACA6D,EAAA9D,EAAAC,cAAA,yBAQV6D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKwB,GAAG,KACNtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,UACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,YACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,OACbH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,sBAEFH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,kBACbH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACN8O,KAAK,SACLf,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,kBAChBW,KAAK,MAJP,cAWN5F,EAAA9D,EAAAC,cAAC0J,EAAA,EAAD,CAAO1F,UAAU,iCAAiC/K,YAAU,GAC1D4K,EAAA9D,EAAAC,cAAA,SAAOgE,UAAU,eACfH,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,gBACA9F,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,QACA9F,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,gBAGJ9F,EAAA9D,EAAAC,cAAA,aACE6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,oBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,6BACbH,EAAA9D,EAAAC,cAAA,QAAMgE,UAAU,QAAhB,OACAH,EAAA9D,EAAAC,cAAA,WACE6D,EAAA9D,EAAAC,cAAC4J,EAAA,EAAD,CACEC,IAAI,MACJhS,MAAM,KACNiS,aAAa,2BAMvBjG,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAI2J,MAAM,OAAV,kBACA9F,EAAA9D,EAAAC,cAAA,mBACA6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,6BACbH,EAAA9D,EAAAC,cAAA,QAAMgE,UAAU,QAAhB,OACAH,EAAA9D,EAAAC,cAAA,WACE6D,EAAA9D,EAAAC,cAAC4J,EAAA,EAAD,CACEC,IAAI,MACJhS,MAAM,KACNiS,aAAa,0CA9OvBpJ,IAAMC,oBCaXoJ,oLAvCX,OACElG,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,OACEgE,UAAU,qDACV7D,MAAO,CACLmI,UAAW,QACX0B,gBACE,OAASzX,EAAQ,IAAgC,IACnDgW,eAAgB,QAChBC,mBAAoB,eAItB3E,EAAA9D,EAAAC,cAAA,QAAMgE,UAAU,uCAEhBH,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,4BAA4BG,OAAK,GACpDN,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,IAAIC,GAAG,MACbrG,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,wBAAd,eACAH,EAAA9D,EAAAC,cAAA,KAAGgE,UAAU,wBAAb,6HAIAH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN8O,KAAK,SACLf,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,mBAHlB,4BAzBSpI,IAAMC,eCaTD,IAAMC,kBCHtBwJ,GAAaC,wBACjBC,yBAAc,SAAAvN,GAAK,OACjB+G,EAAA9D,EAAAC,cAACsK,GAAA,UAAD,CACEC,YAAa,GACbC,cAAe,CAAEC,IAAK,UAAWC,KAAM,WACvCC,eAAgB,CACdC,aAAa,EACbC,OAAQ,CACN,CACEC,YAAa,iBACbC,YAAa,mBACbC,QAAS,CAAC,CAAEvT,MAAO,aAErB,CACEqT,YAAa,YACbC,YAAa,MACbC,QAAS,CAAC,CAAEvT,MAAO,aAErB,CACEqT,YAAa,MACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,OACbC,YAAa,MACbC,QAAS,CAAC,CAAEE,YAAa,KAAO,CAAEC,UAAW,MAE/C,CACEL,YAAa,eACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,gBAE1B,CACEH,YAAa,gBACbC,YAAa,cACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,UACbC,YAAa,MACbC,QAAS,CAAC,CAAEC,WAAY,SAE1B,CACEH,YAAa,QACbC,YAAa,MACbC,QAAS,CAAC,CAAEvT,MAAO,WAAa,CAAEwT,WAAY,WAKpDpH,EAAA9D,EAAAC,cAACsK,GAAA,OAAD,CAAQ3Q,SAAU,CAAE8Q,IAAK,UAAWC,KAAM,qBAK7BhK,IAAMC,UCrDFD,IAAMC,UCATD,IAAMC,kFCOLD,IAAMC,oBCTPD,IAAMC,4QCGpByK,GAAM,IAAIxP,KAAI,CAACC,WAAW,IAExBE,GAAWD,KAAXC,OAGFsP,eAEJ,SAAAA,IAAc,IAAAjP,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAiY,IACZjP,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAgP,GAAA5O,KAAArJ,QAKFkY,YAAc,KANAlP,EAQdmP,kBAAoB,SAACC,GACfpP,EAAKU,MAAMI,eAGbd,EAAKkP,YAAcF,GAAIK,QAAQrP,EAAKU,MAAMI,cAC5Bd,EAAKkP,YAAYE,IAE7BpP,EAAKU,MAAM0C,SAASgM,GACpBpP,EAAKiB,SAAS,CAACqO,UAAW,OAE1BtP,EAAKU,MAAM0C,SAASgM,GACpBpP,EAAKiB,SAAS,CAACqO,UAAWtP,EAAKkP,YAAYK,YAnBnCvP,EAyBdwP,cAAgB,WACd,OAAGxP,EAAKU,MAAMI,cAAgBd,EAAKU,MAAMI,aAAa2O,KAElDhI,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtM,SAAUpD,EAAKmP,kBACf1T,MAAOuE,EAAKU,MAAMjF,OAElBuE,EAAKU,MAAMI,aAAa2O,KAAK5G,IAAI,SAAAhN,GACjC,OACE4L,EAAA9D,EAAAC,cAACjE,GAAD,CAAQ8D,IAAK5H,EAAMJ,MAAOI,GAAOA,MAOrC4L,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CAAOvL,YAAY,QACnB3I,MAAOuE,EAAKU,MAAMjF,MAClB2H,SAAU,SAACqJ,GAAD,OAAOzM,EAAKmP,kBAAkB1C,EAAErC,OAAO3O,YA5C3CuE,EAkDd4P,gBAAkB,WAChB,OAAG5P,EAAKU,MAAMI,cAAgBd,EAAKU,MAAMI,aAAa2O,KAC5C,KAELzP,EAAKQ,MAAM8O,WAAatP,EAAKQ,MAAM8O,UAAUnT,OAAS,EAErDsL,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAACiM,GAAA,EAAD,CAASlN,MAAOqM,GAAIc,WAAW9P,EAAKQ,MAAM8O,YACxC7H,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAM,OAAX,uBAJR,GApDF2E,EAAKQ,MAAQ,CACX8O,UAAW,MAHDtP,wEAmEZ,OACEyH,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACI1Q,KAAKwY,gBACLxY,KAAK4Y,0BAxEatL,IAAMC,WA8E5BwL,eAEJ,SAAAA,IAAc,IAAAtL,EAAA,OAAAxE,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA+Y,IACZtL,EAAAxE,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA8P,GAAA1P,KAAArJ,QAWFsJ,kBAZcL,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAYM,SAAAC,IAAA,IAAAqJ,EAAAC,EAAAC,EAAA,OAAAH,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZgJ,EAAmBzL,EAAK4L,aAAa7O,KAAK,SAAA3F,GAC9C,OAAOA,EAAK4J,OAAShB,EAAK/D,MAAM4P,UAAUnO,OAEtCgO,EAAmB1L,EAAK/D,MAAM4P,UAAUrH,KAC1CmH,EAAgB,GACjB3L,EAAK/D,MAAMyE,iBACZiL,EAAgBA,EAAcjN,OAAOsB,EAAK/D,MAAMyE,iBAE/CV,EAAK/D,MAAMiE,oBAAsBF,EAAK/D,MAAMiE,mBAAmBY,aAChE6K,EAAgBA,EAAcjN,OAAOsB,EAAK/D,MAAMiE,mBAAmBY,aAVnDyB,EAAAE,KAAA,EAaZzC,EAAKxD,SAAS,CAAEiP,mBAAkBC,mBAAkBC,kBAbxC,OAclB3L,EAAK8L,iBAda,wBAAAvJ,EAAAK,SAAAR,MAZNpC,EAkCd0K,kBAAoB,SAACC,GACnB3K,EAAK/D,MAAM4P,UAAU7U,MAAQ2T,EAC7B3K,EAAK/D,MAAM8P,qBApCC/L,EAuCdgM,aAAe,WACbhM,EAAK/D,MAAMgQ,SAASjM,EAAK/D,MAAM5H,OAC/B2L,EAAK/D,MAAM8P,qBAzCC/L,EA4CdkM,UAAY,CACV,CACEhO,MAAO,eACP8C,KAAM,QAER,CACE9C,MAAO,kBACP8C,KAAM,YAnDIhB,EAuDd4L,aAAe,CACb,CACE1N,MAAO,eACP8C,KAAM,QAER,CACE9C,MAAO,kBACP8C,KAAM,WAER,CACE9C,MAAO,0BACP8C,KAAM,cAER,CACE9C,MAAO,2BACP8C,KAAM,gBAtEIhB,EA0EdmM,eAAiB,WACf,GAAInM,EAAKjE,MAAM4P,eACS3L,EAAKjE,MAAM4P,cAAc5O,KAAK,SAAA3F,GAClD,MAAmB,SAAZA,EAAK2J,KAGZ,OAAO,EAGX,OAAO,GAnFKf,EAsFdoM,gBAAkB,WAChB,GAAIpM,EAAKjE,MAAM4P,eACU3L,EAAKjE,MAAM4P,cAAc5O,KAAK,SAAA3F,GACnD,MAAmB,UAAZA,EAAK2J,KAGZ,OAAO,EAGX,OAAO,GA/FKf,EAkGdqM,iBAAmB,WACjB,IAAIC,EAAa9Q,OAAA+Q,GAAA,EAAA/Q,CAAOwE,EAAKkM,WAiB7B,OAhBIlM,EAAKmM,kBACPG,EAAcvO,KACZ,CACEG,MAAO,0BACP8C,KAAM,eAIRhB,EAAKoM,mBACPE,EAAcvO,KACZ,CACEG,MAAO,2BACP8C,KAAM,gBAILsL,EAAclI,IAAI,SAAChN,GACxB,OAAO4L,EAAA9D,EAAAC,cAACjE,GAAD,CAAQ8D,IAAK5H,EAAK4J,KAAMhK,MAAOwV,KAAKC,UAAUrV,IAAQA,EAAK8G,UArHxD8B,EAyHd8L,eAAiB,WACf,GAAI9L,EAAKjE,MAAM0P,iBACb,OAAOzL,EAAKjE,MAAM0P,iBAAiBzK,MACjC,IAAK,OACHhB,EAAKxD,SAAU,CAACR,UAAW,IAAI+D,MAAqBE,gBAAgBD,EAAK/D,MAAMiE,sBAC/E,MACF,IAAK,UACHF,EAAKxD,SAAU,CAACR,UAAW,IAAI+D,MAAqBU,mBAAmBT,EAAK/D,MAAMiE,mBAAoBF,EAAK/D,MAAMyE,kBACjH,MACF,IAAK,aACHV,EAAKxD,SAAU,CAACR,UAAW,IAAI+D,MAAqBoB,0BAA0BnB,EAAKjE,MAAM4P,iBACzF,MACF,IAAK,cACH3L,EAAKxD,SAAU,CAACR,UAAW,IAAI+D,MAAqBsB,2BAA2BrB,EAAKjE,MAAM4P,iBAC1F,MACF,QACE3L,EAAKxD,SAAU,CAACR,SAAU,YAG9BgE,EAAKxD,SAAU,CAACR,SAAU,QA5IhBgE,EAgJd0M,qBAhJc,eAAAC,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAgJS,SAAAyK,EAAO5V,GAAP,IAAA6V,EAAA,OAAArB,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAAtK,KAAA,EAEbqK,EAAsBL,KAAKO,MAAM/V,GAFpB8V,EAAArK,KAAA,EAGbzC,EAAKxD,SAAU,CAACiP,iBAAmBoB,EAAqBxQ,aAAc,KAAMqP,iBAAkB,OAHjF,OAInB1L,EAAK/D,MAAM4P,UAAUnO,KAAOmP,EAAoB7L,KAChDhB,EAAK/D,MAAM8P,oBACX/L,EAAK8L,iBANcgB,EAAArK,KAAA,gBAAAqK,EAAAtK,KAAA,EAAAsK,EAAAE,GAAAF,EAAA,kCAAAA,EAAAlK,SAAAgK,EAAA,iBAhJT,gBAAA/J,GAAA,OAAA8J,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA2C,EA0JdiN,iBAAmB,SAACjW,EAAOkW,GAEzB,IAAIC,EAAmB,KACnBnN,EAAK/D,MAAM4P,UAAUrH,OAASxN,IAChCmW,EAAmBnN,EAAK/D,MAAM4P,UAAUuB,UAE1CpN,EAAKxD,SAAU,CAAEH,aAAc6Q,EAAYC,mBAAkBzB,iBAAkB1U,IAC/EgJ,EAAK/D,MAAM4P,UAAUrH,KAAOxN,EAC5BgJ,EAAK/D,MAAM4P,UAAUuB,SAAWD,EAChCnN,EAAK/D,MAAM8P,qBAnKC/L,EAsKdqN,qBAAuB,SAACD,GACtB,IACEpN,EAAKxD,SAAU,CAAC2Q,iBAAmBC,IACnCpN,EAAK/D,MAAM4P,UAAUuB,SAAWA,EAChCpN,EAAK/D,MAAM8P,oBACX,MAAMzL,MA3KIN,EA8KdsN,qBAAuB,CACrBC,aAAc,QACdC,gBAAiB,YACjBC,gBAAiB,YACjBC,mBAAoB,eACpBC,yBAA0B,wBAC1BC,4BAA6B,2BAC7BC,WAAY,SACZC,UAAW,SAtLC9N,EAwLd+N,uBAAyB,CACvBC,OAAQ,CAAE,eAAgB,kBAAmB,kBAAmB,qBAAsB,2BAA4B,gCAzLtGhO,EA2LdiO,iBAAmB,WACjB,IAAIC,EAAe,GAgCnB,OA/BIlO,EAAKjE,MAAMM,eAEwB,WAAjC2D,EAAKjE,MAAMM,aAAasB,KAEvBqC,EAAK+N,uBAAuB/N,EAAKjE,MAAMM,aAAa6B,OACrD8B,EAAK+N,uBAAuB/N,EAAKjE,MAAMM,aAAa6B,OAAOkG,IAAI,SAAAhN,GAC7D,IAAI+W,EAAc/W,EAEf4I,EAAKsN,qBAAqBlW,KAC3B+W,EAAcnO,EAAKsN,qBAAqBlW,IAE1C8W,EAAanQ,KAAK,CAAEoQ,cAAanN,KAAM5J,OAGzC8W,EAAanQ,KAAK,CAACoQ,YAAa,QAASnN,KAAM,UAC/CkN,EAAanQ,KAAK,CAACoQ,YAAa,YAAanN,KAAM,cAEX,YAAjChB,EAAKjE,MAAMM,aAAasB,MACjCuQ,EAAanQ,KAAK,CAACoQ,YAAa,QAASnN,KAAM,UAC/CkN,EAAanQ,KAAK,CAACoQ,YAAa,YAAanN,KAAM,aACnDkN,EAAanQ,KAAK,CAACoQ,YAAa,YAAanN,KAAM,aACnDkN,EAAanQ,KAAK,CAACoQ,YAAa,wBAAyBnN,KAAM,sBAC/DkN,EAAanQ,KAAK,CAACoQ,YAAa,eAAgBnN,KAAM,gBACtDkN,EAAanQ,KAAK,CAACoQ,YAAa,2BAA4BnN,KAAM,2BAElEkN,EAAanQ,KAAK,CAACoQ,YAAa,QAASnN,KAAM,UAC/CkN,EAAanQ,KAAK,CAACoQ,YAAa,YAAanN,KAAM,eAKhDkN,EAAa9J,IAAI,SAAAhN,GACtB,OAAO4L,EAAA9D,EAAAC,cAACjE,GAAD,CAAQ8D,IAAK5H,EAAK4J,KAAMhK,MAAOI,EAAK4J,MAAO5J,EAAK+W,gBA3NzDnO,EAAKjE,MAAQ,CACX0P,iBAAkB,KAClBpP,aAAc,KACdqP,iBAAkB,KAClB1P,SAAU,KACVmR,iBAAkB,KAClBxB,cAAe,IARL3L,wEAoOZ,OACEgD,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC0J,EAAA,EAAD,CAAO1F,UAAU,UACfH,EAAA9D,EAAAC,cAAA,aACA6D,EAAA9D,EAAAC,cAAA,UACA6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,iBAFV,aAMArL,EAAA9D,EAAAC,cAAA,WAEA6D,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEjU,MAAOwV,KAAKC,UAAUla,KAAKwJ,MAAM0P,kBACjC9M,SAAUpM,KAAKma,qBACfpN,MAAO,CAACC,SAAU,UAEjBhN,KAAK8Z,sBAIZrJ,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,QAMArL,EAAA9D,EAAAC,cAAA,WACA6D,EAAA9D,EAAAC,cAACmP,GAAA,EAAD,CAAYtS,SAAUzJ,KAAKwJ,MAAMC,SAAUhF,MAAOzE,KAAKwJ,MAAM2P,iBAAkBnP,SAAUhK,KAAK0a,qBAGlGjK,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,iBAFV,YAMArL,EAAA9D,EAAAC,cAAA,WACA6D,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CAAQ3L,MAAO,CAAErM,MAAO,KAAO+D,MAAOzE,KAAKwJ,MAAMoR,iBAAkBxO,SAAUpM,KAAK8a,sBAC/E9a,KAAK0b,uBAKdjL,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAIoP,QAAQ,KACVvL,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,iBAFV,SAMArL,EAAA9D,EAAAC,cAAA,WACA6D,EAAA9D,EAAAC,cAACqP,GAAD,CAAexX,MAAOzE,KAAK0J,MAAM4P,UAAU7U,MAAOqF,aAAc9J,KAAKwJ,MAAMM,aAAcsC,SAAUpM,KAAKmY,sBAI5G1H,EAAA9D,EAAAC,cAAA,MAAIsP,MAAM,SACRzL,EAAA9D,EAAAC,cAAA,WACA6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAASpS,KAAKyZ,aACdpD,KAAK,MAHP,sBAzSY/I,IAAMC,WA0TxB4O,8MAMJC,sBAAwB,SAAC9C,GACvB+C,EAAK3S,MAAM4S,wBAGbC,sBAAwB,SAACza,GACvBua,EAAK3S,MAAM8S,WAAWC,OAAO3a,EAAO,4EAG7B,IAAA4a,EAAA1c,KACP,OACEyQ,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KAEE1Q,KAAK0J,MAAM8S,WAAW3K,IAAI,SAACyH,EAAWxX,GACpC,OACE2O,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK7H,IAAK3K,GACR2O,EAAA9D,EAAAC,cAAC+P,GAAD,CAAWrD,UAAWA,EAAWxX,MAAOA,EAAO8a,SAAUF,EAAKhT,MAAMkT,SAAUjP,mBAAoB+O,EAAKhT,MAAMiE,mBAAoBQ,eAAgBuO,EAAKhT,MAAMyE,eAC1JqL,kBAAmBkD,EAAKN,sBACxB1C,SAAUgD,EAAKH,mCAvBNjP,IAAMC,WAwFhBsP,eAlDb,SAAAA,IAAc,IAAAC,EAAA,OAAA7T,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA6c,IACZC,EAAA7T,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA4T,GAAAxT,KAAArJ,QAUF+c,aAAe,CACb5R,KAAM,KACN0P,SAAU,KACVpW,MAAO,MAdKqY,EAiBdE,aAAe,WACbF,EAAKpT,MAAM8S,WAAWhR,KAAtBvC,OAAAgU,GAAA,EAAAhU,CAAA,GAA+B6T,EAAKC,eACpCD,EAAKI,0BAnBOJ,EAsBdI,uBAAyB,WACvBJ,EAAKpT,MAAM0C,SAAS,CAAEoQ,WAAYM,EAAKpT,MAAM8S,cArB7CM,EAAKtT,MAAQ,GAFDsT,wEA0BL,IAAAK,EAAAnd,KAEP,OACEyQ,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAACwQ,GAAD,CACEZ,WAAYxc,KAAK0J,MAAM8S,WACvBI,SAAU5c,KAAK0J,MAAMkT,SACrBjP,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAgBnO,KAAK0J,MAAMyE,eAC3BmO,mBAAoBtc,KAAKkd,yBAE3BzM,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACN+N,QAAS,kBAAM+K,EAAKH,gBACpBpR,UAAW5L,KAAK0J,MAAMkT,SACtBvG,KAAK,MAJP,yBAvCuB/I,IAAMC,uEC1a/ByK,GAAM,IAAIxP,KAAI,CAACC,WAAW,IAExBE,GAAWD,KAAXC,OAEF0U,eAEJ,SAAAA,IAAc,IAAArU,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAqd,IACZrU,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAoU,GAAAhU,KAAArJ,QAaFsd,MAAQ,GAdMtU,EAeduU,WAAa,KAfCvU,EAiBdwU,YAAc,WACZ,OAAOxU,EAAKsU,MAAMzL,IAAI,SAAChN,EAAM4H,GAC3B,OACEgE,EAAA9D,EAAAC,cAAC6Q,GAAD,CAAQhR,IAAKA,EAAKhI,MAAOgI,GACtB5H,MArBKmE,EA2Bd0U,iBA3Bc,eAAAjO,EAAAxG,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA2BK,SAAAC,EAAOrN,GAAP,IAAAiH,EAAA,OAAAwP,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbzG,EAAW,KADEuG,EAAAyK,GAEVjY,EAFUwN,EAAAE,KAGV,IAHUF,EAAAyK,GAAA,EAMV,IANUzK,EAAAyK,GAAA,EASV,IATUzK,EAAAyK,GAAA,yBAIbhR,GAAY,IAAI+D,MAAqBoB,0BAA0B5F,EAAKU,MAAMyE,gBAJ7D6B,EAAAI,OAAA,0BAOb3G,GAAY,IAAI+D,MAAqBE,gBAAgB1E,EAAKU,MAAMiE,oBAPnDqC,EAAAI,OAAA,0BAUb3G,GAAY,IAAI+D,MAAqBU,mBAAmBlF,EAAKU,MAAMiE,mBAAoB3E,EAAKU,MAAMyE,gBAVrF6B,EAAAI,OAAA,oBAab3G,EAAW,KAbE,eAAAuG,EAAAE,KAAA,GAeXlH,EAAKiB,SAAU,CAACzH,KAAMA,EAAMiH,SAAUA,IAf3B,QAgBjBT,EAAK2U,gBAhBY,yBAAA3N,EAAAK,SAAAR,MA3BL,gBAAAS,GAAA,OAAAb,EAAAc,MAAAvQ,KAAA8K,YAAA,GAAA9B,EA8Cd4U,kBAAoB,WAClB,OAAO5U,EAAKQ,MAAMhH,MAChB,KAAK,EACL,KAAK,EACL,KAAK,EACH,OACEiO,EAAA9D,EAAAC,cAACmP,GAAA,EAAD,CAAYtP,IAAKzD,EAAKU,MAAM+E,KAAMhF,SAAUT,EAAKQ,MAAMC,SAAUO,SAAUhB,EAAK0R,mBAGpF,KAAK,EACL,QACE,OAAO,OAzDC1R,EA6DdmR,qBA7Dc,eAAAC,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA6DS,SAAAyK,EAAO5V,GAAP,IAAA6V,EAAA,OAAArB,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAAtK,KAAA,EAEbqK,EAAsBL,KAAKO,MAAM/V,GAFpB8V,EAAArK,KAAA,EAGblH,EAAKiB,SAAU,CAACiP,iBAAmBoB,IAHtB,OAInBtR,EAAKU,MAAM4P,UAAUnO,KAAOmP,EAAoB7L,KAChDzF,EAAKU,MAAM8P,oBACXxQ,EAAKuQ,iBANcgB,EAAArK,KAAA,gBAAAqK,EAAAtK,KAAA,EAAAsK,EAAAE,GAAAF,EAAA,kCAAAA,EAAAlK,SAAAgK,EAAA,iBA7DT,gBAAAwD,GAAA,OAAAzD,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAuEd0R,iBAAmB,SAACjW,EAAOkW,GACzB3R,EAAKuU,WAAa9Y,EAClBuE,EAAK2U,iBAzEO3U,EA4Ed2U,cAAgB,WACd,IAAIG,EAAa,GAIjB,OAHK9U,EAAKuU,aACRvU,EAAKuU,WAAa,IAEbvU,EAAKQ,MAAMhH,MAChB,KAAK,EACHsb,EAAa,oBAAsB9U,EAAKuU,WAAa,IACrD,MACF,KAAK,EACHO,EAAa,kBAAoB9U,EAAKuU,WAAa,IACnD,MACF,KAAK,EACHO,EAAa,oBAAsB9U,EAAKuU,WAAa,IACrD,MACF,KAAK,EACHO,EAAa,mCACb,MACF,QACEA,EAAa9U,EAAKuU,WAItBvU,EAAKU,MAAM0C,SAAS0R,IAnGR9U,EAsGdmP,kBAAoB,SAACC,GACnBpP,EAAKuU,WAAanF,EAClBpP,EAAK2U,iBAtGL3U,EAAKQ,MAAQ,CACXhH,KAAM,KACNiH,SAAU,MAIZT,EAAKsU,MAAM,GAAG,yBACdtU,EAAKsU,MAAM,GAAG,yBACdtU,EAAKsU,MAAM,GAAG,2BACdtU,EAAKsU,MAAM,GAAG,0BAXFtU,wEA6GZ,OACEyH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtL,YAAY,gBACZL,MAAO,CAAErM,MAAO,KAChB+D,MAAOzE,KAAKsd,MAAMtd,KAAKwJ,MAAMhH,MAC7BwH,SAAUhK,KAAK0d,kBAEd1d,KAAKwd,gBAGV/M,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACGvU,KAAK4d,6BA5HoBtQ,IAAMC,WAmIpCwQ,eACJ,SAAAA,IAAc,IAAAtQ,EAAA,OAAAxE,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA+d,IACZtQ,EAAAxE,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA8U,GAAA1U,KAAArJ,QAQF4N,WAAa,GATCH,EAWdnE,kBAAoB,WAIlBmE,EAAKG,YAAc,IAAIJ,MAAqBE,gBAAgBD,EAAK/D,MAAMsU,oBAGvE,IAAIC,EAA0B,GAC1BxQ,EAAK/D,MAAMwU,yBACbD,EAA0BA,EAAwB9R,OAAOsB,EAAK/D,MAAMwU,yBAElEzQ,EAAK/D,MAAMsU,mBAAmBzP,aAChC0P,EAA0BA,EAAwB9R,OAAOsB,EAAK/D,MAAMsU,mBAAmBzP,aAGzF,IAAI4P,EAAkB,GACtB,IAAK,IAAIC,KAAKH,EACZE,EAAgBF,EAAwBG,GAAG3P,MAAQ,CACjD4P,YAAaJ,EAAwBG,GAAGC,aAG5C5Q,EAAKxD,SAAS,CAACgU,0BAAyBE,qBAhC5B1Q,EA6Cd6Q,6BA7CcrV,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA6CiB,SAAA2O,IAAA,IAAAC,EAAAC,EAAA3T,UAAA,OAAAmO,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,OAAOsO,EAAPC,EAAAtZ,OAAA,QAAA0E,IAAA4U,EAAA,IAAAA,EAAA,GAC7BhR,EAAKjE,MAAMyU,wBAAwB5W,QAAQ,SAACsX,GAC3B,WAAXA,EAAMnQ,KACHgQ,IAAgBG,EAAMC,WACpBnR,EAAK/D,MAAMmV,YAAYzP,QAIlB3B,EAAK/D,MAAMmV,YAAYzP,QAAQuP,EAAMlQ,QAC7ChB,EAAK/D,MAAMmV,YAAYzP,QAAQuP,EAAMlQ,MAAQ,KAJ7ChB,EAAK/D,MAAMmV,YAAYzP,QAAU,GACjC3B,EAAK/D,MAAMmV,YAAYzP,QAAQuP,EAAMlQ,MAAQ,QAQrDhB,EAAKkQ,gBAdwB,wBAAAe,EAAArO,SAAAkO,MA7CjB9Q,EA8DdqR,cAAgB,SAACC,GACVtR,EAAK/D,MAAMmV,YAAYzP,UAC1B3B,EAAK/D,MAAMmV,YAAYzP,QAAU,IAEnC3B,EAAK/D,MAAMmV,YAAYzP,QAAQ2P,GAAYtR,EAAK/D,MAAMmV,YAAYzP,QAAQ2P,GAAYtR,EAAK/D,MAAMmV,YAAYzP,QAAQ2P,GAAY,GACjItR,EAAKkQ,iBAnEOlQ,EAqEduR,uBAAyB,SAACvS,EAAKgC,EAAMhK,GACnCgJ,EAAK/D,MAAMmV,YAAYzP,QAAQX,GAAQhK,EACvCgJ,EAAKkQ,iBAvEOlQ,EAyEdwR,uBAzEc,eAAAC,EAAAjW,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAyEW,SAAAuP,EAAO1Q,GAAP,OAAAwK,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAChBzC,EAAK/D,MAAMmV,YAAYzP,QAAQX,GACtChB,EAAKkQ,gBAFkB,wBAAAyB,EAAA/O,SAAA8O,MAzEX,gBAAAE,GAAA,OAAAH,EAAA3O,MAAAvQ,KAAA8K,YAAA,GAAA2C,EA8Ed6R,iBAAmB,SAACC,GAElB9R,EAAK/D,MAAMmV,YAAYW,KAAOD,EAC9B9R,EAAKkQ,iBAjFOlQ,EAoFdgS,qBAAuB,SAACC,GACtBjS,EAAKqR,cAAcY,EAAM7a,KAAK6E,MAAMiW,WArFxBlS,EAwFdmS,gBAAkB,WAChB,IAGMC,EAHepS,EAAKjE,MAAMyU,wBAAwB6B,OAAO,SAAAjb,GAC7D,MAAmB,WAAZA,EAAK2J,KAEiBqD,IAAI,SAAChN,EAAM4H,GACxC,OACEgE,EAAA9D,EAAAC,cAACmT,GAAA,EAAKC,KAAN,CAAWvT,IAAKA,GAAM5H,EAAK4J,QAG/B,OACEgC,EAAA9D,EAAAC,cAACmT,GAAA,EAAD,CAAM3N,QAAS3E,EAAKgS,sBACjBI,IAnGOpS,EAwGdkQ,cAAgB,WACd,IAAMsC,EAAe,GACrBA,EAAa7Q,QAAU3B,EAAK/D,MAAMmV,YAAYzP,QAC9C6Q,EAAaT,KAAO/R,EAAK/D,MAAMmV,YAAYW,KAC3C/R,EAAK/D,MAAM0C,SAAS6T,IA5GRxS,EA+GdyS,eAAiB,WACf,IAAIC,EAAc,GACd/B,EAAE,EACN,GAAI3Q,EAAK/D,MAAMmV,YACb,IAAK,IAAIuB,KAAc3S,EAAK/D,MAAMmV,YAAYzP,QAAU,CACtD,IAAMvK,EAAO,CACX4J,KAAM2R,EACN3b,MAAOgJ,EAAK/D,MAAMmV,YAAYzP,QAAQgR,IAElC3T,EAAM2R,IACZ+B,EAAY3U,KACViF,EAAA9D,EAAAC,cAACyT,GAAD,CAAsB5T,IAAKA,EAAK6T,QAASzb,EAAK4J,KAAMA,KAAM5J,EAAK4J,KAAMhK,MAAOI,EAAKJ,MAAO4Z,YAAa5Q,EAAKjE,MAAM2U,gBAAgBtZ,EAAK4J,MAAOhB,EAAKjE,MAAM2U,gBAAgBtZ,EAAK4J,MAAM4P,YAAa,KAAMlQ,eAAgBV,EAAK/D,MAAMyE,eAAgBR,mBAAoBF,EAAK/D,MAAMiE,mBAAoBvB,SAAUqB,EAAKuR,uBAAwBtF,SAAUjM,EAAKwR,0BAI/V,OAAOkB,GA9HK1S,EAkId8S,qBAAuB,SAACnI,GACtB3K,EAAKxD,SAAS,CAACuW,8BAA+BpI,KAnIlC3K,EAuIdgT,8BAvIcxX,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAuIkB,SAAA8Q,IAAA,IAAAC,EAAA,OAAA1H,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,QACxByQ,GAAW,IAAInT,MAAqBQ,cAAcP,EAAK/D,MAAMsU,uBAE9DvQ,EAAK/D,MAAMmX,gBAAkBpT,EAAK/D,MAAMmX,eAAeC,cACxDC,KAAEC,MAAML,EAASlT,EAAK/D,MAAMmX,eAAeC,cAE7CrT,EAAK/D,MAAMmV,YAAYW,KAAOmB,EAC9BlT,EAAKwT,KAAKC,WAAWC,WAAWC,OAAO3T,EAAK/D,MAAMmV,YAAYW,MAC9D/R,EAAKkQ,iBARuB,wBAAAiD,EAAAvQ,SAAAqQ,MAvIlBjT,EAmJd4T,iCAAmC,WACjCC,UAAUC,UAAUC,UAAU/T,EAAKjE,MAAMgX,+BACzCiB,KAAQ/d,QAAQ,wBAnJhB+J,EAAKjE,MAAQ,CACXgX,8BAA+B,GAC/BvC,wBAAyB,GACzBE,gBAAiB,IALP1Q,wEAwJL,IAAA4O,EAAArc,KAEDkF,EACJuL,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC8U,GAAD,CACEtV,SAAUpM,KAAKugB,qBACfpS,eAAgBnO,KAAK0J,MAAMyE,eAC3BR,mBAAoB3N,KAAK0J,MAAMiE,uBAKnC3N,KAAKwJ,MAAMgX,8BAET/P,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,oBACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAM,YAAWoM,EAAA9D,EAAAC,cAAA,KAAGwF,QAASpS,KAAKqhB,kCAAmCrhB,KAAKwJ,MAAMgX,kCAIzF,MAKN,OACE/P,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,WACvB8E,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,MACNpG,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,SAOFrL,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,WAQF9b,KAAKkgB,kBAETzP,EAAA9D,EAAAC,cAACgV,GAAA,EAAD,CAAUC,QAAS7hB,KAAK4f,mBACtBnP,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACNgS,KAAK,KACLjE,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,mBAHlB,eASFjF,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAAS,kBAAMiK,EAAKiC,8BAA6B,IACjDjI,KAAK,MAHP,wBAOA5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN+N,QAAS,kBAAMiK,EAAKiC,8BAA6B,IACjDjI,KAAK,MAHP,wBAYV5F,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,QACvB8E,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CAAS5c,QAASA,EAASyG,MAAM,kCAAkCoW,QAAQ,SACzEtR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,YAAYgS,KAAK,MAA/B,6BAGJ5F,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,IAAI9J,MAAO,CAACiV,UAAW,UAC7BvR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,UAAUgS,KAAK,KAAKjE,QAASpS,KAAKygB,+BAAhD,+BAGJhQ,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,MACNpG,EAAA9D,EAAAC,cAACqV,GAAA,EAAD,CACEC,IAAI,aACJzd,MAAQzE,KAAK0J,MAAMmV,YAAYW,KAAMxf,KAAK0J,MAAMmV,YAAYW,KAAO,GACnE2C,IAAKA,KACLnK,IAAKA,GACL3U,MAAM,gCACNb,KAAK,OACL4f,QAAQ,EACRC,WAAW,EACXC,eAAe,EACflW,SAAUpM,KAAKsf,iBACfxR,OAAQ9N,KAAK4N,0BAvQEN,IAAMC,WAqRnCgV,eAEJ,SAAAA,IAAc,IAAA7F,EAAA,OAAAzT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAuiB,IACZ7F,EAAAzT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAsZ,GAAAlZ,KAAArJ,QAMFud,WAAa,KAPCb,EASdpT,kBAAoB,WAClBoT,EAAKa,WAAab,EAAKhT,MAAMjF,OAVjBiY,EAadnT,mBAAqB,WACnBmT,EAAKa,WAAab,EAAKhT,MAAMjF,OAdjBiY,EAiBd8F,iBAAmB,SAAC9C,GAElBhD,EAAKhT,MAAM0C,SAASsQ,EAAKhT,MAAM4W,QAASZ,EAAMtM,OAAO3O,MAAOiY,EAAKhT,MAAMjF,QAnB3DiY,EAqBd6D,qBAAuB,SAACnI,GACtBsE,EAAKa,WAAanF,EAElBsE,EAAKhT,MAAM0C,SAASsQ,EAAKhT,MAAM4W,QAAS5D,EAAKhT,MAAM+E,KAAMiO,EAAKa,aAxBlDb,EA0BdvE,kBAAoB,SAACuH,GACnBhD,EAAKa,WAAamC,EAAMtM,OAAO3O,MAG/BiY,EAAKhT,MAAM0C,SAASsQ,EAAKhT,MAAM4W,QAAS5D,EAAKhT,MAAM+E,KAAMiO,EAAKa,aA9BlDb,EAiCdjD,aAAe,WACbiD,EAAKhT,MAAMgQ,SAASgD,EAAKhT,MAAM4W,UAhC/B5D,EAAKlT,MAAQ,CACXiF,KAAM,GACNhK,MAAO,IAJGiY,wEAwCZ,IAAMxX,EACJuL,EAAA9D,EAAAC,cAAC8U,GAAD,CACEjT,KAAMzO,KAAK0J,MAAM+E,KACjBhK,MAAOzE,KAAK0J,MAAMjF,MAClB2H,SAAUpM,KAAKugB,qBACfpS,eAAgBnO,KAAK0J,MAAMyE,eAC3BR,mBAAoB3N,KAAK0J,MAAMiE,qBAKnC,OACE8C,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAACiM,GAAA,EAAD,CAAS4J,UAAU,UAAU9W,MAAO3L,KAAK0J,MAAM2U,aAC7C5N,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACE/H,UAAU,2BACVxD,YAAY,OACZhC,KAAK,OACLsX,aAAc1iB,KAAK0J,MAAM+E,KACzBhK,MAAOzE,KAAK0J,MAAM+E,KAClBrC,SAAUpM,KAAKwiB,iBACf5W,UAAU,MAKhB6E,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACE/H,UAAU,2BACVxD,YAAY,OACZhC,KAAK,OACLsX,aAAc1iB,KAAK0J,MAAMjF,MACzBA,MAAOzE,KAAK0J,MAAMjF,MAClB2H,SAAUpM,KAAKmY,kBACfvM,UAAU,IAEZ6E,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CAAS5c,QAASA,EAASyG,MAAM,kCAAkCoW,QAAQ,SACzEtR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,YAAYgS,KAAK,MAA/B,6BAIJ5F,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACNoI,IAAKzM,KAAK0J,MAAM+E,KAChB2D,QAASpS,KAAKyZ,aACdpD,KAAK,MAJP,oBAtFyB/I,IAAMC,WAqGnCoV,eAEJ,SAAAA,IAAc,IAAA7F,EAAA,OAAA7T,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA2iB,IACZ7F,EAAA7T,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA0Z,GAAAtZ,KAAArJ,QAMFsJ,kBAAoB,WACdwT,EAAKpT,MAAMmV,cACT/B,EAAKpT,MAAMmV,YAAYzP,SAAW0N,EAAKpT,MAAMmV,YAAYW,OAC3D1C,EAAK7S,SAAS,CAAC2Y,iBAAiB,KAVxB9F,EAgBd+F,sBAAwB,SAACnD,GACvB5C,EAAK7S,SAAS,CAAC2Y,gBAAiBlD,EAAMtM,OAAO0P,UACxCpD,EAAMtM,OAAO0P,SAChBhG,EAAKiG,2BAA2B,KAnBtBjG,EAuBdiG,2BAA6B,SAAC9C,GAK5BnD,EAAKpT,MAAM0C,SAAS6T,IA1BpBnD,EAAKtT,MAAQ,CACXoZ,iBAAiB,GAHP9F,wEAgCZ,OACErM,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACoW,GAAA,EAAD,CAAUF,QAAS9iB,KAAKwJ,MAAMoZ,gBAAiBxW,SAAUpM,KAAK6iB,uBAA9D,8BAGF7iB,KAAKwJ,MAAMoZ,gBACPnS,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACfH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACqW,GAAD,CACEpE,YAAa7e,KAAK0J,MAAMmV,YACxBzS,SAAUpM,KAAK+iB,2BACfpV,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7B6P,mBAAoBhe,KAAK0J,MAAMsU,mBAC/BE,uBAAwBle,KAAK0J,MAAMwU,uBACnC2C,eAAgB7gB,KAAK0J,MAAMmX,mBAIjC,aAvDwBvT,IAAMC,WA+DlC2V,oLAGF,MAA6B,mBAAzBljB,KAAK0J,MAAMyZ,WAA2D,yBAAzBnjB,KAAK0J,MAAMyZ,UAExD1S,EAAA9D,EAAAC,cAACqW,GAAD,CACEpE,YAAa7e,KAAK0J,MAAMmV,YACxBzS,SAAUpM,KAAK0J,MAAM0C,SACrBuB,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7B6P,mBAAoBhe,KAAK0J,MAAMsU,mBAC/BE,uBAAwBle,KAAK0J,MAAMwU,uBACnC2C,eAAgB7gB,KAAK0J,MAAMmX,iBAIC,kBAAzB7gB,KAAK0J,MAAMyZ,WAA0D,wBAAzBnjB,KAAK0J,MAAMyZ,UAE5D1S,EAAA9D,EAAAC,cAACwW,GAAD,CACEvE,YAAa7e,KAAK0J,MAAMmV,YACxBzS,SAAUpM,KAAK0J,MAAM0C,SACrBuB,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7B6P,mBAAoBhe,KAAK0J,MAAMsU,mBAC/BE,uBAAwBle,KAAK0J,MAAMwU,uBACnC2C,eAAgB7gB,KAAK0J,MAAMmX,iBAIxB,YA7BevT,IAAMC,WAoJnB8V,eAhHb,SAAAA,IAAc,IAAAlG,EAAA,OAAAlU,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAqjB,IACZlG,EAAAlU,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAoa,GAAAha,KAAArJ,QAcFsjB,kBAAoB,CAClB,CACE7U,KAAM,iBACN9C,MAAO,kBAET,CACE8C,KAAM,gBACN9C,MAAO,kBAtBGwR,EA0BdoG,gBAAkB,CAChB,CACE9U,KAAM,uBACN9C,MAAO,wBAET,CACE8C,KAAM,sBACN9C,MAAO,wBAjCGwR,EAqCdqG,sBAAwB,SAACL,GACvBhG,EAAKzT,MAAMgW,MAAMtU,KAAO+X,EACxBhG,EAAKsG,qBAvCOtG,EA0CdsG,kBAAoB,WACdtG,EAAKzT,MAAMmX,iBACb1D,EAAKzT,MAAMgW,MAAMgE,OAASvG,EAAKzT,MAAMmX,eAAe6C,OACpDvG,EAAKzT,MAAMgW,MAAMzN,KAAOkL,EAAKzT,MAAMmX,eAAe5O,MAGpDkL,EAAKzT,MAAM0C,SAAS+Q,EAAKzT,MAAMgW,QAhDnBvC,EAmDdwG,cAAgB,WACd,IAAIC,EAAazG,EAAKmG,kBAItB,MAHwB,eAApBnG,EAAKzT,MAAMlH,OACbohB,EAAazG,EAAKoG,iBAEbK,EAAW/R,IAAI,SAAAhN,GACpB,OACE4L,EAAA9D,EAAAC,cAAC6Q,GAAD,CAAQhR,IAAK5H,EAAK4J,KAAMhK,MAAOI,EAAK4J,MAAO5J,EAAK8G,UA1DxCwR,EA+Dd0G,mBAAqB,SAACC,GAChBA,EACF3G,EAAKzT,MAAMgW,MAAMqE,OAASD,SAEnB3G,EAAKzT,MAAMgW,MAAMqE,OAE1B5G,EAAKsG,qBAnELtG,EAAK3T,MAAQ,CACXwa,iBAAkB,MAHR7G,wEA0EZ,OACE1M,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,WACbH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKuC,GAAG,MACNrG,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,iBAFV,cAMArL,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEjU,MAAOzE,KAAK0J,MAAMgW,MAAMtU,KACxBgB,SAAUpM,KAAKwjB,sBACf5X,UAAW5L,KAAK0J,MAAMkT,UAErB5c,KAAK2jB,oBAKdlT,EAAA9D,EAAAC,cAACqX,GAAD,CACEd,UAAWnjB,KAAK0J,MAAMgW,MAAMtU,KAC5ByT,YAAa7e,KAAK0J,MAAMgW,MAAMqE,OAC9B3X,SAAUpM,KAAK6jB,mBACflW,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7B6P,mBAAoBhe,KAAK0J,MAAMsU,mBAC/BE,uBAAwBle,KAAK0J,MAAMwU,uBACnC2C,eAAgB7gB,KAAK0J,MAAMmX,0BA1GZvT,IAAMC,WClmB3ByK,GAAM,IAAIxP,KAAI,CAACC,WAAW,IAExBE,GAAWD,KAAXC,OAEF0U,eAEJ,SAAAA,IAAc,IAAArU,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAqd,IACZrU,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAoU,GAAAhU,KAAArJ,QAcFsd,MAAQ,GAfMtU,EAgBduU,WAAa,KAhBCvU,EAkBdwU,YAAc,WACZ,OAAOxU,EAAKsU,MAAMzL,IAAI,SAAChN,EAAM4H,GAC3B,OACEgE,EAAA9D,EAAAC,cAACsX,GAAD,CAAQzX,IAAKA,EAAKhI,MAAOgI,GACtB5H,MAtBKmE,EA4Bd0U,iBA5Bc,eAAAjO,EAAAxG,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA4BK,SAAAC,EAAOrN,GAAP,IAAAiH,EAAA2P,EAAA,OAAAH,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbzG,EAAW,KACX2P,EAAgB,GACjBpQ,EAAKU,MAAMyE,iBACZiL,EAAgBA,EAAcjN,OAAOnD,EAAKU,MAAMyE,iBAE/CnF,EAAKU,MAAMiE,mBAAmBY,aAC/B6K,EAAgBA,EAAcjN,OAAOnD,EAAKU,MAAMiE,mBAAmBY,aAPpDyB,EAAAyK,GASVjY,EATUwN,EAAAE,KAUV,IAVUF,EAAAyK,GAAA,EAaV,IAbUzK,EAAAyK,GAAA,EAgBV,IAhBUzK,EAAAyK,GAAA,GAmBV,IAnBUzK,EAAAyK,GAAA,0BAWbhR,GAAY,IAAI+D,MAAqBoB,0BAA0BwK,GAXlDpJ,EAAAI,OAAA,0BAcb3G,GAAY,IAAI+D,MAAqBE,gBAAgB1E,EAAKU,MAAMiE,oBAdnDqC,EAAAI,OAAA,2BAiBb3G,GAAY,IAAI+D,MAAqBU,mBAAmBlF,EAAKU,MAAMiE,mBAAoB3E,EAAKU,MAAMyE,gBAjBrF6B,EAAAI,OAAA,2BAoBb3G,GAAY,IAAI+D,MAAqBsB,2BAA2BsK,GApBnDpJ,EAAAI,OAAA,oBAuBb3G,EAAW,KAvBE,eAAAuG,EAAAE,KAAA,GAyBXlH,EAAKiB,SAAU,CAACzH,KAAMA,EAAMiH,SAAUA,IAzB3B,QA0BjBT,EAAK2U,gBA1BY,yBAAA3N,EAAAK,SAAAR,MA5BL,gBAAAS,GAAA,OAAAb,EAAAc,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAyDd4U,kBAAoB,WAClB,OAAO5U,EAAKQ,MAAMhH,MAChB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,OACEiO,EAAA9D,EAAAC,cAACmP,GAAA,EAAD,CAAYtP,IAAKzD,EAAKU,MAAM+E,KAAMhF,SAAUT,EAAKQ,MAAMC,SAAUO,SAAUhB,EAAK0R,mBAGpF,KAAK,EACL,QACE,OAAO,OArEC1R,EAyEdmR,qBAzEc,eAAAC,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAyES,SAAAyK,EAAO5V,GAAP,IAAA6V,EAAA,OAAArB,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAAtK,KAAA,EAEbqK,EAAsBL,KAAKO,MAAM/V,GAFpB8V,EAAArK,KAAA,EAGblH,EAAKiB,SAAU,CAACiP,iBAAmBoB,IAHtB,OAInBtR,EAAKU,MAAM4P,UAAUnO,KAAOmP,EAAoB7L,KAChDzF,EAAKU,MAAM8P,oBACXxQ,EAAKuQ,iBANcgB,EAAArK,KAAA,gBAAAqK,EAAAtK,KAAA,EAAAsK,EAAAE,GAAAF,EAAA,kCAAAA,EAAAlK,SAAAgK,EAAA,iBAzET,gBAAAwD,GAAA,OAAAzD,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAmFd0R,iBAAmB,SAACjW,EAAOkW,GACzB3R,EAAKuU,WAAa9Y,EAClBuE,EAAK2U,iBArFO3U,EAwFd2U,cAAgB,WACd,IAAIG,EAAa,GAIjB,OAHK9U,EAAKuU,aACRvU,EAAKuU,WAAa,IAEbvU,EAAKQ,MAAMhH,MAChB,KAAK,EACHsb,EAAa,oBAAsB9U,EAAKuU,WAAa,IACrD,MACF,KAAK,EACHO,EAAa,mBAAqB9U,EAAKuU,WAAa,IACpD,MACF,KAAK,EACHO,EAAa,kBAAoB9U,EAAKuU,WAAa,IACnD,MACF,KAAK,EACHO,EAAa,oBAAsB9U,EAAKuU,WAAa,IACrD,MACF,KAAK,EACHO,EAAa,mCACb,MACF,QACEA,EAAa9U,EAAKuU,WAItBvU,EAAKU,MAAM0C,SAAS0R,IAlHR9U,EAqHdmP,kBAAoB,SAACC,GACnBpP,EAAKuU,WAAanF,EAClBpP,EAAK2U,iBArHL3U,EAAKQ,MAAQ,CACXhH,KAAM,KACNiH,SAAU,MAIZT,EAAKsU,MAAM,GAAG,yBACdtU,EAAKsU,MAAM,GAAG,yBACdtU,EAAKsU,MAAM,GAAG,2BACdtU,EAAKsU,MAAM,GAAG,0BACdtU,EAAKsU,MAAM,GAAG,0BAZFtU,wEA4HZ,OACEyH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtL,YAAY,gBACZL,MAAO,CAAErM,MAAO,KAChB+D,MAAOzE,KAAKsd,MAAMtd,KAAKwJ,MAAMhH,MAC7BwH,SAAUhK,KAAK0d,kBAEd1d,KAAKwd,gBAGV/M,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACGvU,KAAK4d,6BA3IoBtQ,IAAMC,WAkJpCwQ,eACJ,SAAAA,IAAc,IAAAtQ,EAAA,OAAAxE,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA+d,IACZtQ,EAAAxE,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA8U,GAAA1U,KAAArJ,QAMF4N,WAAa,GAPCH,EAQd0W,gBAAkB,GARJ1W,EASd2W,iBAAmB,GATL3W,EAadnE,kBAbcL,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAaM,SAAA2O,IAAA,OAAAtF,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,OACbzC,EAAK/D,MAAMmV,YAAY3P,aAC1BzB,EAAK/D,MAAMmV,YAAY3P,YAAc,IAAI1B,MAAqB6B,mCAAmC5B,EAAK/D,MAAMuF,YAE9GxB,EAAK4W,4CAJa,wBAAA3F,EAAArO,SAAAkO,MAbN9Q,EAoBdlE,mBApBcN,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAoBO,SAAAuP,IAAA,OAAAlG,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OACdzC,EAAK/D,MAAMmV,YAAY3P,aAC1BzB,EAAK/D,MAAMmV,YAAY3P,YAAc,IAAI1B,MAAqB6B,mCAAmC5B,EAAK/D,MAAMuF,YAE9GxB,EAAK4W,4CAJc,wBAAAjF,EAAA/O,SAAA8O,MApBP1R,EA2Bd4W,0CAA4C,WAC1C5W,EAAKG,YAAc,IAAIJ,MAAqBwB,8BAA8BvB,EAAK/D,MAAMuF,UAAWxB,EAAK/D,MAAMmV,YAAY3P,YACvH,IAAMkV,GAAoB,IAAI5W,MAAqB2B,2BAA2B1B,EAAK/D,MAAMuF,UAAWxB,EAAK/D,MAAMmV,YAAY3P,YACvHiV,EAAkB,GACtB,IAAK,IAAI/F,KAAKgG,EACZD,EAAgB3Y,KAAhBvC,OAAAgU,GAAA,EAAAhU,CAAA,CACEwF,KAAM2P,GACHgG,EAAiBhG,KAGxB3Q,EAAK0W,gBAAkBA,EACvB1W,EAAK2W,iBAAmBA,GAtCZ3W,EAyCd6Q,6BAzCcrV,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAyCiB,SAAA8Q,IAAA,IAAAlC,EAAA8F,EAAAxZ,UAAA,OAAAmO,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,OAAOsO,EAAP8F,EAAAnf,OAAA,QAAA0E,IAAAya,EAAA,IAAAA,EAAA,GAC7B7W,EAAK0W,gBAAgB9c,QAAQ,SAACsX,GACvBH,IAAgBG,EAAMC,WACpBnR,EAAK/D,MAAMmV,YAAYzP,QAIlB3B,EAAK/D,MAAMmV,YAAYzP,QAAQuP,EAAMlQ,QAC7ChB,EAAK/D,MAAMmV,YAAYzP,QAAQuP,EAAMlQ,MAAQ,KAJ7ChB,EAAK/D,MAAMmV,YAAYzP,QAAU,GACjC3B,EAAK/D,MAAMmV,YAAYzP,QAAQuP,EAAMlQ,MAAQ,OAOnDhB,EAAKkQ,gBAZwB,wBAAAiD,EAAAvQ,SAAAqQ,MAzCjBjT,EAwDdqR,cAAgB,SAACC,GACVtR,EAAK/D,MAAMmV,YAAYzP,UAC1B3B,EAAK/D,MAAMmV,YAAYzP,QAAU,IAEnC3B,EAAK/D,MAAMmV,YAAYzP,QAAQ2P,GAAYtR,EAAK/D,MAAMmV,YAAYzP,QAAQ2P,GAAYtR,EAAK/D,MAAMmV,YAAYzP,QAAQ2P,GAAY,GACjItR,EAAKkQ,iBA7DOlQ,EA+DduR,uBAAyB,SAACvS,EAAKgC,EAAMhK,GACnCgJ,EAAK/D,MAAMmV,YAAYzP,QAAQX,GAAQhK,EACvCgJ,EAAKkQ,iBAjEOlQ,EAmEdwR,uBAnEc,eAAAsF,EAAAtb,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAmEW,SAAA4U,EAAO/V,GAAP,OAAAwK,GAAAtM,EAAAoD,KAAA,SAAA0U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,cAChBzC,EAAK/D,MAAMmV,YAAYzP,QAAQX,GACtChB,EAAKkQ,gBAFkB,wBAAA8G,EAAApU,SAAAmU,MAnEX,gBAAAnF,GAAA,OAAAkF,EAAAhU,MAAAvQ,KAAA8K,YAAA,GAAA2C,EAwEd6R,iBAAmB,SAACC,GAElB9R,EAAK/D,MAAMmV,YAAYW,KAAOD,EAC9B9R,EAAKkQ,iBA3EOlQ,EA8EdgS,qBAAuB,SAACC,GACtBjS,EAAKqR,cAAcY,EAAM7a,KAAK6E,MAAMiW,WA/ExBlS,EAkFdmS,gBAAkB,WAChB,IAAMC,EAAYpS,EAAK0W,gBAAgBtS,IAAI,SAAChN,EAAM4H,GAChD,OACEgE,EAAA9D,EAAAC,cAACmT,GAAA,EAAKC,KAAN,CAAWvT,IAAKA,GAAM5H,EAAK4J,QAG/B,OACEgC,EAAA9D,EAAAC,cAACmT,GAAA,EAAD,CAAM3N,QAAS3E,EAAKgS,sBACjBI,IA1FOpS,EA+FdkQ,cAAgB,WACd,IAAMsC,EAAe,GACrBA,EAAa7Q,QAAU3B,EAAK/D,MAAMmV,YAAYzP,QAC9C6Q,EAAaT,KAAO/R,EAAK/D,MAAMmV,YAAYW,KAC3CS,EAAa/Q,WAAazB,EAAK/D,MAAMmV,YAAY3P,WACjDzB,EAAK/D,MAAM0C,SAAS6T,IApGRxS,EAuGdyS,eAAiB,WACf,IAAIC,EAAc,GACd/B,EAAE,EACN,GAAI3Q,EAAK/D,MAAMmV,YACb,IAAK,IAAIuB,KAAc3S,EAAK/D,MAAMmV,YAAYzP,QAAU,CACtD,IAAMvK,EAAO,CACX4J,KAAM2R,EACN3b,MAAOgJ,EAAK/D,MAAMmV,YAAYzP,QAAQgR,IAElC3T,EAAM2R,IACZ+B,EAAY3U,KACViF,EAAA9D,EAAAC,cAAC8X,GAAD,CAAsBjY,IAAKA,EAAK6T,QAASzb,EAAK4J,KAAMA,KAAM5J,EAAK4J,KAAMhK,MAAOI,EAAKJ,MAAO4Z,YAAa5Q,EAAK2W,iBAAiBvf,EAAK4J,MAAOhB,EAAK2W,iBAAiBvf,EAAK4J,MAAM4P,YAAa,KAAMlQ,eAAgBV,EAAK/D,MAAMyE,eAAgBR,mBAAoBF,EAAK/D,MAAMiE,mBAAoBvB,SAAUqB,EAAKuR,uBAAwBtF,SAAUjM,EAAKwR,0BAIrV,OAAOkB,GAtHK1S,EA0Hd8S,qBAAuB,SAACnI,GACtB3K,EAAKxD,SAAS,CAACuW,8BAA+BpI,KA3HlC3K,EA+HdgT,8BA/HcxX,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA+HkB,SAAA+U,IAAA,IAAAhE,EAAA,OAAA1H,GAAAtM,EAAAoD,KAAA,SAAA6U,GAAA,cAAAA,EAAA3U,KAAA2U,EAAA1U,MAAA,cAAA0U,EAAA1U,KAAA,GAEP,IAAI1C,MAAqBgC,eAAe/B,EAAKG,YAFtC,QAExB+S,EAFwBiE,EAAAzU,QAIzB1C,EAAK/D,MAAMmX,gBAAkBpT,EAAK/D,MAAMmX,eAAeC,cACxDC,KAAEC,MAAML,EAASlT,EAAK/D,MAAMmX,eAAeC,cAE7CrT,EAAK/D,MAAMmV,YAAYW,KAAOmB,EAC9BlT,EAAKwT,KAAKC,WAAWC,WAAWC,OAAO3T,EAAK/D,MAAMmV,YAAYW,MAC9D/R,EAAKkQ,iBATuB,wBAAAiH,EAAAvU,SAAAsU,MA/HlBlX,EA4Id4T,iCAAmC,WACjCC,UAAUC,UAAUC,UAAU/T,EAAKjE,MAAMgX,+BACzCiB,KAAQ/d,QAAQ,wBA5IhB+J,EAAKjE,MAAQ,CACXgX,8BAA+B,IAHrB/S,wEAiJL,IAAA4O,EAAArc,KAEDkF,EACJuL,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACiY,GAAD,CACEzY,SAAUpM,KAAKugB,qBACfpS,eAAgBnO,KAAK0J,MAAMyE,eAC3BR,mBAAoB3N,KAAK0J,MAAMiE,uBAKnC3N,KAAKwJ,MAAMgX,8BAET/P,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,oBACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAM,YAAWoM,EAAA9D,EAAAC,cAAA,KAAGwF,QAASpS,KAAKqhB,kCAAmCrhB,KAAKwJ,MAAMgX,kCAIzF,MAKN,OACE/P,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,WACvB8E,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,MACNpG,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,SAOFrL,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,WAQF9b,KAAKkgB,kBAETzP,EAAA9D,EAAAC,cAACgV,GAAA,EAAD,CAAUC,QAAS7hB,KAAK4f,mBACtBnP,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACNgS,KAAK,KACLjE,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,mBAHlB,eASFjF,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAAS,kBAAMiK,EAAKiC,8BAA6B,IACjDjI,KAAK,MAHP,wBAOA5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN+N,QAAS,kBAAMiK,EAAKiC,8BAA6B,IACjDjI,KAAK,MAHP,wBAYV5F,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,QACvB8E,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CAAS5c,QAASA,EAASyG,MAAM,kCAAkCoW,QAAQ,SACzEtR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,YAAYgS,KAAK,MAA/B,6BAGJ5F,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,IAAI9J,MAAO,CAACiV,UAAW,UAC7BvR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,UAAUgS,KAAK,KAAKjE,QAASpS,KAAKygB,+BAAhD,+BAGJhQ,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,MACNpG,EAAA9D,EAAAC,cAACqV,GAAA,EAAD,CACEC,IAAI,aACJzd,MAAQzE,KAAK0J,MAAMmV,YAAYW,KAAMxf,KAAK0J,MAAMmV,YAAYW,KAAO,GACnE2C,IAAKA,KACLnK,IAAKA,GACL3U,MAAM,gCACNb,KAAK,OACL4f,QAAQ,EACRC,WAAW,EACXC,eAAe,EACflW,SAAUpM,KAAKsf,iBACfxR,OAAQ9N,KAAK4N,0BAhQEN,IAAMC,WA8QnCgV,eAEJ,SAAAA,IAAc,IAAA7F,EAAA,OAAAzT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAuiB,IACZ7F,EAAAzT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAsZ,GAAAlZ,KAAArJ,QAMFud,WAAa,KAPCb,EASdpT,kBAAoB,WAClBoT,EAAKa,WAAab,EAAKhT,MAAMjF,OAVjBiY,EAadnT,mBAAqB,WACnBmT,EAAKa,WAAab,EAAKhT,MAAMjF,OAdjBiY,EAiBd8F,iBAAmB,SAAC9C,GAElBhD,EAAKhT,MAAM0C,SAASsQ,EAAKhT,MAAM4W,QAASZ,EAAMtM,OAAO3O,MAAOiY,EAAKhT,MAAMjF,QAnB3DiY,EAqBd6D,qBAAuB,SAACnI,GACtBsE,EAAKa,WAAanF,EAElBsE,EAAKhT,MAAM0C,SAASsQ,EAAKhT,MAAM4W,QAAS5D,EAAKhT,MAAM+E,KAAMiO,EAAKa,aAxBlDb,EA0BdvE,kBAAoB,SAACuH,GACnBhD,EAAKa,WAAamC,EAAMtM,OAAO3O,MAG/BiY,EAAKhT,MAAM0C,SAASsQ,EAAKhT,MAAM4W,QAAS5D,EAAKhT,MAAM+E,KAAMiO,EAAKa,aA9BlDb,EAiCdjD,aAAe,WACbiD,EAAKhT,MAAMgQ,SAASgD,EAAKhT,MAAM4W,UAhC/B5D,EAAKlT,MAAQ,CACXiF,KAAM,GACNhK,MAAO,IAJGiY,wEAwCZ,IAAMxX,EACJuL,EAAA9D,EAAAC,cAACiY,GAAD,CACEpW,KAAMzO,KAAK0J,MAAM+E,KACjBhK,MAAOzE,KAAK0J,MAAMjF,MAClB2H,SAAUpM,KAAKugB,qBACfpS,eAAgBnO,KAAK0J,MAAMyE,eAC3BR,mBAAoB3N,KAAK0J,MAAMiE,qBAKnC,OACE8C,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAACiM,GAAA,EAAD,CAAS4J,UAAU,UAAU9W,MAAO3L,KAAK0J,MAAM2U,aAC7C5N,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACE/H,UAAU,2BACVxD,YAAY,OACZhC,KAAK,OACLsX,aAAc1iB,KAAK0J,MAAM+E,KACzBhK,MAAOzE,KAAK0J,MAAM+E,KAClBrC,SAAUpM,KAAKwiB,iBACf5W,UAAU,MAKhB6E,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACE/H,UAAU,2BACVxD,YAAY,OACZhC,KAAK,OACLsX,aAAc1iB,KAAK0J,MAAMjF,MACzBA,MAAOzE,KAAK0J,MAAMjF,MAClB2H,SAAUpM,KAAKmY,kBACfvM,UAAU,IAEZ6E,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CAAS5c,QAASA,EAASyG,MAAM,kCAAkCoW,QAAQ,SACzEtR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,YAAYgS,KAAK,MAA/B,6BAIJ5F,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKsC,GAAG,KACNpG,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACNoI,IAAKzM,KAAK0J,MAAM+E,KAChB2D,QAASpS,KAAKyZ,aACdpD,KAAK,MAJP,oBAtFyB/I,IAAMC,WAqGnCoV,eAEJ,SAAAA,IAAc,IAAA7F,EAAA,OAAA7T,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA2iB,IACZ7F,EAAA7T,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA0Z,GAAAtZ,KAAArJ,QAMFsJ,kBAAoB,WACdwT,EAAKpT,MAAMmV,cACT/B,EAAKpT,MAAMmV,YAAYzP,SAAW0N,EAAKpT,MAAMmV,YAAYW,OAC3D1C,EAAK7S,SAAS,CAAC2Y,iBAAiB,KAVxB9F,EAgBd+F,sBAAwB,SAACnD,GACvB5C,EAAK7S,SAAS,CAAC2Y,gBAAiBlD,EAAMtM,OAAO0P,UACxCpD,EAAMtM,OAAO0P,SAChBhG,EAAKiG,2BAA2B,KAnBtBjG,EAuBdiG,2BAA6B,SAAC9C,GAK5BnD,EAAKpT,MAAM0C,SAAS6T,IA1BpBnD,EAAKtT,MAAQ,CACXoZ,iBAAiB,GAHP9F,wEAgCZ,OACErM,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACoW,GAAA,EAAD,CAAUF,QAAS9iB,KAAKwJ,MAAMoZ,gBAAiBxW,SAAUpM,KAAK6iB,uBAA9D,8BAGF7iB,KAAKwJ,MAAMoZ,gBACPnS,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACfH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACkY,GAAD,CACEjG,YAAa7e,KAAK0J,MAAMmV,YACxBzS,SAAUpM,KAAK+iB,2BACfpV,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7Bc,UAAWjP,KAAK0J,MAAMuF,UACtBiP,uBAAwBle,KAAK0J,MAAMwU,uBACnC6G,eAAgB/kB,KAAK0J,MAAMqb,mBAIjC,aAvDwBzX,IAAMC,WA+DlC2V,8MAEJ5Z,kBAAoB,WACd6T,EAAKzT,MAAMmV,cAAgB1B,EAAKzT,MAAMmV,YAAY3P,aACpDiO,EAAKzT,MAAMmV,YAAY3P,YAAc,IAAI1B,MAAqB6B,mCAAmC8N,EAAKzT,MAAMuF,WAC5GkO,EAAK6H,kBAGTC,iBAAmB,WACjB,IAAIC,EAAgB,GACpB,IAAI,IAAI9G,KAAKjB,EAAKzT,MAAMuF,UACtB,GAAQ,WAALmP,EAAgB,CACJjB,EAAKzT,MAAMuF,UAAUmP,GAClC8G,EAAc1Z,KAAKiF,EAAA9D,EAAAC,cAACsX,GAAD,CAAQzX,IAAK2R,EAAG3Z,MAAO2Z,GAAIA,IAGlD,OAAO8G,KAGTC,qBAAuB,SAACC,GACtBjI,EAAKzT,MAAMmV,YAAY3P,WAAakW,EACpCjI,EAAK6H,uFAIL,MAA6B,mBAAzBhlB,KAAK0J,MAAMyZ,WAA2D,yBAAzBnjB,KAAK0J,MAAMyZ,UAExD1S,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,iBACvB8E,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKuC,GAAG,MACNrG,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEjU,MAAOzE,KAAK0J,MAAMmV,YAAY3P,WAC9B9C,SAAUpM,KAAKmlB,sBAEdnlB,KAAKilB,0BAQpBxU,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACfH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACA9D,EAAA9D,EAAAC,cAACkY,GAAD,CACEjG,YAAa7e,KAAK0J,MAAMmV,YACxBzS,SAAUpM,KAAK0J,MAAM0C,SACrBuB,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7Bc,UAAWjP,KAAK0J,MAAMuF,UACtBiP,uBAAwBle,KAAK0J,MAAMwU,uBACnC6G,eAAgB/kB,KAAK0J,MAAMqb,oBAOC,kBAAzB/kB,KAAK0J,MAAMyZ,WAA0D,wBAAzBnjB,KAAK0J,MAAMyZ,UAE5D1S,EAAA9D,EAAAC,cAACyY,GAAD,CACExG,YAAa7e,KAAK0J,MAAMmV,YACxBzS,SAAUpM,KAAK0J,MAAM0C,SACrBuB,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7Bc,UAAWjP,KAAK0J,MAAMuF,UACtBiP,uBAAwBle,KAAK0J,MAAMwU,uBACnC6G,eAAgB/kB,KAAK0J,MAAMqb,iBAIxB,YA3EezX,IAAMC,WAkMnB+X,eAhHb,SAAAA,IAAc,IAAAC,EAAA,OAAAtc,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAslB,IACZC,EAAAtc,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAqc,GAAAjc,KAAArJ,QAcFsjB,kBAAoB,CAClB,CACE7U,KAAM,iBACN9C,MAAO,kBAET,CACE8C,KAAM,gBACN9C,MAAO,kBAtBG4Z,EA0BdhC,gBAAkB,CAChB,CACE9U,KAAM,uBACN9C,MAAO,wBAET,CACE8C,KAAM,sBACN9C,MAAO,wBAjCG4Z,EAqCd/B,sBAAwB,SAACL,GACvBoC,EAAK7b,MAAMgW,MAAMtU,KAAO+X,EACxBoC,EAAK9B,qBAvCO8B,EA0Cd9B,kBAAoB,WACd8B,EAAK7b,MAAMmX,iBACb0E,EAAK7b,MAAMgW,MAAMgE,OAAS6B,EAAK7b,MAAMmX,eAAe6C,OACpD6B,EAAK7b,MAAMgW,MAAMzN,KAAOsT,EAAK7b,MAAMmX,eAAe5O,MAGpDsT,EAAK7b,MAAM0C,SAASmZ,EAAK7b,MAAMgW,QAhDnB6F,EAmDd5B,cAAgB,WACd,IAAIC,EAAa2B,EAAKjC,kBAItB,MAHwB,eAApBiC,EAAK7b,MAAMlH,OACbohB,EAAa2B,EAAKhC,iBAEbK,EAAW/R,IAAI,SAAAhN,GACpB,OACE4L,EAAA9D,EAAAC,cAACsX,GAAD,CAAQzX,IAAK5H,EAAK4J,KAAMhK,MAAOI,EAAK4J,MAAO5J,EAAK8G,UA1DxC4Z,EA+Dd1B,mBAAqB,SAACC,GAChBA,EACFyB,EAAK7b,MAAMgW,MAAMqE,OAASD,SAEnByB,EAAK7b,MAAMgW,MAAMqE,OAE1BwB,EAAK9B,qBAnEL8B,EAAK/b,MAAQ,CACXwa,iBAAkB,MAHRuB,wEA0EZ,OACE9U,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,WACbH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKuC,GAAG,MACNrG,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,iBAFV,cAMArL,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEjU,MAAOzE,KAAK0J,MAAMgW,MAAMtU,KACxBgB,SAAUpM,KAAKwjB,sBACf5X,UAAW5L,KAAK0J,MAAMkT,UAErB5c,KAAK2jB,oBAKdlT,EAAA9D,EAAAC,cAAC4Y,GAAD,CACErC,UAAWnjB,KAAK0J,MAAMgW,MAAMtU,KAC5ByT,YAAa7e,KAAK0J,MAAMgW,MAAMqE,OAC9B3X,SAAUpM,KAAK6jB,mBACflW,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7Bc,UAAWjP,KAAK0J,MAAMuF,UACtBiP,uBAAwBle,KAAK0J,MAAMwU,uBACnC6G,eAAgB/kB,KAAK0J,MAAMqb,0BA1GJzX,IAAMC,WClpBjC5E,GAAWD,KAAXC,OAEF8c,eAEJ,SAAAA,IAAc,IAAAzc,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAylB,IACZzc,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAwc,GAAApc,KAAArJ,QAEF0lB,gBAAkB,GAHJ1c,EAKd2c,mBAAqB,WAEnB,GADA3c,EAAK0c,gBAAkB,GACpB1c,EAAKU,MAAMkc,kBAAmB,CAE/B,IAAM,IAAIC,KAAW7c,EAAKU,MAAMkc,kBAAkBE,MAChD,IAAM,IAAIC,KAAa/c,EAAKU,MAAMkc,kBAAkBE,MAAMD,GAAU,CAClE,IAAIvF,EAAUrG,KAAKC,UAAU,CAC3BwJ,OAAQqC,EACR9T,KAAM4T,IAER,OAAOE,GACL,IAAK,MACL,IAAK,OAED/c,EAAK0c,gBAAgBla,KAAKiF,EAAA9D,EAAAC,cAACoZ,GAAD,CAAQvZ,IAAK6T,EAAS7b,MAAO6b,GAAUyF,EAAvC,IAAmDF,MAOzF,OAAO7c,EAAK0c,iBA1BA1c,EA6Bdid,iBAAmB,WACjB,OAAGjd,EAAKU,MAAMjF,MACLwV,KAAKC,UAAUlR,EAAKU,MAAMjF,OAE1B,MAjCGuE,wEAqCL,IAAAyE,EAAAzN,KAMP,OACEyQ,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CAAQtM,SANoB,SAAC8Z,GAC7BzY,EAAK/D,MAAMM,SAASiQ,KAAKO,MAAM0L,KAM7Bta,WAAW5L,KAAK0J,MAAMjF,MACtBsI,MAAO,CAAErM,MAAO,KAChB0M,YAAY,oBACZ3I,MAAOzE,KAAKimB,oBAEbjmB,KAAK2lB,8BArDmBrY,IAAMC,WA4D/B4Y,eAEJ,SAAAA,IAAc,IAAA9J,EAAA,OAAApT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAmmB,IACZ9J,EAAApT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAkd,GAAA9c,KAAArJ,QAEFomB,kBAAoB,GAHN/J,EAKdgK,qBAAuB,WAMrB,OALAhK,EAAK+J,kBAAoB/J,EAAK3S,MAAM4c,YAAYzU,IAAI,SAAChN,EAAM/C,GACzD,OACE2O,EAAA9D,EAAAC,cAACoZ,GAAD,CAAQvZ,IAAK3K,EAAO2C,MAAOwV,KAAKC,UAAUrV,IAAQA,EAAKuG,KAAvD,IAA8DvG,EAAK0hB,aAAnE,IAAkF1hB,EAAK2hB,gBAGpFnK,EAAK+J,mBAXA/J,EAcdoK,mBAAqB,WACnB,OAAGpK,EAAK3S,MAAMjF,MACLwV,KAAKC,UAAUmC,EAAK3S,MAAMjF,OAE1B,MAlBG4X,wEAsBL,IAAAK,EAAA1c,KAMP,OACEyQ,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CAAQtM,SANsB,SAAC8Z,GAC/BxJ,EAAKhT,MAAMM,SAASiQ,KAAKO,MAAM0L,KAM7Bta,WAAW5L,KAAK0J,MAAMjF,MACtBsI,MAAO,CAAErM,MAAO,KAChB0M,YAAY,gBACZ3I,MAAOzE,KAAKymB,sBAEbzmB,KAAKqmB,gCAtCqB/Y,IAAMC,WA0dxBmZ,eA3ab,SAAAA,IAAc,IAAA5J,EAAA,OAAA7T,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA0mB,IACZ5J,EAAA7T,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAyd,GAAArd,KAAArJ,QAiBFsJ,kBAlBcL,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAkBM,SAAAC,IAAA,IAAAyW,EAAAK,EAAA3C,EAAA4C,EAAAC,EAAAC,EAAAtK,EAAAkD,EAAArB,EAAA0I,EAAA,OAAA9N,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQ4M,EAAKkK,iBADb,OACZV,EADYtW,EAAAG,KAKZwW,EAAY1M,KAAKO,MAAMP,KAAKC,UAAU4C,EAAKpT,MAAMud,OACnDjD,EAAmB,KACvB,IACQ4C,EAAaD,EAAUnK,WAAW0K,IAAI1c,KAAK,SAAA3F,GAAI,MAAmB,kBAAdA,EAAKsG,OACzD0b,EAAeF,EAAUnK,WAAW0K,IAAI1c,KAAK,SAAA3F,GAAI,MAAmB,WAAdA,EAAKsG,OAC9Dyb,GAAcC,IACf7C,EAAmB,CACjBN,OAAQmD,EAAapiB,MACrBwN,KAAM2U,EAAWniB,QAGrB,MAAMsJ,IAEJ+Y,EAAuB,GACvBtK,EAAa,GACjB,IACEsK,EAAuBH,EAAUnK,WAAW0K,IAAIpH,OAAO,SAAAjb,GACrD,MAAiB,WAAdA,EAAKsG,MAAmC,kBAAdtG,EAAKsG,OAMpCqR,EAAamK,EAAUnK,WAAW0K,IAAIpH,OAAO,SAAAjb,GAC3C,MAAiB,WAAdA,EAAKsG,MAAmC,kBAAdtG,EAAKsG,OAMpC,MAAM4C,IAnCU,GAqCd2R,EAAQ,CACVgE,OAAQ,KACRzR,KAAM,KACN8R,OAAQ,GACRoD,MAAO,GAELR,EAAUjH,QACZA,EAAQiH,EAAUjH,OAGhBrB,EAAc,GACdsI,EAAUtI,cACZA,EAAcsI,EAAUtI,aAGtB0I,EAAqB,MACtBJ,EAAUS,WArDK,CAAApX,EAAAE,KAAA,gBAsDd6W,EAAqBJ,EAAUS,WAtDjBpX,EAAAE,KAAA,GAuDR4M,EAAKuK,gBAAgBV,EAAUS,WAAWhc,KAAMub,EAAUS,WAAWb,aAAa,IAAII,EAAUS,WAAWZ,cAvDnG,QA0DlB1J,EAAK7S,SAAS,CAACoU,cAAa7B,aAAYsK,uBAAsBpH,QAAOsE,mBAAkBsC,cAAaS,uBA1DlF,yBAAA/W,EAAAK,SAAAR,MAlBNiN,EA+EduK,gBA/Ec,eAAAjN,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA+EI,SAAAyK,EAAOiN,EAASC,GAAhB,IAAA3B,EAAA4B,EAAAC,EAAA,OAAAxO,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAArK,KAAA,EACgB4M,EAAK4K,cAAcJ,EAASC,GAD5C,cACV3B,EADUrL,EAAApK,KAEZqX,EAAc,GAFFjN,EAAAtK,KAAA,EAAAsK,EAAArK,KAAA,EAIM4M,EAAK6K,eAAeL,EAASC,GAJnC,OAIdC,EAJcjN,EAAApK,KAAAoK,EAAArK,KAAA,iBAAAqK,EAAAtK,KAAA,GAAAsK,EAAAE,GAAAF,EAAA,wBAOZkN,EAAc,GAPFlN,EAAAtK,KAAA,GAAAsK,EAAArK,KAAA,GASM4M,EAAK8K,eAAeN,EAASC,GATnC,QASdE,EATclN,EAAApK,KAAAoK,EAAArK,KAAA,iBAAAqK,EAAAtK,KAAA,GAAAsK,EAAAsN,GAAAtN,EAAA,kBAWhBuC,EAAK7S,SAAS,CAAC2b,oBAAmB4B,cAAaC,gBAX/B,yBAAAlN,EAAAlK,SAAAgK,EAAA,0BA/EJ,gBAAA/J,EAAAuN,GAAA,OAAAzD,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAAgS,EA6FdgL,cAAgB,WACd,OAAOhL,EAAKtT,MAAMgT,YA9FNM,EAiGdiL,wBAA0B,WACxB,OAAOjL,EAAKtT,MAAMsd,sBAlGNhK,EAqGdkL,SAAW,WACT,OAAOlL,EAAKtT,MAAMkW,OAtGN5C,EA6GdmL,QAAU,WACR,IAAMhB,EAAO,CACX5I,YAAavB,EAAKtT,MAAM6U,YAAcvB,EAAKtT,MAAM6U,YAAcvB,EAAKtT,MAAMwa,iBAAiBN,OAAS,IAAM5G,EAAKtT,MAAMwa,iBAAiB/R,KACtImV,WAAYtK,EAAKtT,MAAMud,mBACvBvK,WAAY,CACV0K,IAAA,GAAA/a,OAAAlD,OAAA+Q,GAAA,EAAA/Q,CAAW6T,EAAKtT,MAAMgT,YAAtBvT,OAAA+Q,GAAA,EAAA/Q,CAAqC6T,EAAKtT,MAAMsd,wBAElDpH,MAAO5C,EAAKtT,MAAMkW,OAEpB,OAAOzF,KAAKC,UAAU+M,EAAM,KAAM,IAtHtBnK,EAyHdI,uBAAyB,WACvBJ,EAAKkI,eA1HOlI,EA8Hd2G,kBAAoB,SAAC/D,GACnB5C,EAAK7S,SAAS,CAACyV,WA/HH5C,EAkIdkK,eAlIc/d,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAkIG,SAAA2O,IAAA,IAAA6G,EAAA,OAAAnM,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cAAAwO,EAAAxO,KAAA,EACQgY,KAAMC,IAAI,kDADlB,cACT/C,EADS1G,EAAAvO,KAAAuO,EAAAtO,OAAA,SAERgV,EAAStgB,MAFD,wBAAA4Z,EAAArO,SAAAkO,MAlIHzB,EAuId4K,cAvIc,eAAAxI,EAAAjW,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAuIE,SAAAuP,EAAOmI,EAASC,GAAhB,IAAAnC,EAAA,OAAAnM,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAAAkP,EAAAlP,KAAA,EACSgY,KAAMC,IAAN,gDAAAhc,OAA0Dmb,EAA1D,KAAAnb,OAAqEob,IAD9E,cACRnC,EADQhG,EAAAjP,KAAAiP,EAAAhP,OAAA,SAGPgV,EAAStgB,MAHF,wBAAAsa,EAAA/O,SAAA8O,MAvIF,gBAAAE,EAAA+I,GAAA,OAAAlJ,EAAA3O,MAAAvQ,KAAA8K,YAAA,GAAAgS,EA8Id8K,eA9Ic,eAAAS,EAAApf,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA8IG,SAAA8Q,EAAO4G,EAASC,GAAhB,IAAAnC,EAAA,OAAAnM,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,cAAA0Q,EAAA1Q,KAAA,EACQgY,KAAMC,IAAN,kDAAAhc,OAA4Dmb,EAA5D,KAAAnb,OAAuEob,IAD/E,cACTnC,EADSxE,EAAAzQ,KAAAyQ,EAAAxQ,OAAA,SAERgV,EAAStgB,MAFD,wBAAA8b,EAAAvQ,SAAAqQ,MA9IH,gBAAA4H,EAAAC,GAAA,OAAAF,EAAA9X,MAAAvQ,KAAA8K,YAAA,GAAAgS,EAoJd6K,eApJc,eAAApD,EAAAtb,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAoJG,SAAA4U,EAAO8C,EAASC,GAAhB,IAAAnC,EAAA,OAAAnM,GAAAtM,EAAAoD,KAAA,SAAA0U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,cAAAuU,EAAAvU,KAAA,EACQgY,KAAMC,IAAN,kDAAAhc,OAA4Dmb,EAA5D,KAAAnb,OAAuEob,IAD/E,cACTnC,EADSX,EAAAtU,KAAAsU,EAAArU,OAAA,SAERgV,EAAStgB,MAFD,wBAAA2f,EAAApU,SAAAmU,MApJH,gBAAAgE,EAAAC,GAAA,OAAAlE,EAAAhU,MAAAvQ,KAAA8K,YAAA,GAAAgS,EA0Jd4L,WAAa,WAIX5L,EAAKpT,MAAMif,OAAO1O,KAAKO,MAAMsC,EAAKmL,aA9JtBnL,EAiKd8L,wBAA0B,SAACxB,GACzBtK,EAAKuK,gBAAgBD,EAAWhc,KAAMgc,EAAWb,aAAa,IAAIa,EAAWZ,cAgB7E1J,EAAK7S,SAAS,CAAC8c,mBAAoBK,KAlLvBtK,EAqLd+L,sBAAwB,SAACjM,GACvBE,EAAKtT,MAAMsd,qBAAuB,GAClChK,EAAKtT,MAAMsd,qBAAqBtb,KAAK,CACnCL,KAAM,gBACN0P,SAAU,QACVpW,MAAOmY,EAAS3K,OAElB6K,EAAKtT,MAAMsd,qBAAqBtb,KAAK,CACnCL,KAAM,SACN0P,SAAU,QACVpW,MAAOmY,EAAS8G,SAElB5G,EAAK7S,SAAS,CAAC+Z,iBAAkBpH,KAjMrBE,EAoMdgM,sBAAwB,WACtB,OAAIhM,EAAKtT,MAAMwa,kBAAoBlH,EAAKtT,MAAMoc,kBACrC9I,EAAKtT,MAAMoc,kBAAkBE,MAAMhJ,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAEnG,MAxMK5G,EA0MdiM,kBAAoB,WAClB,IAAIC,EAAa,GAIjB,OAHIlM,EAAKtT,MAAMwa,kBAAoBlH,EAAKtT,MAAMoc,oBAC5CoD,EAAalM,EAAKtT,MAAMoc,kBAAkBE,MAAMhJ,EAAKtT,MAAMwa,iBAAiB/R,MAAM1D,YAE7Eya,GA/MKlM,EAkNdmM,kBAAoB,WAChB,IAAIC,EAAc,KAClB,IAEIA,EADqB,eAApBpM,EAAKpT,MAAMlH,KACEsa,EAAKtT,MAAMge,YAAY1K,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAArF,cAEA5G,EAAKtT,MAAMge,YAAY1K,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAArF,gBAEhB,MAAM3V,IAER,OAAOmb,GA5NGpM,EA+NdqM,0BAA4B,WACxB,IACE,IAAMD,EAAcpM,EAAKmM,oBACzB,OAAOnM,EAAKtT,MAAMoc,kBAAkBE,MAAMoD,EAAYjX,MAAM1D,WAC5D,MAAMR,GACN,MAAO,KApOC+O,EAyOdsM,sBAAwB,WACtB,GAAItM,EAAKtT,MAAMwa,iBACb,IACE,IAAMkF,EAAcpM,EAAKmM,oBACzB,OAAOnM,EAAKtT,MAAMoc,kBAAkBE,MAAMoD,EAAYjX,MAAMiX,EAAYxF,QACxE,MAAM3V,GACN,OAAO,KAGX,OAAO,MAlPK+O,EAqPduM,kBAAoB,WAClB,IAAIC,EAAc,KAClB,IACEA,EAAcxM,EAAKtT,MAAMie,YAAY3K,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAArF,SACd,MAAM3V,IAER,OAAOub,GA3PKxM,EA8PdyM,aAAe,WACb,GAAIzM,EAAKtT,MAAMwa,iBACb,IACsBlH,EAAKuM,oBACzB,OAAOvM,EAAKtT,MAAMoc,kBAAkBE,MAAMhJ,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAAQzU,UAChH,MAAMlB,GACN,OAAO,KAGX,OAAO,MAvQK+O,EA0Qd0M,wBAA0B,SAACpR,GACzB0E,EAAK7S,SAAS,CAACoU,YAAajG,KAzQ5B0E,EAAKtT,MAAQ,CACXigB,SAAU,GACVC,QAAS,GACTrL,YAAa,GACbqB,MAAO,GACPlD,WAAY,GACZsK,qBAAsB,GACtBR,YAAa,GACbV,kBAAmB,KACnB5B,iBAAkB,KAClB+C,mBAAoB,KACpBS,YAAa,GACbC,YAAa,IAdH3K,wEA8QL,IAAAK,EAAAnd,KACP,OACEyQ,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACID,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KAuBE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAamF,GAAG,MAC7BtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,qBACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KACN/D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,SAA4B5Q,KAAK0J,MAAMud,KAAK0C,SAE9ClZ,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,IAAI5D,UAAU,eACpBH,EAAA9D,EAAAC,cAAA,aACE6D,EAAA9D,EAAAC,cAAA,aACA6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAIsP,MAAM,SAAQzL,EAAA9D,EAAAC,cAAA,kBAClB6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACgd,GAAD,CAAoBnlB,MAAOzE,KAAKwJ,MAAMud,mBAAoBT,YAAatmB,KAAKwJ,MAAM8c,YAAatc,SAAUhK,KAAK4oB,4BAGlHnY,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAIsP,MAAM,SAAQzL,EAAA9D,EAAAC,cAAA,uBAClB6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACid,GAAD,CAAkBplB,MAAOzE,KAAKwJ,MAAMwa,iBAAkB4B,kBAAmB5lB,KAAKwJ,MAAMoc,kBAAmB5b,SAAUhK,KAAK6oB,6BAM9HpY,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KACN/D,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,0BACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN8O,KAAK,SACLf,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,kBAChBW,KAAK,MAJP,UASF5F,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,UACN8O,KAAK,SACLf,QAASpS,KAAK0oB,WACdrS,KAAK,MALP,aAeV5F,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAAC6H,EAAA,EAAD,KACEhE,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,iCAAd,cAGAH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,WAEbH,EAAA9D,EAAAC,cAACkd,GAAD,CACEtN,WAAYxc,KAAK8nB,gBACjBhB,qBAAsB9mB,KAAK+nB,0BAC3B3b,SAAUpM,KAAKkd,uBACf0I,kBAAmB5lB,KAAKwJ,MAAMoc,kBAC9BhJ,SAAU5c,KAAKwJ,MAAMwa,iBACrBrW,mBAAoB3N,KAAK8oB,wBACzB3a,eAAgBnO,KAAK+oB,uBAGzBtY,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,SAEdH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,iCAAd,SAIsB,aAApB5Q,KAAK0J,MAAMlH,KAETiO,EAAA9D,EAAAC,cAACmd,GAAD,CACErK,MAAO1f,KAAKgoB,WACZ5b,SAAUpM,KAAKyjB,kBACf7G,SAAU5c,KAAKwJ,MAAMwa,iBACrBrW,mBAAoB3N,KAAK8oB,wBACzB3a,eAAgBnO,KAAK+oB,oBACrB9Z,UAAWjP,KAAKupB,eAChBrL,uBAAwBle,KAAKmpB,4BAC7Ba,eAAgBhqB,KAAKqpB,oBACrB7mB,KAAMxC,KAAK0J,MAAMlH,OAInBiO,EAAA9D,EAAAC,cAACqd,GAAD,CACEvK,MAAO1f,KAAKgoB,WACZ5b,SAAUpM,KAAKyjB,kBACf7G,SAAU5c,KAAKwJ,MAAMwa,iBACrBrW,mBAAoB3N,KAAK8oB,wBACzB3a,eAAgBnO,KAAK+oB,oBACrB/K,mBAAoBhe,KAAKopB,wBACzBlL,uBAAwBle,KAAKmpB,4BAC7BtI,eAAgB7gB,KAAKipB,oBACrBzmB,KAAMxC,KAAK0J,MAAMlH,OAKvBiO,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,SAEdH,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,iCAAd,gBACAH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,WACbH,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAA,iCACA6D,EAAA9D,EAAAC,cAAC+H,EAAA,EAAD,CACE/D,UAAU,2BACVxD,YAAY,iCACZhB,SAAU,SAACqJ,GAAD,OAAO0H,EAAKqM,wBAAwB/T,EAAErC,OAAO3O,QACvDylB,KAAK,IACLzlB,MAAOzE,KAAKwJ,MAAM6U,YAClBjT,KAAK,4BA/ZLkC,IAAMC,WCpDjB4c,oLAjGX,IAAMxD,EAAY3mB,KAAK0J,MAAMud,KACzBrK,EAAW,GACXJ,EAAa,GACjB,IACE,IAAM4N,EAAgBzD,EAAUnK,WAAW0K,IAAI1c,KAAK,SAAA3F,GAClD,MAAiB,kBAAdA,EAAKsG,OAMPif,IACDxN,EAAS3K,KAAOmY,EAAc3lB,OAEhC,IAAM4lB,EAAkB1D,EAAUnK,WAAW0K,IAAI1c,KAAK,SAAA3F,GACpD,MAAiB,WAAdA,EAAKsG,OAMPkf,IACDzN,EAAS8G,OAAS2G,EAAgB5lB,OAGpC+X,EAAamK,EAAUnK,WAAW0K,IAAIpH,OAAO,SAAAjb,GAC3C,MAAiB,WAAdA,EAAKsG,MAAmC,kBAAdtG,EAAKsG,OAMpC,MAAM4C,IAER,IAAMuc,EAAiB9N,EAAW3K,IAAI,SAAAhN,GACpC,OACE4L,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQzF,UAAU,QAC3BH,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAM,QAAQQ,EAAKsG,KAAxB,IAA+BtG,EAAKoN,MACpCxB,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,KAAMrN,EAAKgW,UACXpK,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAM,QAAQQ,EAAKJ,WAM9B,OACEgM,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,SAAOlM,MAAM,OAAO6pB,YAAY,OAC9B9Z,EAAA9D,EAAAC,cAAA,aACE6D,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,iBAAiBlQ,MAAM,QACjC+P,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,eAAe2B,MAAO,CAAEyd,SAAU,OAAQnmB,MAAO,WAEhEoM,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,UAAKgQ,EAAS8G,OAAO+G,cAAc,IAAI7N,EAAS3K,QAIlDuK,EAAWrX,OAAS,EAElBsL,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,kBACZH,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,WAAW2B,MAAO,CAAEyd,SAAU,OAAQnmB,MAAO,WAE1DoM,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,wBACC0d,IAIL,KAEJ7Z,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,kBACZH,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,cAAc2B,MAAO,CAAEyd,SAAU,OAAQnmB,MAAO,WAE7DoM,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAAA,mBAEE3D,OAAOyhB,QAAQ/D,EAAUjH,MAAMqE,QAAQ5e,OAAS,EAE9CsL,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQzF,UAAU,OAAOjF,MAAOgb,EAAUjH,MAAMtU,MACzDqF,EAAA9D,EAAAC,cAAA,WAAMqN,KAAKC,UAAUyM,EAAUjH,MAAMqE,OAAQ,KAAM,KAGrD4C,EAAUjH,MAAMtU,iBAzFXkC,IAAMC,WCoCvBod,IAFWjiB,KAAXC,OACYiiB,KAAZC,QACU1W,KAAVwW,OA0XOG,eArXb,SAAAA,IAAc,IAAA9hB,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA8qB,IACZ9hB,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA6hB,GAAAzhB,KAAArJ,QAeF+qB,sBAhBc9hB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAgBU,SAAAC,IAAA,IAAAuV,EAAA4F,EAAA,OAAA/R,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,yBAA0BuH,IAAK,qBADpCuD,EAAAE,KAAA,EAECgY,KAAMC,IAAI,kDAFX,UAGM,kBADtB/C,EAFgBpV,EAAAG,MAGHrL,KAHG,CAAAkL,EAAAE,KAAA,gBAId8a,EAAkB5F,EAAStgB,KAAKkmB,gBAJlBhb,EAAAE,KAAA,EAKdlH,EAAKiB,SAAW,CAAEihB,mBAAoB9F,EAAStgB,KAAKqmB,MAAOH,oBAL7C,cAMpBvJ,KAAQ/d,QAAQ,CAAEwB,QAAS,SAAUuH,IAAK,mBAAoB2e,UAAW,IANrDpb,EAAAE,KAAA,GAQdlH,EAAKiB,SAAS,CAACohB,iBAAkBL,EAAiBM,eAAgB,OARpD,QAUtBtiB,EAAKuiB,yBAViB,yBAAAvb,EAAAK,SAAAR,MAhBV7G,EA6BdwiB,4BA7Bc,eAAApR,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA6BgB,SAAAyK,EAAOoR,GAAP,IAAArG,EAAAsG,EAAA,OAAAzS,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAArK,KAAA,EACLgY,KAAMC,IAAI,kDAAoDsD,GADzD,OACtBrG,EADsB7K,EAAApK,KAExBub,EAAW,GACXtG,EAAStgB,MAAQ6mB,MAAMC,QAAQxG,EAAStgB,QAC1C4mB,EAAWtG,EAAStgB,MAEtBkE,EAAKiB,SAAW,CAAEyhB,aANU,wBAAAnR,EAAAlK,SAAAgK,MA7BhB,gBAAA/J,GAAA,OAAA8J,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAsCd6iB,mBAAqB,WACnB,OAAO7iB,EAAKQ,MAAM0hB,mBAAmBrZ,IAAI,SAAA4Z,GACvC,IAAMK,EAAYL,IAAaziB,EAAKQ,MAAMwhB,gBAC1C,OACAva,EAAA9D,EAAAC,cAACmT,GAAA,EAAKC,KAAN,CAAWvT,IAAKgf,GAAWK,EAAUrb,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,UAAY,GAA5D,IAAiEqgB,MA1CvDziB,EA+Cd+iB,qBA/Cc,eAAAC,EAAA/iB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA+CS,SAAA2O,EAAO0N,GAAP,IAAAZ,EAAA,OAAApS,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cACfmb,EAAmBY,EAAaxf,IADjBiS,EAAAxO,KAAA,EAEflH,EAAKiB,SAAS,CAACohB,mBAAkBC,eAAgB,OAFlC,OAGrBtiB,EAAKuiB,yBAHgB,wBAAA7M,EAAArO,SAAAkO,MA/CT,gBAAAV,GAAA,OAAAmO,EAAAzb,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAqDduiB,uBAAyB,WACvBviB,EAAKwiB,4BAA4BxiB,EAAKQ,MAAM6hB,mBAtDhCriB,EAyDdkjB,yBAA2B,WACzB,OAAOljB,EAAKQ,MAAMkiB,SAAS7Z,IAAI,SAACoV,EAAMxa,GACpC,OACEgE,EAAA9D,EAAAC,cAAC+d,GAAD,CAAOwB,OAAQlF,EAAK5I,YAAa5R,IAAKA,GACpCgE,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKzH,MAAO,CAACiV,UAAW,UAC9BvR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN+N,QAASpJ,EAAKojB,gBAAgBnF,GAC9B5Q,KAAK,MAHP,QAOA5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAASpJ,EAAKqjB,iBAAiBpF,EAAK0C,QACpCtT,KAAK,MAHP,YASJ5F,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC0f,GAAD,CAAYrF,KAAMA,UAjFhBje,EAyFdojB,gBAAkB,WAAc,IAAbG,EAAazhB,UAAA3F,OAAA,QAAA0E,IAAAiB,UAAA,GAAAA,UAAA,GAAP,GAEvB,OAAO,WACL9B,EAAKiB,SAAS,CAACuiB,SAAUD,EAAO/pB,KAAM,WA5F5BwG,EAgGdyjB,sBAAwB,WAEtB,IAAMC,EAAc1jB,EAAKQ,MAAMkiB,SAASiB,OAAO,SAACC,EAAU/nB,GACxD,OAAQ+nB,EAASjD,OAAS9kB,EAAK8kB,OAASiD,EAAW/nB,GAClDmE,EAAKQ,MAAMkiB,SAAS,IAEnBmB,EAAY,EACZH,IACFG,EAAYH,EAAY/C,OAAS,GAGnC,IAAM4C,EAAQ,CACZ5C,OAAQkD,EACRC,SAAU,GAGZ9jB,EAAKiB,SAAS,CAACuiB,SAAUD,EAAO/pB,KAAM,YAhH1BwG,EAmHd+jB,sBAAwB,WACtB/jB,EAAKiB,SAAS,CAACuiB,SAAU,QApHbxjB,EAuHdgkB,eAvHc,eAAA9N,EAAAjW,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAuHG,SAAAuP,EAAO8N,GAAP,IAAAC,EAAAC,EAAA,OAAAlU,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,UACTgd,EADSjkB,OAAAgU,GAAA,EAAAhU,CAAA,CAEb0gB,OAAQ3gB,EAAKQ,MAAMgjB,SAAS7C,OAC5BmD,SAAU9jB,EAAKQ,MAAMgjB,SAASM,UAC3BG,GAGDE,EAAe,KACG,UAAnBnkB,EAAKQ,MAAMhH,KACZ2qB,EAAenkB,EAAKQ,MAAMkiB,SAASvf,OAAO+gB,GACf,QAAnBlkB,EAAKQ,MAAMhH,OACnB2qB,EAAenkB,EAAKQ,MAAMkiB,SAAS7Z,IAAI,SAAAhN,GACrC,OAAIA,EAAK8kB,SAAWuD,EAAYvD,OACvBuD,EAEAroB,MAKTsoB,EApBW,CAAA/N,EAAAlP,KAAA,eAqBbuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,qBAAsBuH,IAAK,qBArBzC2S,EAAAlP,KAAA,EAsBPgY,KAAMkF,IAAI,kDAAoDpkB,EAAKQ,MAAM6hB,iBAAkB8B,EAAc,CAAE/d,QAAS,CAAEie,eAAgB,sBAtB/H,OAuBbrkB,EAAKiB,SAAS,CAACuiB,SAAU,KAAMd,SAAUyB,IACzC1L,KAAQ/d,QAAQ,CAAEwB,QAAS,QAASuH,IAAK,mBAAoB2e,SAAU,IAxB1D,wBAAAhM,EAAA/O,SAAA8O,MAvHH,gBAAAE,GAAA,OAAAH,EAAA3O,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAmJdqjB,iBAAmB,SAAC1C,GAClB,OAAA1gB,OAAA+P,GAAA,GAAAC,GAAAtM,EAAAiD,KAAO,SAAA8Q,IAAA,IAAAyM,EAAA,OAAAlU,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,YACCid,EAAenkB,EAAKQ,MAAMkiB,SAAS5L,OAAO,SAAAjb,GAC9C,OAAOA,EAAK8kB,SAAWA,KAFpB,CAAA/I,EAAA1Q,KAAA,eAKHuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,mBAAoBuH,IAAK,mBALjDmU,EAAA1Q,KAAA,EAMGgY,KAAMkF,IAAI,kDAAoDpkB,EAAKQ,MAAM6hB,iBAAkB8B,EAAc,CAAE/d,QAAS,CAAEie,eAAgB,sBANzI,OAOH5L,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,iBAAkB2e,SAAU,IACvEpiB,EAAKiB,SAAS,CAACuiB,SAAU,KAAMd,SAAUyB,IARtC,wBAAAvM,EAAAvQ,SAAAqQ,OApJK1X,EAiKdskB,wBAjKc,eAAA/I,EAAAtb,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAiKY,SAAA4U,EAAO+I,GAAP,OAAAtU,GAAAtM,EAAAoD,KAAA,SAAA0U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,uBAAwBuH,IAAK,oBADhCgY,EAAAvU,KAAA,EAElBgY,KAAMkF,IAAI,kDAAoDG,GAF5C,cAAA9I,EAAAvU,KAAA,EAGlBlH,EAAK+hB,wBAHa,cAAAtG,EAAAvU,KAAA,EAIlBlH,EAAKiB,SAAS,CAACohB,iBAAkBkC,EAAUjC,eAAgB,OAJzC,OAKxB7J,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,kBAAmB2e,SAAU,IACxEpiB,EAAKuiB,yBANmB,wBAAA9G,EAAApU,SAAAmU,MAjKZ,gBAAA4D,GAAA,OAAA7D,EAAAhU,MAAAvQ,KAAA8K,YAAA,GAAA9B,EA0KdwkB,qBA1KcvkB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA0KS,SAAA+U,IAAA,OAAA1L,GAAAtM,EAAAoD,KAAA,SAAA6U,GAAA,cAAAA,EAAA3U,KAAA2U,EAAA1U,MAAA,cACrBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,mBAAoBuH,IAAK,uBAD/BmY,EAAA1U,KAAA,EAEfgY,KAAMuF,OAAO,kDAAoDzkB,EAAKQ,MAAM6hB,kBAF7D,cAAAzG,EAAA1U,KAAA,EAGflH,EAAK+hB,wBAHU,cAAAnG,EAAA1U,KAAA,EAIflH,EAAKiB,SAAS,CAACohB,iBAAkB,KAAMC,eAAgB,OAJxC,OAKrB7J,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,qBAAsB2e,SAAU,IALtD,wBAAAxG,EAAAvU,SAAAsU,MA1KT3b,EAkLd0kB,wBAlLczkB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAkLY,SAAA+d,IAAA,OAAA1U,GAAAtM,EAAAoD,KAAA,SAAA6d,GAAA,cAAAA,EAAA3d,KAAA2d,EAAA1d,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,0BAA2BuH,IAAK,yBADnCmhB,EAAA1d,KAAA,EAElBgY,KAAMkF,IAAI,iDAAkD,CAAEhiB,KAAM,kBAAmBmiB,SAAUvkB,EAAKQ,MAAM6hB,kBAAoB,CAAEjc,QAAS,CAAEie,eAAgB,sBAF3I,cAAAO,EAAA1d,KAAA,EAGlBlH,EAAK+hB,wBAHa,OAIxB/hB,EAAKuiB,yBACL9J,KAAQ/d,QAAQ,CAAEwB,QAAS,YAAauH,IAAK,uBAAwB2e,SAAU,IALvD,wBAAAwC,EAAAvd,SAAAsd,MAhLxB3kB,EAAKQ,MAAQ,CACX0hB,mBAAoB,GACpBF,gBAAiB,KACjBK,iBAAkB,KAClBK,SAAU,GACVc,SAAU,KACVhqB,KAAM,MARIwG,mFAaZhJ,KAAK+qB,yDA8KE,IAAAtd,EAAAzN,KACH6tB,EAAc,GAmBlB,OACEpd,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACID,EAAA9D,EAAAC,cAACkhB,GAAA,EAAD,CACEC,UAAQ,EACRC,gBAAc,EACdC,aAAW,EACXtiB,MAAM,eACNiF,UAAU,WACVsd,UAASluB,KAAKwJ,MAAMgjB,SACpB2B,OAAQ,KACRC,SAAUpuB,KAAK+sB,uBAEftc,EAAA9D,EAAAC,cAACyhB,GAAD,CACEpH,KAAMjnB,KAAKwJ,MAAMgjB,SACjB7D,OAAQ3oB,KAAKgtB,eACbxqB,KAAK,cAGXiO,EAAA9D,EAAAC,cAACkJ,EAAD,MAEArF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChCN,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,0BAA0BmF,GAAG,KAC1CtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,kDACpBH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,kCACbH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,OACVvM,MAAM,OACN+N,QAAS,WAAO3E,EAAKxD,SAAS,CAAEzH,KAAM,aACtC6T,KAAK,MAJP,kBASErW,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACN+N,QAASpS,KAAK0tB,wBACdrX,KAAK,MAHP,iBAQA,KAGFrW,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,SACN+N,QAASpS,KAAKwtB,qBACdnX,KAAK,MAJP,UASA,MAIiB,YAApBrW,KAAKwJ,MAAMhH,KAEViO,EAAA9D,EAAAC,cAAA,SAAOgE,UAAU,QACjBH,EAAA9D,EAAAC,cAAA,aACA6D,EAAA9D,EAAAC,cAAA,UAAI6D,EAAA9D,EAAAC,cAAA,UACF6D,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,YACZhC,KAAK,OACLgB,SAAU,SAACqJ,GAAQoY,EAAcpY,EAAErC,OAAO3O,UAG9CgM,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,YACN+N,QA/FO,WAGtByb,EAAYS,SAAS,SAKtB,KAAKC,KAAKV,GACZpM,KAAQ+M,MAAM,6BAIhB/gB,EAAKxD,SAAS,CAAEzH,KAAM,OACtBiL,EAAK6f,wBAAwBO,IAV3BpM,KAAQ+M,MAAM,wCA4FInY,KAAK,MAEL5F,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,YAGfqF,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,YACN+N,QAAS,WAAO3E,EAAKxD,SAAS,CAAEzH,KAAM,QACtC6T,KAAK,MAEL5F,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,eAOf,MAINqF,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,CAAUtF,UAAU,gBAClBH,EAAA9D,EAAAC,cAACmT,GAAA,EAAD,CACEvd,KAAK,SACLa,MAAM,QACNorB,aAAc,CAACzuB,KAAKwJ,MAAM6hB,kBAC1BrhB,SAAUhK,KAAK+rB,sBAEd/rB,KAAK6rB,yBAKdpb,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAamF,GAAG,KAE7B/V,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,qBACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KACN/D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAQ5Q,KAAKwJ,MAAM6hB,mBAEnC5a,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAa4D,GAAG,KAC7B/D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN8O,KAAK,SACLf,QAASpS,KAAKysB,sBACdpW,KAAK,MAJP,qBAWN5F,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAAC8hB,GAAA,EAAD,CACEtiB,SAAUpM,KAAK2uB,iCAEd3uB,KAAKksB,8BAMZzb,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,sBAAsB7D,MAAO,CAACmI,UAAW,UACvDzE,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,sBACtBH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACAzF,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKzH,MAAO,CAACiV,UAAW,WAC9BvR,EAAA9D,EAAAC,cAAA,gDAxWMU,IAAMC,WCH1Bod,IAFWjiB,KAAXC,OACYiiB,KAAZC,QACU1W,KAAVwW,OA0XOiE,eArXb,SAAAA,IAAc,IAAA5lB,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA4uB,IACZ5lB,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA2lB,GAAAvlB,KAAArJ,QAeF6uB,wBAhBc5lB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAgBY,SAAAC,IAAA,IAAAuV,EAAA4F,EAAA,OAAA/R,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,yBAA0BuH,IAAK,qBADlCuD,EAAAE,KAAA,EAEDgY,KAAMC,IAAI,oDAFT,cAElB/C,EAFkBpV,EAAAG,KAGlB6a,EAAkB5F,EAAStgB,KAAKkmB,gBAHdhb,EAAAE,KAAA,EAIlBlH,EAAKiB,SAAW,CAAE6kB,qBAAsB1J,EAAStgB,KAAKqmB,MAAOH,oBAJ3C,cAKxBvJ,KAAQ/d,QAAQ,CAAEwB,QAAS,SAAUuH,IAAK,mBAAoB2e,UAAW,IALjDpb,EAAAE,KAAA,GAQlBlH,EAAKiB,SAAS,CAACohB,iBAAkBL,EAAiBM,eAAgB,OARhD,QASxBtiB,EAAKuiB,yBATmB,yBAAAvb,EAAAK,SAAAR,MAhBZ7G,EA6Bd+lB,8BA7Bc,eAAA3U,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA6BkB,SAAAyK,EAAOoR,GAAP,IAAArG,EAAAsG,EAAA,OAAAzS,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAArK,KAAA,EACPgY,KAAMC,IAAI,oDAAsDsD,GADzD,OACxBrG,EADwB7K,EAAApK,KAE1Bub,EAAW,GACXtG,EAAStgB,MAAQ6mB,MAAMC,QAAQxG,EAAStgB,QAC1C4mB,EAAWtG,EAAStgB,MAEtBkE,EAAKiB,SAAW,CAAEyhB,aANY,wBAAAnR,EAAAlK,SAAAgK,MA7BlB,gBAAA/J,GAAA,OAAA8J,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAsCd6iB,mBAAqB,WACnB,OAAO7iB,EAAKQ,MAAMslB,qBAAqBjd,IAAI,SAAA4Z,GACzC,IAAMK,EAAYL,IAAaziB,EAAKQ,MAAMwhB,gBAC1C,OACAva,EAAA9D,EAAAC,cAACmT,GAAA,EAAKC,KAAN,CAAWvT,IAAKgf,GAAWK,EAAUrb,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,UAAY,GAA5D,IAAiEqgB,MA1CvDziB,EA+Cd+iB,qBA/Cc,eAAAC,EAAA/iB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA+CS,SAAA2O,EAAO0N,GAAP,IAAAZ,EAAA,OAAApS,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cACfmb,EAAmBY,EAAaxf,IADjBiS,EAAAxO,KAAA,EAEflH,EAAKiB,SAAS,CAACohB,mBAAkBC,eAAgB,OAFlC,OAGrBtiB,EAAKuiB,yBAHgB,wBAAA7M,EAAArO,SAAAkO,MA/CT,gBAAAV,GAAA,OAAAmO,EAAAzb,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAqDduiB,uBAAyB,WACvBviB,EAAK+lB,8BAA8B/lB,EAAKQ,MAAM6hB,mBAtDlCriB,EAyDdkjB,yBAA2B,WACzB,OAAOljB,EAAKQ,MAAMkiB,SAAS7Z,IAAI,SAACoV,EAAMxa,GACpC,OACEgE,EAAA9D,EAAAC,cAACoiB,GAAD,CAAO7C,OAAQlF,EAAK5I,YAAa5R,IAAKA,GACpCgE,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKzH,MAAO,CAACiV,UAAW,UAC9BvR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN+N,QAASpJ,EAAKojB,gBAAgBnF,GAC9B5Q,KAAK,MAHP,QAOA5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAASpJ,EAAKqjB,iBAAiBpF,EAAK0C,QACpCtT,KAAK,MAHP,YASJ5F,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC0f,GAAD,CAAYrF,KAAMA,UAjFhBje,EAyFdojB,gBAAkB,WAAc,IAAbG,EAAazhB,UAAA3F,OAAA,QAAA0E,IAAAiB,UAAA,GAAAA,UAAA,GAAP,GAEvB,OAAO,WACL9B,EAAKiB,SAAS,CAACuiB,SAAUD,EAAO/pB,KAAM,WA5F5BwG,EAgGdyjB,sBAAwB,WAEtB,IAAMC,EAAc1jB,EAAKQ,MAAMkiB,SAASiB,OAAO,SAACC,EAAU/nB,GACxD,OAAQ+nB,EAASjD,OAAS9kB,EAAK8kB,OAASiD,EAAW/nB,GAClDmE,EAAKQ,MAAMkiB,SAAS,IAEnBmB,EAAY,EACZH,IACFG,EAAYH,EAAY/C,OAAS,GAGnC,IAAM4C,EAAQ,CACZ5C,OAAQkD,EACRC,SAAU,GAGZ9jB,EAAKiB,SAAS,CAACuiB,SAAUD,EAAO/pB,KAAM,YAhH1BwG,EAmHd+jB,sBAAwB,WACtB/jB,EAAKiB,SAAS,CAACuiB,SAAU,QApHbxjB,EAuHdgkB,eAvHc,eAAA9N,EAAAjW,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAuHG,SAAAuP,EAAO8N,GAAP,IAAAC,EAAAC,EAAA,OAAAlU,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,UACTgd,EADSjkB,OAAAgU,GAAA,EAAAhU,CAAA,CAEb0gB,OAAQ3gB,EAAKQ,MAAMgjB,SAAS7C,OAC5BmD,SAAU9jB,EAAKQ,MAAMgjB,SAASM,UAC3BG,GAGDE,EAAe,KACG,UAAnBnkB,EAAKQ,MAAMhH,KACZ2qB,EAAenkB,EAAKQ,MAAMkiB,SAASvf,OAAO+gB,GACf,QAAnBlkB,EAAKQ,MAAMhH,OACnB2qB,EAAenkB,EAAKQ,MAAMkiB,SAAS7Z,IAAI,SAAAhN,GACrC,OAAIA,EAAK8kB,SAAWuD,EAAYvD,OACvBuD,EAEAroB,MAKTsoB,EApBW,CAAA/N,EAAAlP,KAAA,gBAqBbuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,qBAAsBuH,IAAK,qBArBzC2S,EAAAlP,KAAA,EAsBPgY,KAAMkF,IAAI,oDAAsDpkB,EAAKQ,MAAM6hB,iBAAkB8B,EAAc,CAAE/d,QAAS,CAAEie,eAAgB,sBAtBjI,cAAAjO,EAAAlP,KAAA,EAuBPlH,EAAKiB,SAAS,CAACuiB,SAAU,KAAMd,SAAUyB,IAvBlC,OAwBb1L,KAAQ/d,QAAQ,CAAEwB,QAAS,QAASuH,IAAK,mBAAoB2e,SAAU,IAxB1D,yBAAAhM,EAAA/O,SAAA8O,MAvHH,gBAAAE,GAAA,OAAAH,EAAA3O,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAmJdqjB,iBAAmB,SAAC1C,GAClB,OAAA1gB,OAAA+P,GAAA,GAAAC,GAAAtM,EAAAiD,KAAO,SAAA8Q,IAAA,IAAAyM,EAAA,OAAAlU,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,YACCid,EAAenkB,EAAKQ,MAAMkiB,SAAS5L,OAAO,SAAAjb,GAC9C,OAAOA,EAAK8kB,SAAWA,KAFpB,CAAA/I,EAAA1Q,KAAA,eAKHuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,mBAAoBuH,IAAK,mBALjDmU,EAAA1Q,KAAA,EAMGgY,KAAMkF,IAAI,oDAAsDpkB,EAAKQ,MAAM6hB,iBAAkB8B,EAAc,CAAE/d,QAAS,CAAEie,eAAgB,sBAN3I,OAOH5L,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,iBAAkB2e,SAAU,IACvEpiB,EAAKiB,SAAS,CAACuiB,SAAU,KAAMd,SAAUyB,IARtC,wBAAAvM,EAAAvQ,SAAAqQ,OApJK1X,EAiKdskB,wBAjKc,eAAA/I,EAAAtb,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAiKY,SAAA4U,EAAO+I,GAAP,OAAAtU,GAAAtM,EAAAoD,KAAA,SAAA0U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,uBAAwBuH,IAAK,oBADhCgY,EAAAvU,KAAA,EAElBgY,KAAMkF,IAAI,oDAAsDG,GAF9C,cAAA9I,EAAAvU,KAAA,EAGlBlH,EAAK6lB,0BAHa,cAAApK,EAAAvU,KAAA,EAIlBlH,EAAKiB,SAAS,CAACohB,iBAAkBkC,EAAUjC,eAAgB,OAJzC,OAKxB7J,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,kBAAmB2e,SAAU,IACxEpiB,EAAKuiB,yBANmB,wBAAA9G,EAAApU,SAAAmU,MAjKZ,gBAAA4D,GAAA,OAAA7D,EAAAhU,MAAAvQ,KAAA8K,YAAA,GAAA9B,EA0KdwkB,qBA1KcvkB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA0KS,SAAA+U,IAAA,OAAA1L,GAAAtM,EAAAoD,KAAA,SAAA6U,GAAA,cAAAA,EAAA3U,KAAA2U,EAAA1U,MAAA,cACrBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,mBAAoBuH,IAAK,uBAD/BmY,EAAA1U,KAAA,EAEfgY,KAAMuF,OAAO,oDAAsDzkB,EAAKQ,MAAM6hB,kBAF/D,cAAAzG,EAAA1U,KAAA,EAGflH,EAAK6lB,0BAHU,cAAAjK,EAAA1U,KAAA,EAIflH,EAAKiB,SAAS,CAACohB,iBAAkB,KAAMC,eAAgB,OAJxC,OAKrB7J,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,qBAAsB2e,SAAU,IALtD,wBAAAxG,EAAAvU,SAAAsU,MA1KT3b,EAkLd0kB,wBAlLczkB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAkLY,SAAA+d,IAAA,OAAA1U,GAAAtM,EAAAoD,KAAA,SAAA6d,GAAA,cAAAA,EAAA3d,KAAA2d,EAAA1d,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,0BAA2BuH,IAAK,yBADnCmhB,EAAA1d,KAAA,EAElBgY,KAAMkF,IAAI,mDAAoD,CAAEhiB,KAAM,kBAAmBmiB,SAAUvkB,EAAKQ,MAAM6hB,kBAAoB,CAAEjc,QAAS,CAAEie,eAAgB,sBAF7I,cAAAO,EAAA1d,KAAA,EAGlBlH,EAAK6lB,0BAHa,OAIxB7lB,EAAKuiB,yBACL9J,KAAQ/d,QAAQ,CAAEwB,QAAS,YAAauH,IAAK,uBAAwB2e,SAAU,IALvD,wBAAAwC,EAAAvd,SAAAsd,MAhLxB3kB,EAAKQ,MAAQ,CACXslB,qBAAsB,GACtB9D,gBAAiB,KACjBK,iBAAkB,KAClBK,SAAU,GACVc,SAAU,KACVhqB,KAAM,MARIwG,mFAaZhJ,KAAK6uB,2DA8KE,IAAAphB,EAAAzN,KACH6tB,EAAc,GAmBlB,OACEpd,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACID,EAAA9D,EAAAC,cAACkhB,GAAA,EAAD,CACEC,UAAQ,EACRC,gBAAc,EACdC,aAAW,EACXtiB,MAAM,eACNiF,UAAU,WACVsd,UAASluB,KAAKwJ,MAAMgjB,SACpB2B,OAAQ,KACRC,SAAUpuB,KAAK+sB,uBAEftc,EAAA9D,EAAAC,cAACyhB,GAAD,CACEpH,KAAMjnB,KAAKwJ,MAAMgjB,SACjB7D,OAAQ3oB,KAAKgtB,eACbxqB,KAAK,gBAGXiO,EAAA9D,EAAAC,cAACkJ,EAAD,MAEArF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChCN,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,0BAA0BmF,GAAG,KAC1CtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,kDACpBH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,kCACbH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,OACVvM,MAAM,OACN+N,QAAS,WAAO3E,EAAKxD,SAAS,CAAEzH,KAAM,aACtC6T,KAAK,MAJP,kBASErW,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACN+N,QAASpS,KAAK0tB,wBACdrX,KAAK,MAHP,iBAQA,KAGFrW,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,SACN+N,QAASpS,KAAKwtB,qBACdnX,KAAK,MAJP,UASA,MAIiB,YAApBrW,KAAKwJ,MAAMhH,KAEViO,EAAA9D,EAAAC,cAAA,SAAOgE,UAAU,QACjBH,EAAA9D,EAAAC,cAAA,aACA6D,EAAA9D,EAAAC,cAAA,UAAI6D,EAAA9D,EAAAC,cAAA,UACF6D,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,YACZhC,KAAK,OACLgB,SAAU,SAACqJ,GAAQoY,EAAcpY,EAAErC,OAAO3O,UAG9CgM,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,YACN+N,QA/FO,WAGtByb,EAAYS,SAAS,SAKtB,KAAKC,KAAKV,GACZpM,KAAQ+M,MAAM,6BAIhB/gB,EAAKxD,SAAS,CAAEzH,KAAM,OACtBiL,EAAK6f,wBAAwBO,IAV3BpM,KAAQ+M,MAAM,wCA4FInY,KAAK,MAEL5F,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,YAGfqF,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,YACN+N,QAAS,WAAO3E,EAAKxD,SAAS,CAAEzH,KAAM,QACtC6T,KAAK,MAEL5F,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,eAOf,MAINqF,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,CAAUtF,UAAU,gBAClBH,EAAA9D,EAAAC,cAACmT,GAAA,EAAD,CACEvd,KAAK,SACLa,MAAM,QACNorB,aAAc,CAACzuB,KAAKwJ,MAAM6hB,kBAC1BrhB,SAAUhK,KAAK+rB,sBAEd/rB,KAAK6rB,yBAKdpb,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAamF,GAAG,KAE7B/V,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,qBACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KACN/D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAQ5Q,KAAKwJ,MAAM6hB,mBAEnC5a,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAa4D,GAAG,KAC7B/D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN8O,KAAK,SACLf,QAASpS,KAAKysB,sBACdpW,KAAK,MAJP,qBAWN5F,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAAC8hB,GAAA,EAAD,CACEtiB,SAAUpM,KAAK2uB,iCAEd3uB,KAAKksB,8BAMZzb,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,sBAAsB7D,MAAO,CAACmI,UAAW,UACvDzE,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,sBACtBH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACAzF,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKzH,MAAO,CAACiV,UAAW,WAC9BvR,EAAA9D,EAAAC,cAAA,gDAxWQU,IAAMC,WCH5Bod,IAFWjiB,KAAXC,OACYiiB,KAAZC,QACU1W,KAAVwW,OAyXOsE,eApXb,SAAAA,IAAc,IAAAjmB,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAivB,IACZjmB,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAgmB,GAAA5lB,KAAArJ,QAeFkvB,sBAhBcjmB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAgBU,SAAAC,IAAA,IAAAuV,EAAA4F,EAAA,OAAA/R,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,yBAA0BuH,IAAK,qBADpCuD,EAAAE,KAAA,EAECgY,KAAMC,IAAI,kDAFX,cAEhB/C,EAFgBpV,EAAAG,KAGhB6a,EAAkB5F,EAAStgB,KAAKkmB,gBAHhBhb,EAAAE,KAAA,EAIhBlH,EAAKiB,SAAW,CAAEklB,mBAAoB/J,EAAStgB,KAAKqmB,MAAOH,oBAJ3C,cAKtBvJ,KAAQ/d,QAAQ,CAAEwB,QAAS,SAAUuH,IAAK,mBAAoB2e,UAAW,IALnDpb,EAAAE,KAAA,GAQhBlH,EAAKiB,SAAS,CAACohB,iBAAkBL,EAAiBM,eAAgB,OARlD,QAStBtiB,EAAKuiB,yBATiB,yBAAAvb,EAAAK,SAAAR,MAhBV7G,EA4BdomB,4BA5Bc,eAAAhV,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA4BgB,SAAAyK,EAAOoR,GAAP,IAAArG,EAAAsG,EAAA,OAAAzS,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAArK,KAAA,EACLgY,KAAMC,IAAI,kDAAoDsD,GADzD,OACtBrG,EADsB7K,EAAApK,KAExBub,EAAW,GACXtG,EAAStgB,MAAQ6mB,MAAMC,QAAQxG,EAAStgB,QAC1C4mB,EAAWtG,EAAStgB,MAEtBkE,EAAKiB,SAAW,CAAEyhB,aANU,wBAAAnR,EAAAlK,SAAAgK,MA5BhB,gBAAA/J,GAAA,OAAA8J,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAqCd6iB,mBAAqB,WACnB,OAAO7iB,EAAKQ,MAAM2lB,mBAAmBtd,IAAI,SAAA4Z,GACvC,IAAMK,EAAYL,IAAaziB,EAAKQ,MAAMwhB,gBAC1C,OACAva,EAAA9D,EAAAC,cAACmT,GAAA,EAAKC,KAAN,CAAWvT,IAAKgf,GAAWK,EAAUrb,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,UAAY,GAA5D,IAAiEqgB,MAzCvDziB,EA8Cd+iB,qBA9Cc,eAAAC,EAAA/iB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA8CS,SAAA2O,EAAO0N,GAAP,IAAAZ,EAAA,OAAApS,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cACfmb,EAAmBY,EAAaxf,IADjBiS,EAAAxO,KAAA,EAEflH,EAAKiB,SAAS,CAACohB,mBAAkBC,eAAgB,OAFlC,OAGrBtiB,EAAKuiB,yBAHgB,wBAAA7M,EAAArO,SAAAkO,MA9CT,gBAAAV,GAAA,OAAAmO,EAAAzb,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAoDduiB,uBAAyB,WACvBviB,EAAKomB,4BAA4BpmB,EAAKQ,MAAM6hB,mBArDhCriB,EAwDdkjB,yBAA2B,WACzB,OAAOljB,EAAKQ,MAAMkiB,SAAS7Z,IAAI,SAACoV,EAAMxa,GACpC,OACEgE,EAAA9D,EAAAC,cAACyiB,GAAD,CAAOlD,OAAQlF,EAAK5I,YAAa5R,IAAKA,GACpCgE,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKzH,MAAO,CAACiV,UAAW,UAC9BvR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN+N,QAASpJ,EAAKojB,gBAAgBnF,GAC9B5Q,KAAK,MAHP,QAOA5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAASpJ,EAAKqjB,iBAAiBpF,EAAK0C,QACpCtT,KAAK,MAHP,YASJ5F,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,KACE9D,EAAA9D,EAAAC,cAAC0f,GAAD,CAAYrF,KAAMA,UAhFhBje,EAwFdojB,gBAAkB,WAAc,IAAbG,EAAazhB,UAAA3F,OAAA,QAAA0E,IAAAiB,UAAA,GAAAA,UAAA,GAAP,GAEvB,OAAO,WACL9B,EAAKiB,SAAS,CAACuiB,SAAUD,EAAO/pB,KAAM,WA3F5BwG,EA+FdyjB,sBAAwB,WAEtB,IAAMC,EAAc1jB,EAAKQ,MAAMkiB,SAASiB,OAAO,SAACC,EAAU/nB,GACxD,OAAQ+nB,EAASjD,OAAS9kB,EAAK8kB,OAASiD,EAAW/nB,GAClDmE,EAAKQ,MAAMkiB,SAAS,IAEnBmB,EAAY,EACZH,IACFG,EAAYH,EAAY/C,OAAS,GAGnC,IAAM4C,EAAQ,CACZ5C,OAAQkD,EACRC,SAAU,GAGZ9jB,EAAKiB,SAAS,CAACuiB,SAAUD,EAAO/pB,KAAM,YA/G1BwG,EAkHd+jB,sBAAwB,WACtB/jB,EAAKiB,SAAS,CAACuiB,SAAU,QAnHbxjB,EAsHdgkB,eAtHc,eAAA9N,EAAAjW,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAsHG,SAAAuP,EAAO8N,GAAP,IAAAC,EAAAC,EAAA,OAAAlU,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,UACTgd,EADSjkB,OAAAgU,GAAA,EAAAhU,CAAA,CAEb0gB,OAAQ3gB,EAAKQ,MAAMgjB,SAAS7C,OAC5BmD,SAAU9jB,EAAKQ,MAAMgjB,SAASM,UAC3BG,GAGDE,EAAe,KACG,UAAnBnkB,EAAKQ,MAAMhH,KACZ2qB,EAAenkB,EAAKQ,MAAMkiB,SAASvf,OAAO+gB,GACf,QAAnBlkB,EAAKQ,MAAMhH,OACnB2qB,EAAenkB,EAAKQ,MAAMkiB,SAAS7Z,IAAI,SAAAhN,GACrC,OAAIA,EAAK8kB,SAAWuD,EAAYvD,OACvBuD,EAEAroB,MAKTsoB,EApBW,CAAA/N,EAAAlP,KAAA,eAqBbuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,qBAAsBuH,IAAK,qBArBzC2S,EAAAlP,KAAA,EAsBPgY,KAAMkF,IAAI,kDAAoDpkB,EAAKQ,MAAM6hB,iBAAkB8B,EAAc,CAAE/d,QAAS,CAAEie,eAAgB,sBAtB/H,OAuBbrkB,EAAKiB,SAAS,CAACuiB,SAAU,KAAMd,SAAUyB,IACzC1L,KAAQ/d,QAAQ,CAAEwB,QAAS,QAASuH,IAAK,mBAAoB2e,SAAU,IAxB1D,wBAAAhM,EAAA/O,SAAA8O,MAtHH,gBAAAE,GAAA,OAAAH,EAAA3O,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAkJdqjB,iBAAmB,SAAC1C,GAClB,OAAA1gB,OAAA+P,GAAA,GAAAC,GAAAtM,EAAAiD,KAAO,SAAA8Q,IAAA,IAAAyM,EAAA,OAAAlU,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,YACCid,EAAenkB,EAAKQ,MAAMkiB,SAAS5L,OAAO,SAAAjb,GAC9C,OAAOA,EAAK8kB,SAAWA,KAFpB,CAAA/I,EAAA1Q,KAAA,eAKHuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,mBAAoBuH,IAAK,mBALjDmU,EAAA1Q,KAAA,EAMGgY,KAAMkF,IAAI,kDAAoDpkB,EAAKQ,MAAM6hB,iBAAkB8B,EAAc,CAAE/d,QAAS,CAAEie,eAAgB,sBANzI,OAOH5L,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,iBAAkB2e,SAAU,IACvEpiB,EAAKiB,SAAS,CAACuiB,SAAU,KAAMd,SAAUyB,IARtC,wBAAAvM,EAAAvQ,SAAAqQ,OAnJK1X,EAgKdskB,wBAhKc,eAAA/I,EAAAtb,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAgKY,SAAA4U,EAAO+I,GAAP,OAAAtU,GAAAtM,EAAAoD,KAAA,SAAA0U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,uBAAwBuH,IAAK,oBADhCgY,EAAAvU,KAAA,EAElBgY,KAAMkF,IAAI,kDAAoDG,GAF5C,cAAA9I,EAAAvU,KAAA,EAGlBlH,EAAKkmB,wBAHa,cAAAzK,EAAAvU,KAAA,EAIlBlH,EAAKiB,SAAS,CAACohB,iBAAkBkC,EAAUjC,eAAgB,OAJzC,OAKxB7J,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,kBAAmB2e,SAAU,IACxEpiB,EAAKuiB,yBANmB,wBAAA9G,EAAApU,SAAAmU,MAhKZ,gBAAA4D,GAAA,OAAA7D,EAAAhU,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAyKdwkB,qBAzKcvkB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAyKS,SAAA+U,IAAA,OAAA1L,GAAAtM,EAAAoD,KAAA,SAAA6U,GAAA,cAAAA,EAAA3U,KAAA2U,EAAA1U,MAAA,cACrBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,mBAAoBuH,IAAK,uBAD/BmY,EAAA1U,KAAA,EAEfgY,KAAMuF,OAAO,kDAAoDzkB,EAAKQ,MAAM6hB,kBAF7D,cAAAzG,EAAA1U,KAAA,EAGflH,EAAKkmB,wBAHU,cAAAtK,EAAA1U,KAAA,EAIflH,EAAKiB,SAAS,CAACohB,iBAAkB,KAAMC,eAAgB,OAJxC,OAKrB7J,KAAQ/d,QAAQ,CAAEwB,QAAS,UAAWuH,IAAK,qBAAsB2e,SAAU,IALtD,wBAAAxG,EAAAvU,SAAAsU,MAzKT3b,EAiLd0kB,wBAjLczkB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAiLY,SAAA+d,IAAA,OAAA1U,GAAAtM,EAAAoD,KAAA,SAAA6d,GAAA,cAAAA,EAAA3d,KAAA2d,EAAA1d,MAAA,cACxBuR,KAAQwJ,QAAQ,CAAE/lB,QAAS,0BAA2BuH,IAAK,yBADnCmhB,EAAA1d,KAAA,EAElBgY,KAAMkF,IAAI,iDAAkD,CAAEhiB,KAAM,kBAAmBmiB,SAAUvkB,EAAKQ,MAAM6hB,kBAAoB,CAAEjc,QAAS,CAAEie,eAAgB,sBAF3I,cAAAO,EAAA1d,KAAA,EAGlBlH,EAAKkmB,wBAHa,OAIxBlmB,EAAKuiB,yBACL9J,KAAQ/d,QAAQ,CAAEwB,QAAS,YAAauH,IAAK,uBAAwB2e,SAAU,IALvD,wBAAAwC,EAAAvd,SAAAsd,MA/KxB3kB,EAAKQ,MAAQ,CACX2lB,mBAAoB,GACpBnE,gBAAiB,KACjBK,iBAAkB,KAClBK,SAAU,GACVc,SAAU,KACVhqB,KAAM,MARIwG,mFAaZhJ,KAAKkvB,yDA6KE,IAAAzhB,EAAAzN,KACH6tB,EAAc,GAmBlB,OACEpd,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACID,EAAA9D,EAAAC,cAACkhB,GAAA,EAAD,CACEC,UAAQ,EACRC,gBAAc,EACdC,aAAW,EACXtiB,MAAM,eACNiF,UAAU,WACVsd,UAASluB,KAAKwJ,MAAMgjB,SACpB2B,OAAQ,KACRC,SAAUpuB,KAAK+sB,uBAEftc,EAAA9D,EAAAC,cAACyhB,GAAD,CACEpH,KAAMjnB,KAAKwJ,MAAMgjB,SACjB7D,OAAQ3oB,KAAKgtB,eACbxqB,KAAK,cAGXiO,EAAA9D,EAAAC,cAACkJ,EAAD,MAEArF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChCN,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,0BAA0BmF,GAAG,KAC1CtF,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,kDACpBH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,kCACbH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,OACVvM,MAAM,OACN+N,QAAS,WAAO3E,EAAKxD,SAAS,CAAEzH,KAAM,aACtC6T,KAAK,MAJP,kBASErW,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACN+N,QAASpS,KAAK0tB,wBACdrX,KAAK,MAHP,iBAQA,KAGFrW,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,SACN+N,QAASpS,KAAKwtB,qBACdnX,KAAK,MAJP,UASA,MAIiB,YAApBrW,KAAKwJ,MAAMhH,KAEViO,EAAA9D,EAAAC,cAAA,SAAOgE,UAAU,QACjBH,EAAA9D,EAAAC,cAAA,aACA6D,EAAA9D,EAAAC,cAAA,UAAI6D,EAAA9D,EAAAC,cAAA,UACF6D,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,YACZhC,KAAK,OACLgB,SAAU,SAACqJ,GAAQoY,EAAcpY,EAAErC,OAAO3O,UAG9CgM,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,YACN+N,QA/FO,WAGtByb,EAAYS,SAAS,SAKtB,KAAKC,KAAKV,GACZpM,KAAQ+M,MAAM,6BAIhB/gB,EAAKxD,SAAS,CAAEzH,KAAM,OACtBiL,EAAK6f,wBAAwBO,IAV3BpM,KAAQ+M,MAAM,wCA4FInY,KAAK,MAEL5F,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,YAGfqF,EAAA9D,EAAAC,cAAA,UACE6D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,YACN+N,QAAS,WAAO3E,EAAKxD,SAAS,CAAEzH,KAAM,QACtC6T,KAAK,MAEL5F,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,eAOf,MAINqF,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,CAAUtF,UAAU,gBAClBH,EAAA9D,EAAAC,cAACmT,GAAA,EAAD,CACEvd,KAAK,SACLa,MAAM,QACNorB,aAAc,CAACzuB,KAAKwJ,MAAM6hB,kBAC1BrhB,SAAUhK,KAAK+rB,sBAEd/rB,KAAK6rB,yBAKdpb,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAamF,GAAG,KAE7B/V,KAAKwJ,MAAM6hB,iBAET5a,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,qBACpBH,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,sBACbH,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KACN/D,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAQ5Q,KAAKwJ,MAAM6hB,mBAEnC5a,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAK3D,UAAU,aAAa4D,GAAG,KAC7B/D,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN8O,KAAK,SACLf,QAASpS,KAAKysB,sBACdpW,KAAK,MAJP,qBAWN5F,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAAC8hB,GAAA,EAAD,CACEtiB,SAAUpM,KAAK2uB,iCAEd3uB,KAAKksB,8BAMZzb,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,sBAAsB7D,MAAO,CAACmI,UAAW,UACvDzE,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,sBACtBH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACAzF,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,KACE7D,EAAA9D,EAAAC,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKzH,MAAO,CAACiV,UAAW,WAC9BvR,EAAA9D,EAAAC,cAAA,gDAvWMU,IAAMC,yHCF5ByK,WAAM,IAAIxP,KAAI,CAACC,WAAW,KAExBE,GAAWD,KAAXC,OAEF0U,eAEJ,SAAAA,IAAc,IAAArU,EAAA,OAAAC,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAqd,IACZrU,EAAAC,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAoU,GAAAhU,KAAArJ,QAcFsvB,WAAa,GAfCtmB,EAgBduU,WAAa,KAhBCvU,EAkBdumB,iBAAmB,WACjB,OAAOvmB,EAAKsmB,WAAWzd,IAAI,SAAChN,EAAM4H,GAChC,OACEgE,EAAA9D,EAAAC,cAAC4iB,GAAD,CAAQ/iB,IAAKA,EAAKhI,MAAOgI,GACtB5H,MAtBKmE,EA8CdymB,sBA9Cc,eAAAhgB,EAAAxG,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA8CU,SAAAC,EAAO6f,GAAP,OAAAzW,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtBlH,EAAKiB,SAAU,CAACylB,UAAWA,EAAWjmB,SAAU,KAAMkmB,uBAAwB,OADxD,wBAAA3f,EAAAK,SAAAR,MA9CV,gBAAAS,GAAA,OAAAb,EAAAc,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAiEd4mB,wBAA0B,WACxB,OAAI5mB,EAAKQ,MAAMC,SAEXgH,EAAA9D,EAAAC,cAACmP,GAAA,EAAD,CAAYtP,IAAKzD,EAAKU,MAAM+E,KAAMhF,SAAUT,EAAKQ,MAAMC,SAAUO,SAAUhB,EAAK0R,mBAG3E,MAvEG1R,EA4Ed4U,kBAAoB,WAClB,OAAO5U,EAAKQ,MAAMkmB,WAChB,KAAK,EACH,IAAIG,EAAmB,GACvB,IAAK,IAAIhrB,KAAQmE,EAAKU,MAAMomB,YAC1BD,EAAiBrkB,KACfiF,EAAA9D,EAAAC,cAAC4iB,GAAD,CAAQ/iB,IAAK5H,EAAMJ,MAAOI,GAAOA,IAGrC,OACE4L,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtL,YAAY,gBACZL,MAAO,CAAErM,MAAO,KAChB+D,MAAOuE,EAAKQ,MAAMmmB,uBAClBvjB,SAAU,SAAC3H,GACTuE,EAAKQ,MAAMmmB,uBAAyBlrB,EACpCuE,EAAK+mB,kBAAkB,YAAYtrB,EAAM,OAG1CorB,IAKP,KAAK,EACL,KAAK,EACH,IAAIG,EAMJ,OALAA,EAA8BhnB,EAAKU,MAAMumB,YAAYpe,IAAI,SAAAqe,GACvD,OACEzf,EAAA9D,EAAAC,cAAC4iB,GAAD,CAAQ/iB,IAAKyjB,EAAQzkB,GAAIhH,MAAOyrB,EAAQzkB,IAAKykB,EAAQ7R,eAIvD5N,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtL,YAAY,gBACZL,MAAO,CAAErM,MAAO,KAChB+D,MAAOuE,EAAKQ,MAAMmmB,uBAClBvjB,SAAU,SAAC+jB,GACT,IAAMD,EAAUlnB,EAAKU,MAAMumB,YAAYzlB,KAAK,SAAA3F,GAAI,OAAIA,EAAK4G,KAAO0kB,IAC5DxiB,EAAqB,KACrBqb,EAAa,KACjB,GAA6B,IAAzBhgB,EAAKQ,MAAMkmB,UACb/hB,EAAqB3E,EAAKU,MAAMkc,kBAAkBE,MAAMoK,EAAQE,eAAeF,EAAQxM,QACvFsF,EAAahgB,EAAKU,MAAMkc,kBAAkBE,MAAMoK,EAAQE,eAAe7hB,eAClE,CACL,IAAM2a,EAAclgB,EAAKU,MAAM8d,YAAY0I,EAAQE,eAAeF,EAAQxM,QAAtD,gBACpB/V,EAAqB3E,EAAKU,MAAMkc,kBAAkBE,MAAMoD,EAAYjX,MAAMiX,EAAYxF,QACtFsF,EAAahgB,EAAKU,MAAMkc,kBAAkBE,MAAMoD,EAAYjX,MAAM1D,WAEpE,IAAM8hB,GAAgB,IAAI7iB,MAAqBE,gBAAgBC,GACzD2iB,GAAkB,IAAI9iB,MAAqBU,mBAAmBP,EAAoBqb,GAClFvf,EAAW,CACfwB,WAAY,CACVuU,KAAM6Q,EACNjhB,QAAQnG,OAAAgU,GAAA,EAAAhU,CAAA,CAAGmC,KAAM,UAAaklB,KAGlCtnB,EAAKiB,SAAS,CAAC0lB,uBAAwBQ,EAAW1mB,eAGnDumB,IAKP,KAAK,EAEH,IAQIO,EAAsB,GAC1B,IAAK,IAAI1rB,IATU,CACjB2rB,aAAc,CACZnS,YAAa,uBAEfoS,QAAS,CACPpS,YAAa,8BAKfkS,EAAoB/kB,KAClBiF,EAAA9D,EAAAC,cAAC4iB,GAAD,CAAQ/iB,IAAK5H,EAAMJ,MAAOI,GAAOA,IAGrC,OACE4L,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtL,YAAY,gBACZL,MAAO,CAAErM,MAAO,KAChB+D,MAAOuE,EAAKQ,MAAMmmB,uBAClBvjB,SAAU,SAAC3H,GACTuE,EAAKQ,MAAMmmB,uBAAyBlrB,EACpCuE,EAAK+mB,kBAAkB,sBAAsBtrB,EAAM,OAGpD8rB,IAKP,QACE,OAAO,OAhLCvnB,EAoLd+mB,kBAAoB,SAACW,GACnB1nB,EAAKU,MAAM0C,SAASskB,IArLR1nB,EAwLdmR,qBAxLc,eAAAC,EAAAnR,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAwLS,SAAAyK,EAAO5V,GAAP,IAAA6V,EAAA,OAAArB,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAAtK,KAAA,EAEbqK,EAAsBL,KAAKO,MAAM/V,GAFpB8V,EAAArK,KAAA,EAGblH,EAAKiB,SAAU,CAACiP,iBAAmBoB,IAHtB,OAInBtR,EAAKU,MAAM4P,UAAUnO,KAAOmP,EAAoB7L,KAChDzF,EAAKU,MAAM8P,oBACXxQ,EAAKuQ,iBANcgB,EAAArK,KAAA,gBAAAqK,EAAAtK,KAAA,EAAAsK,EAAAE,GAAAF,EAAA,kCAAAA,EAAAlK,SAAAgK,EAAA,iBAxLT,gBAAAwD,GAAA,OAAAzD,EAAA7J,MAAAvQ,KAAA8K,YAAA,GAAA9B,EAkMd0R,iBAAmB,SAACjW,EAAOkW,GACzB3R,EAAKuU,WAAa9Y,EAClBuE,EAAK+mB,kBAAkB,UAAU/mB,EAAKQ,MAAMmmB,uBAAuB,KAA4B,IAAvB3mB,EAAKQ,MAAMkmB,UAAc,UAAU,YAAY,IAAIjrB,EAAM,MApMrHuE,EAwMd2U,cAAgB,WACd,IAAIG,EAAa,GAIjB,OAHK9U,EAAKuU,aACRvU,EAAKuU,WAAa,IAEbvU,EAAKQ,MAAMkmB,WAChB,KAAK,EACH5R,EAAa,oBAAsB9U,EAAKuU,WAAa,IACrD,MACF,KAAK,EACHO,EAAa,kBAAoB9U,EAAKuU,WAAa,IACnD,MACF,KAAK,EACHO,EAAa,oBAAsB9U,EAAKuU,WAAa,IACrD,MACF,KAAK,EACHO,EAAa,mCACb,MACF,QACEA,EAAa9U,EAAKuU,WAItBvU,EAAKU,MAAM0C,SAAS0R,IA/NR9U,EAkOdmP,kBAAoB,SAACC,GACnBpP,EAAKuU,WAAanF,EAClBpP,EAAK2U,iBAlOL3U,EAAKQ,MAAQ,CACXkmB,UAAW,KACXjmB,SAAU,KACVkmB,uBAAwB,MAI1B3mB,EAAKsmB,WAAW,GAAG,eACnBtmB,EAAKsmB,WAAW,GAAG,mBACnBtmB,EAAKsmB,WAAW,GAAG,oBACnBtmB,EAAKsmB,WAAW,GAAG,WAZPtmB,wEAyOZ,OACEyH,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtL,YAAY,gBACZL,MAAO,CAAErM,MAAO,KAChB+D,MAAOzE,KAAKsvB,WAAWtvB,KAAKwJ,MAAMkmB,WAClC1lB,SAAUhK,KAAKyvB,uBAEdzvB,KAAKuvB,qBAGV9e,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACG5wB,KAAK4d,qBAERnN,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACG5wB,KAAK4vB,mCA3PoBtiB,IAAMC,WAkQpCsjB,eAEJ,SAAAA,IAAc,IAAApjB,EAAA,OAAAxE,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA6wB,IACZpjB,EAAAxE,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA4nB,GAAAxnB,KAAArJ,QAMFmY,kBAPc,eAAA6T,EAAA/iB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAOM,SAAA2O,EAAO9P,EAAMhK,GAAb,IAAAsf,EAAA,OAAA9K,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cACd6T,EAAStW,EAAKjE,MAAMua,QACjBtV,GAAQhK,EACfgJ,EAAK/D,MAAMwmB,QAAQnM,OAASA,EAHVrF,EAAAxO,KAAA,EAIZzC,EAAKxD,SAAS,CAAC8Z,WAJH,OAKlBtW,EAAKqjB,aALa,wBAAApS,EAAArO,SAAAkO,MAPN,gBAAAc,EAAA+I,GAAA,OAAA4D,EAAAzb,MAAAvQ,KAAA8K,YAAA,GAAA2C,EAedqjB,WAAa,WACX,IAAIV,EAAgB3iB,EAAK/D,MAAMwmB,QAAQE,cACvC,IAAK,IAAIhS,KAAK3Q,EAAKjE,MAAMua,OACvBqM,EAAgBA,EAAcW,QAAQ,IAAI3S,EAAE,IAAK3Q,EAAKjE,MAAMua,OAAO3F,IAErE3Q,EAAK/D,MAAMwmB,QAAQje,KAAOme,EAC1B3iB,EAAK/D,MAAM0C,YArBCqB,EAwBdujB,aAAe,WAGb,IAAKvjB,EAAK/D,MAAMyE,eACd,OAAO,KAET,IAAM8iB,EAAYxjB,EAAK/D,MAAMyE,eAAe2R,OAAO,SAAAjb,GACjD,MAAmB,SAAZA,EAAK2J,KAEd,OAAIyiB,EAAU9rB,QAAQ,EACb,KAGPsL,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,QACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,mBACvB8E,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KAEIoV,EAAUpf,IAAI,SAAAhN,GACZ,OACE4L,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,OAAOnE,IAAK5H,EAAK4J,MAC9BgC,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAEPjX,EAAK4J,OAGVgC,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACPzjB,EAAK+K,cAAc3T,cAxDjC4I,EAwEd+K,cAAgB,SAAC2Y,GACV1jB,EAAK/D,MAAMwmB,QAAQnM,SACtBtW,EAAK/D,MAAMwmB,QAAQnM,OAAS,IAE1BtW,EAAK/D,MAAMwmB,QAAQnM,OAAOoN,EAAU1iB,QACtChB,EAAK/D,MAAMwmB,QAAQnM,OAAOoN,EAAU1iB,MAAQ,IAE9C,IAAM2iB,EAAY3jB,EAAK/D,MAAMwmB,QAAQnM,OAAOoN,EAAU1iB,MAClD4iB,EAAmB,KAEvB,GAAID,EAAUE,WAAW,aAAc,CAErC,IAAMC,EAAYH,EAAUI,MAAM,EAAEJ,EAAUjsB,OAAO,GAE/CssB,EAAO1Q,KAAEoH,IAAI1a,EAAK/D,MAAMomB,YAAayB,GACvCE,IACFJ,EACE5gB,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAKnF,MAAO,CAAE2kB,YAAa,WAAaD,IAI9C,OAAGN,EAAUrjB,QAAUqjB,EAAUrjB,OAAO2K,KAEpChI,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CACEtM,SAAU,SAAC3H,GAAD,OAAWgJ,EAAK0K,kBAAkBgZ,EAAU1iB,KAAMhK,IAC5DA,MAAOgJ,EAAK/D,MAAMwmB,QAAQnM,OAAOoN,EAAU1iB,OAE3C0iB,EAAUrjB,OAAO2K,KAAK5G,IAAI,SAAAhN,GAC1B,OACE4L,EAAA9D,EAAAC,cAAC4iB,GAAD,CAAQ/iB,IAAK5H,EAAMJ,MAAOI,GAAOA,MAIpCwsB,GAKD5gB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CAAOvL,YAAY,QAAQ3I,MAAOgJ,EAAK/D,MAAMwmB,QAAQnM,OAAOoN,EAAU1iB,MACtErC,SAAU,SAACqJ,GAAD,OAAOhI,EAAK0K,kBAAkBgZ,EAAU1iB,KAAMgH,EAAErC,OAAO3O,UAChE4sB,IAhHP5jB,EAAKjE,MAAQ,CACXua,OAAQ,IAHEtW,wEA0HZ,OACEgD,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACE1Q,KAAKgxB,uBA9Ha1jB,IAAMC,WAoI1BokB,eACJ,SAAAA,IAAc,IAAAtV,EAAA,OAAApT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA2xB,IACZtV,EAAApT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA0oB,GAAAtoB,KAAArJ,QAQF4N,WAAa,GATCyO,EAWd/S,kBAAoB,WAGlB+S,EAAKzO,YAAc,IAAIJ,MAAqBE,gBAAgB2O,EAAK3S,MAAMiE,oBAEvE,IAAIsQ,EAA0B,GAC1B5B,EAAK3S,MAAMyE,iBACb8P,EAA0BA,EAAwB9R,OAAOkQ,EAAK3S,MAAMyE,iBAElEkO,EAAK3S,MAAMiE,mBAAmBY,aAChC0P,EAA0BA,EAAwB9R,OAAOkQ,EAAK3S,MAAMiE,mBAAmBY,aAGzF,IAAI4P,EAAkB,GACtB,IAAK,IAAIC,KAAKH,EACZE,EAAgBF,EAAwBG,GAAG3P,MAAQ,CACjD4P,YAAaJ,EAAwBG,GAAGC,aAG5ChC,EAAKpS,SAAS,CAACgU,0BAAyBE,qBA9B5B9B,EAiCd9S,mBAAqB,WAEhB8S,EAAK4E,KAAKC,YACX7E,EAAK4E,KAAKC,WAAWC,WAAWC,OAAO/E,EAAK3S,MAAMwmB,QAAQ1Q,OApChDnD,EA2CdiC,6BA3CcrV,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA2CiB,SAAAuP,IAAA,IAAAX,EAAAoT,EAAA9mB,UAAA,OAAAmO,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,OAAOsO,EAAPoT,EAAAzsB,OAAA,QAAA0E,IAAA+nB,EAAA,IAAAA,EAAA,GAC7BvV,EAAK7S,MAAMyU,wBAAwB5W,QAAQ,SAACsX,GAC3B,WAAXA,EAAMnQ,KACHgQ,IAAgBG,EAAMC,WACpBvC,EAAK3S,MAAMwmB,QAAQ9gB,QAIdiN,EAAK3S,MAAMwmB,QAAQ9gB,QAAQuP,EAAMlQ,QACzC4N,EAAK3S,MAAMwmB,QAAQ9gB,QAAQuP,EAAMlQ,MAAQ,KAJzC4N,EAAK3S,MAAMwmB,QAAQ9gB,QAAU,GAC7BiN,EAAK3S,MAAMwmB,QAAQ9gB,QAAQuP,EAAMlQ,MAAQ,QAQjD4N,EAAKsB,gBAdwB,wBAAAyB,EAAA/O,SAAA8O,MA3CjB9C,EA4DdyC,cAAgB,SAACC,GACV1C,EAAK3S,MAAMwmB,QAAQ9gB,UACtBiN,EAAK3S,MAAMwmB,QAAQ9gB,QAAU,IAE/BiN,EAAK3S,MAAMwmB,QAAQ9gB,QAAQ2P,GAAY1C,EAAK3S,MAAMwmB,QAAQ9gB,QAAQ2P,GAAY1C,EAAK3S,MAAMwmB,QAAQ9gB,QAAQ2P,GAAY,GACrH1C,EAAKsB,iBAjEOtB,EAmEd2C,uBAAyB,SAACvS,EAAKgC,EAAMhK,GACnC4X,EAAK3S,MAAMwmB,QAAQ9gB,QAAQX,GAAQhK,EACnC4X,EAAKsB,iBArEOtB,EAuEd4C,uBAvEc,eAAAoJ,EAAApf,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAuEW,SAAA8Q,EAAOjS,GAAP,OAAAwK,GAAAtM,EAAAoD,KAAA,SAAA6Q,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA1Q,MAAA,cAChBmM,EAAK3S,MAAMwmB,QAAQ9gB,QAAQX,GAClC4N,EAAKsB,gBAFkB,wBAAAiD,EAAAvQ,SAAAqQ,MAvEX,gBAAA4H,GAAA,OAAAD,EAAA9X,MAAAvQ,KAAA8K,YAAA,GAAAuR,EA4EdiD,iBAAmB,SAACC,GAElBlD,EAAK3S,MAAMwmB,QAAQ1Q,KAAOD,EAC1BlD,EAAKsB,iBA/EOtB,EAkFdoD,qBAAuB,SAACC,GACtBrD,EAAKyC,cAAcY,EAAM7a,KAAK6E,MAAMiW,WAnFxBtD,EAsFduD,gBAAkB,WAChB,IAGMC,EAHexD,EAAK7S,MAAMyU,wBAAwB6B,OAAO,SAAAjb,GAC7D,MAAmB,WAAZA,EAAK2J,KAEiBqD,IAAI,SAAChN,EAAM4H,GACxC,OACEgE,EAAA9D,EAAAC,cAACmT,GAAA,EAAKC,KAAN,CAAWvT,IAAKA,GAAM5H,EAAK4J,QAG/B,OACEgC,EAAA9D,EAAAC,cAACmT,GAAA,EAAD,CAAM3N,QAASiK,EAAKoD,sBACjBI,IAjGOxD,EAsGdsB,cAAgB,WACdtB,EAAK3S,MAAM0C,SAASiQ,EAAK3S,MAAMwmB,UAvGnB7T,EA0Gd6D,eAAiB,WAEf,IAAIC,EAAc,GACd/B,EAAE,EACN,GAAI/B,EAAK3S,MAAMwmB,QACb,IAAK,IAAI9P,KAAc/D,EAAK3S,MAAMwmB,QAAQ9gB,QAAU,CAClD,IAAMvK,EAAO,CACX4J,KAAM2R,EACN3b,MAAO4X,EAAK3S,MAAMwmB,QAAQ9gB,QAAQgR,IAE9B3T,EAAM2R,IACZ+B,EAAY3U,KACViF,EAAA9D,EAAAC,cAACilB,GAAD,CACEplB,IAAKA,EACL6T,QAASzb,EAAK4J,KACdA,KAAM5J,EAAK4J,KACXhK,MAAOI,EAAKJ,MACZ4Z,YAAahC,EAAK7S,MAAM2U,gBAAgBtZ,EAAK4J,MAAO4N,EAAK7S,MAAM2U,gBAAgBtZ,EAAK4J,MAAM4P,YAAa,KAAMlQ,eAAgBkO,EAAK3S,MAAMyE,eACxIR,mBAAoB0O,EAAK3S,MAAMiE,mBAC/BvB,SAAUiQ,EAAK2C,uBACftF,SAAU2C,EAAK4C,uBACf6Q,YAAazT,EAAK3S,MAAMomB,eAKhC,OAAO3P,GApIK9D,EAwIdkE,qBAAuB,SAACnI,GACtBiE,EAAKpS,SAAS,CAACuW,8BAA+BpI,KAzIlCiE,EA6IdoE,8BA7IcxX,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA6IkB,SAAA4U,IAAA,IAAA7D,EAAA,OAAA1H,GAAAtM,EAAAoD,KAAA,SAAA0U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,QACxByQ,GAAW,IAAInT,MAAqBQ,cAAcqO,EAAK3S,MAAMiE,uBAKjE0O,EAAK3S,MAAMwmB,QAAQ1Q,KAAOmB,EAC1BtE,EAAK4E,KAAKC,WAAWC,WAAWC,OAAO/E,EAAK3S,MAAMwmB,QAAQ1Q,MAC1DnD,EAAKsB,iBARuB,wBAAA8G,EAAApU,SAAAmU,MA7IlBnI,EAyJdgF,iCAAmC,WACjCC,UAAUC,UAAUC,UAAUnF,EAAK7S,MAAMgX,+BACzCiB,KAAQ/d,QAAQ,wBAzJhB2Y,EAAK7S,MAAQ,CACXgX,8BAA+B,GAC/BvC,wBAAyB,GACzBE,gBAAiB,IALP9B,wEA8JL,IAAAK,EAAA1c,KACDkF,EACJuL,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAACklB,GAAD,CACE1lB,SAAUpM,KAAKugB,qBACfpS,eAAgBnO,KAAK0J,MAAMyE,eAC3BR,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BiY,kBAAmB5lB,KAAK0J,MAAMkc,kBAC9B4B,YAAaxnB,KAAK0J,MAAM8d,YACxBsI,YAAa9vB,KAAK0J,MAAMomB,YACxBG,YAAajwB,KAAK0J,MAAMumB,gBAK5BjwB,KAAKwJ,MAAMgX,8BAET/P,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,oBACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAM,YAAWoM,EAAA9D,EAAAC,cAAA,KAAGwF,QAASpS,KAAKqhB,kCAAmCrhB,KAAKwJ,MAAMgX,kCAIzF,MAKN,OACE/P,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,WACvB8E,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACiP,EAAA,EAAD,KACEpL,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,SAOFrL,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAAA,SACEgE,UAAU,qBACVkL,QAAQ,cAFV,WAQF9b,KAAKkgB,kBAETzP,EAAA9D,EAAAC,cAACgV,GAAA,EAAD,CAAUC,QAAS7hB,KAAK4f,mBACtBnP,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACNgS,KAAK,KACLjE,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,mBAHlB,eASFjF,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,SACN+N,QAAS,kBAAMsK,EAAK4B,8BAA6B,IACjDjI,KAAK,MAHP,wBAOA5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,OACN+N,QAAS,kBAAMsK,EAAK4B,8BAA6B,IACjDjI,KAAK,MAHP,wBAaRrW,KAAK0J,MAAMiE,mBAAmBE,YAE5B4C,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,QACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAAC+U,GAAA,EAAD,CAAMtL,KAAK,QAAQ1K,MAAM,QACvB8E,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,QACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CAAS5c,QAASA,EAASyG,MAAM,kCAAkCoW,QAAQ,SACzEtR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,YAAYgS,KAAK,MAA/B,6BAGJ5F,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GAAInkB,MAAO,CAACiV,UAAW,UAChCvR,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CAAQ/R,MAAM,UAAUgS,KAAK,KAAKjE,QAASpS,KAAKygB,+BAAhD,+BAGJhQ,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACqV,GAAA,EAAD,CACEC,IAAI,aACJzd,MAAQzE,KAAK0J,MAAMwmB,QAAQ1Q,KAAMxf,KAAK0J,MAAMwmB,QAAQ1Q,KAAO,GAC3D2C,IAAKA,KACLnK,IAAKA,GACL3U,MAAM,gCACNb,KAAK,OACL4f,QAAQ,EACRC,WAAW,EACXC,eAAe,EACflW,SAAUpM,KAAKsf,iBACfxR,OAAQ9N,KAAK4N,kBASzB,aA5RoBN,IAAMC,WAoShCgV,eAEJ,SAAAA,IAAc,IAAAzF,EAAA,OAAA7T,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAuiB,IACZzF,EAAA7T,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAsZ,GAAAlZ,KAAArJ,QAMFud,WAAa,KAPCT,EASdxT,kBAAoB,WAClBwT,EAAKS,WAAaT,EAAKpT,MAAMjF,OAVjBqY,EAadvT,mBAAqB,WACnBuT,EAAKS,WAAaT,EAAKpT,MAAMjF,OAdjBqY,EAiBdiV,gBAAkB,WAChB,IAAIC,EAAe,KAEnB,GAAIlV,EAAKS,YAAcT,EAAKS,WAAW+T,WAAW,aAAc,CAE9D,IAAMC,EAAYzU,EAAKS,WAAWiU,MAAM,EAAE1U,EAAKS,WAAWpY,OAAO,GAE3DssB,EAAO1Q,KAAEoH,IAAIrL,EAAKpT,MAAMomB,YAAayB,GACvCE,IACFO,EACEvhB,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAKnF,MAAO,CAAE2kB,YAAa,WAAaD,IAI9C,OAAOO,GA/BKlV,EAkCd0F,iBAAmB,SAAC9C,GAElB5C,EAAKpT,MAAM0C,SAAS0Q,EAAKpT,MAAM4W,QAASZ,EAAMtM,OAAO3O,MAAOqY,EAAKpT,MAAMjF,QApC3DqY,EAsCd3E,kBAAoB,SAACuH,GACnB5C,EAAKS,WAAamC,EAAMtM,OAAO3O,MAG/BqY,EAAKpT,MAAM0C,SAAS0Q,EAAKpT,MAAM4W,QAASxD,EAAKpT,MAAM+E,KAAMqO,EAAKS,aA1ClDT,EA6CdrD,aAAe,WACbqD,EAAKpT,MAAMgQ,SAASoD,EAAKpT,MAAM4W,UA5C/BxD,EAAKtT,MAAQ,CACXiF,KAAM,GACNhK,MAAO,IAJGqY,wEAmDZ,OACErM,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,OAAOqhB,OAAQ,IAC5BxhB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAACiM,GAAA,EAAD,CAAS4J,UAAU,UAAU9W,MAAO3L,KAAK0J,MAAM2U,aAC7C5N,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACE/H,UAAU,2BACVxD,YAAY,OACZhC,KAAK,OACLsX,aAAc1iB,KAAK0J,MAAM+E,KACzBhK,MAAOzE,KAAK0J,MAAM+E,KAClBrC,SAAUpM,KAAKwiB,iBACf5W,UAAU,MAKhB6E,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACE/H,UAAU,2BACVxD,YAAY,QACZhC,KAAK,OACLsX,aAAc1iB,KAAK0J,MAAMjF,MACzBA,MAAOzE,KAAK0J,MAAMjF,MAClB2H,SAAUpM,KAAKmY,kBACfvM,UAAU,IAEX5L,KAAK+xB,mBAERthB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,SAAS/H,MAAM,UAAU6uB,aAAa,UAC/CzlB,IAAKzM,KAAK0J,MAAM+E,KAChB2D,QAASpS,KAAKyZ,yBArFSnM,IAAMC,WAkK1B4kB,eAjEb,SAAAA,IAAc,IAAAhV,EAAA,OAAAlU,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAmyB,IACZhV,EAAAlU,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAkpB,GAAA9oB,KAAArJ,QAcFoyB,oBAAsB,WAOpBjV,EAAKzT,MAAM0C,SAAS+Q,EAAKzT,MAAMwmB,UApB/B/S,EAAK3T,MAAQ,GAFD2T,wEA0BZ,OACE1M,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAA,WACE6D,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,QACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KAEE5wB,KAAK0J,MAAMkT,SAETnM,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAACylB,GAAD,CACEnC,QAASlwB,KAAK0J,MAAMwmB,QACpBJ,YAAa9vB,KAAK0J,MAAMomB,YACxB1jB,SAAUpM,KAAKoyB,oBACfzkB,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,iBAE/BsC,EAAA9D,EAAAC,cAAC0lB,GAAD,CACEpC,QAASlwB,KAAK0J,MAAMwmB,QACpBJ,YAAa9vB,KAAK0J,MAAMomB,YACxBG,YAAajwB,KAAK0J,MAAMumB,YACxB7jB,SAAUpM,KAAKoyB,oBACfzkB,mBAAoB3N,KAAK0J,MAAMiE,mBAC/BQ,eAAkBnO,KAAK0J,MAAMyE,eAC7ByX,kBAAmB5lB,KAAK0J,MAAMkc,kBAC9B4B,YAAaxnB,KAAK0J,MAAM8d,eAI1B,gBAxDela,IAAMC,WCrwB3B5E,GAAWD,KAAXC,OACA4pB,GAASC,KAATD,KACAE,GAAYC,KAAZD,QAGFE,8MAEJnpB,MAAQ,CACNopB,4BAA4B,EAC5BC,kBAAmB,MAGrBC,kBAAoB,SAACC,GACnB/pB,EAAKU,MAAMgQ,SAASqZ,MAGtBC,cAAgB,WACd,IAAIC,EAAa,GADG3oB,EAAA,SAGXyoB,GACPE,EAAWznB,KACTiF,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAACsmB,GAAA,EAAalT,KAAd,CAAmBpb,MAAOmuB,GACxBtiB,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAKsB,OAAQ,GACXxhB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACElU,MAAOuE,EAAKU,MAAMypB,OAAOJ,GACzB3mB,SAAU,SAACqJ,GAAD,OAAOzM,EAAKU,MAAM0C,SAAS2mB,EAAgBtd,EAAErC,OAAO3O,WAGlEgM,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAM7F,IAAKsmB,EAAgB3nB,KAAK,SAAS/H,MAAM,SAC7C+O,QAAU,kBAAMpJ,EAAK8pB,kBAAkBC,YAbnD,IAAK,IAAIA,KAAkB/pB,EAAKU,MAAMypB,OAAQ7oB,EAArCyoB,GAsBT,OAAOE,KAGTG,oBAAsB,SAACL,GAEjB/pB,EAAKU,MAAMypB,OAAOE,eAAeN,GACnCtR,KAAQ+M,MAAM,CAAEtpB,QAAS,sCAAuCuH,IAAK,uBAAwB2e,SAAU,KAGvGpiB,EAAKU,MAAM0C,SAAS2mB,EAAgB,IACpC/pB,EAAKQ,MAAMqpB,kBAAoB,6EAKzB,IAAAplB,EAAAzN,KACFszB,EACJ7iB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,mBACZhC,KAAK,OACL3G,MAAOzE,KAAKwJ,MAAMqpB,kBAClBzmB,SAAU,SAACqJ,GAAQhI,EAAKxD,SAAS,CAAC4oB,kBAAmBpd,EAAErC,OAAO3O,WAEhEgM,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,kBACVvM,MAAM,UACN8O,KAAK,SACLf,QAAU,WACR3E,EAAK2lB,oBAAoB3lB,EAAKjE,MAAMqpB,mBACpCplB,EAAKxD,SAAS,CAAC2oB,4BAA4B,KAE7Cvc,KAAK,MART,QAeF,OACE5F,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAKsB,OAAQ,IACXxhB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,mBACdH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CACE5c,QAASouB,EACT3nB,MAAM,mBACNoW,QAAQ,QACRmM,QAASluB,KAAKwJ,MAAMopB,2BACpBW,gBAAkB,SAACrF,GAAD,OAAazgB,EAAKxD,SAAS,CAAC2oB,2BAA4B1E,MAE1Ezd,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,yBACVvM,MAAM,UACNgS,KAAK,MAHT,oBASF5F,EAAA9D,EAAAC,cAAC6H,EAAA,EAAD,KACEhE,EAAA9D,EAAAC,cAACsmB,GAAA,EAAD,CAAcvnB,MAAM,eAAe6nB,UAAQ,GACxCxzB,KAAKgzB,8BAnGE1lB,IAAMC,WAiH1BkY,eAEJ,SAAAA,IAAc,IAAApJ,EAAA,OAAApT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAylB,IACZpJ,EAAApT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAwc,GAAApc,KAAArJ,QAKF0lB,gBAAkB,GANJrJ,EAQdsJ,mBAAqB,WAEnB,GADAtJ,EAAKqJ,gBAAkB,GACpBrJ,EAAK3S,MAAMkc,kBAAkBE,MAAO,CAErC,IAAM,IAAID,KAAWxJ,EAAK3S,MAAMkc,kBAAkBE,MAChD,IAAM,IAAIC,KAAa1J,EAAK3S,MAAMkc,kBAAkBE,MAAMD,GAAU,CAClE,IAAIvF,EAAUyF,EAAY,IAAMF,EAChC,OAAOE,GACL,IAAK,MACL,IAAK,OACH1J,EAAKqJ,gBAAgBla,KAAKiF,EAAA9D,EAAAC,cAAC6mB,GAAD,CAAQhnB,IAAK6T,EAAS7b,MAAO6b,GAAUA,MAM3E,OAAOjE,EAAKqJ,iBAxBArJ,EA2Bd4J,iBAAmB,WAEjB,OAAG5J,EAAK3S,MAAMjF,MACL4X,EAAK3S,MAAMjF,MAAMif,OAAS,IAAMrH,EAAK3S,MAAMjF,MAAMwN,KAEjD,MA9BToK,EAAK7S,MAAQ,CACXyiB,aAAc,MAHJ5P,wEAqCL,IAAAK,EAAA1c,KAcP,OACEyQ,EAAA9D,EAAAC,cAAC8L,GAAA,EAAD,CAAQtM,SAboB,SAAC8Z,GAC7B,IAAMwN,EAAcxN,EAAS9b,MAAM,KAC7BwS,EAAW,CACf8G,OAAQgQ,EAAY,GACpBzhB,KAAMyhB,EAAY,IAEpBhX,EAAKlT,MAAMyiB,aAAerP,EAE1BF,EAAKhT,MAAMM,SAAS4S,IAMlBhR,WAAW5L,KAAK0J,MAAMjF,MACtBsI,MAAO,CAAErM,MAAO,KAChB0M,YAAY,oBACZ3I,MAAOzE,KAAKimB,oBAEbjmB,KAAK2lB,6BA5DmBrY,IAAMC,WAkE/BomB,eAEJ,SAAAA,IAAc,IAAA7W,EAAA,OAAA7T,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA2zB,IACZ7W,EAAA7T,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA0qB,GAAAtqB,KAAArJ,QAcFsJ,kBAfcL,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAeM,SAAAC,IAAA,IAAA+V,EAAA4B,EAAAxD,EAAA,OAAA/K,GAAAtM,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACc4M,EAAK4K,gBADnB,cACZ9B,EADY5V,EAAAG,KAAAH,EAAAE,KAAA,EAEQ4M,EAAK6K,iBAFb,OAEZH,EAFYxX,EAAAG,KAIA,GACd6T,EAAmB,KACnBlH,EAAKpT,MAAMwmB,SAAWpT,EAAKpT,MAAMwmB,QAAQE,eAAiBtT,EAAKpT,MAAMwmB,QAAQxM,SAC/EM,EAAmB,CACjB/R,KAAM6K,EAAKpT,MAAMwmB,QAAQE,cACzB1M,OAAQ5G,EAAKpT,MAAMwmB,QAAQxM,SAI/B5G,EAAK7S,SAAS,CAAC+Z,mBAAkB4B,oBAAmB4B,gBAblC,yBAAAxX,EAAAK,SAAAR,MAfNiN,EA+BdgL,cAAgB,WACd,OAAOhL,EAAKtT,MAAMgT,YAhCNM,EAmCdiL,wBAA0B,WACxB,OAAOjL,EAAKtT,MAAMsd,sBApCNhK,EAuCd8W,WAAa,WACX,OAAO9W,EAAKtT,MAAM0mB,SAxCNpT,EA+CdmL,QAAU,WACR,IAAMhB,EAAO,CACX5I,YAAavB,EAAKtT,MAAM6U,YACxB7B,WAAY,CACV0K,IAAA,GAAA/a,OAAAlD,OAAA+Q,GAAA,EAAA/Q,CAAW6T,EAAKtT,MAAMgT,YAAtBvT,OAAA+Q,GAAA,EAAA/Q,CAAqC6T,EAAKtT,MAAMsd,wBAElDoJ,QAASpT,EAAKtT,MAAM0mB,SAEtB,OAAOjW,KAAKC,UAAU+M,EAAM,KAAM,IAvDtBnK,EA0DdI,uBAAyB,WACvBJ,EAAKkI,eA3DOlI,EA+DdsV,oBAAsB,SAAClC,GACrBpT,EAAK7S,SAAS,CAACimB,YACfpT,EAAKpT,MAAM0C,SAAS8jB,IAjERpT,EAoEd4K,cApEcze,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAoEE,SAAAyK,IAAA,IAAA+K,EAAA,OAAAnM,GAAAtM,EAAAoD,KAAA,SAAAwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,cAAAqK,EAAArK,KAAA,EACSgY,KAAMC,IAAI,2DADnB,cACR/C,EADQ7K,EAAApK,KAAAoK,EAAAnK,OAAA,SAGPgV,EAAStgB,MAHF,wBAAAyV,EAAAlK,SAAAgK,MApEFyC,EA2Ed6K,eA3Ec1e,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KA2EG,SAAA2O,IAAA,IAAA6G,EAAA,OAAAnM,GAAAtM,EAAAoD,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cAAAwO,EAAAxO,KAAA,EACQgY,KAAMC,IAAI,6DADlB,cACT/C,EADS1G,EAAAvO,KAAAuO,EAAAtO,OAAA,SAERgV,EAAStgB,MAFD,wBAAA4Z,EAAArO,SAAAkO,MA3EHzB,EAiFd+L,sBAAwB,SAACjM,GACvB,IAAMsT,EAAUpT,EAAKpT,MAAMwmB,QAC3BA,EAAQE,cAAgBxT,EAAS3K,KACjCie,EAAQje,KAAO2K,EAAS3K,KACxBie,EAAQxM,OAAS9G,EAAS8G,OAC1B5G,EAAKpT,MAAM0C,SAAS8jB,GACpBpT,EAAK7S,SAAS,CAAC+Z,iBAAkBpH,EAAUsT,aAvF/BpT,EA0FdgM,sBAAwB,WACtB,OAAIhM,EAAKtT,MAAMwa,kBAAoBlH,EAAKtT,MAAMoc,mBAAqB9I,EAAKtT,MAAMwa,iBAAiB/R,MAAQ6K,EAAKtT,MAAMwa,iBAAiBN,OAC1H5G,EAAKtT,MAAMoc,kBAAkBE,MAAMhJ,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAEnG,MA9FK5G,EAgGdiM,kBAAoB,WAClB,IAAIC,EAAa,GAIjB,OAHIlM,EAAKtT,MAAMwa,kBAAoBlH,EAAKtT,MAAMoc,mBAAqB9I,EAAKtT,MAAMwa,iBAAiB/R,MAAQ6K,EAAKtT,MAAMwa,iBAAiBN,SACjIsF,EAAalM,EAAKtT,MAAMoc,kBAAkBE,MAAMhJ,EAAKtT,MAAMwa,iBAAiB/R,MAAM1D,YAE7Eya,GArGKlM,EAwGdmM,kBAAoB,WAChB,IAAIC,EAAc,KAClB,IAEIA,EADqB,eAApBpM,EAAKpT,MAAMlH,KACEsa,EAAKtT,MAAMge,YAAY1K,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAArF,cAEA5G,EAAKtT,MAAMge,YAAY1K,EAAKtT,MAAMwa,iBAAiB/R,MAAM6K,EAAKtT,MAAMwa,iBAAiBN,QAArF,gBAEhB,MAAM3V,IAER,OAAOmb,GAlHGpM,EAqHdqM,0BAA4B,WACxB,IACE,IAAMD,EAAcpM,EAAKmM,oBACzB,OAAOnM,EAAKtT,MAAMoc,kBAAkBE,MAAMoD,EAAYjX,MAAM1D,WAC5D,MAAMR,GACN,MAAO,KA1HC+O,EA+HdsM,sBAAwB,WACtB,GAAItM,EAAKtT,MAAMwa,iBACb,IACE,IAAMkF,EAAcpM,EAAKmM,oBACzB,OAAOnM,EAAKtT,MAAMoc,kBAAkBE,MAAMoD,EAAYjX,MAAMiX,EAAYxF,QACxE,MAAM3V,GACN,OAAO,KAIX,OAAO,MAzIK+O,EA4Id0M,wBAA0B,SAACpR,GACzB0E,EAAK7S,SAAS,CAACoU,YAAajG,KA3I5B0E,EAAKtT,MAAQ,CACXigB,SAAU,GACVC,QAAS,GACTrL,YAAa,GACb6R,QAAS,GACT1T,WAAY,GACZsK,qBAAsB,GACtBlB,kBAAmB,GACnB5B,iBAAkB,KAClBwD,YAAa,IAXH1K,wEAiJL,IAAAK,EAAAnd,KACP,OACEyQ,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACID,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACLzgB,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,sBACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACinB,GAAD,CAAkBpvB,MAAOzE,KAAKwJ,MAAMwa,iBAAkB4B,kBAAmB5lB,KAAKwJ,MAAMoc,kBAAmB5b,SAAUhK,KAAK6oB,yBAExHpY,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,GACTzgB,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,0BACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,SACNgS,KAAK,KACLjE,QAAS,WAAO+K,EAAKzT,MAAMgQ,SAASyD,EAAKzT,MAAMwmB,QAAQzkB,MAJzD,cAYRgF,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,KACEngB,EAAA9D,EAAAC,cAAC6H,EAAA,EAAD,KACEhE,EAAA9D,EAAAC,cAACknB,GAAD,CACE5D,QAASlwB,KAAK0J,MAAMwmB,QACpBD,YAAajwB,KAAK0J,MAAMumB,YACxBH,YAAa9vB,KAAK0J,MAAMomB,YACxB1jB,SAAUpM,KAAKoyB,oBACfxV,SAAU5c,KAAKwJ,MAAMwa,iBACrBrW,mBAAoB3N,KAAK8oB,wBACzB3a,eAAgBnO,KAAK+oB,oBACrBnD,kBAAmB5lB,KAAKwJ,MAAMoc,kBAC9B4B,YAAaxnB,KAAKwJ,MAAMge,2BAvLnBla,IAAMC,WAyuBtBwmB,eApiBb,SAAAA,IAAc,IAAAxO,EAAA,OAAAtc,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAA+zB,IACZxO,EAAAtc,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAA8qB,GAAA1qB,KAAArJ,QAaFg0B,OAAS,KAdKzO,EAgBd0O,qBAAuB,WACrB1O,EAAKyO,OAAOE,cAjBA3O,EAoBdjc,kBAAoB,WAGlBic,EAAKyO,OAASG,KAAe,yBAC7B5O,EAAKyO,OAAOI,GAAG,mBAAoB7O,EAAK8O,yBAxB5B9O,EA2Bd+O,mBAAqB,SAACC,EAAazE,GACjC,IAAI0E,EAEJ,GAA2B,kBAAhBD,EACTC,EAAeD,MACV,IAA2B,kBAAhBA,EAGhB,OAAOA,EAFPC,EAAeva,KAAKC,UAAUqa,GAMhC,IAAME,EAAeD,EAAaE,MAAM,gBAiBxC,OAhBID,GACFA,EAAaptB,QAAQ,SAAAstB,GAGnB,OADiBA,EAAQvqB,MAAM,KACd,IACf,IAAK,WACL,QACE,IAAMmnB,EAAYoD,EAAQnD,MAAM,EAAEmD,EAAQxvB,OAAO,GAC3CssB,EAAO1Q,KAAEoH,IAAI5C,EAAK/b,MAAMorB,SAAS9E,YAAayB,GAChDE,IACF+C,EAAeA,EAAazD,QAAQ4D,EAASlD,OAM5B,kBAAhB8C,EACFta,KAAKO,MAAMga,GAEXA,GA3DGjP,EA+DdsP,yBAA2B,WACzB,OAAItP,EAAK/b,MAAMorB,SAASE,SACfvP,EAAK/b,MAAMorB,SAASE,SAASjjB,IAAI,SAAAhN,GACtC,OACE4L,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IAAM3L,EAAK/b,MAAMorB,SAASE,SAAS3vB,OAASogB,EAAK/b,MAAMorB,SAASE,SAAS3vB,OAAS,KAEzFN,EAAKkwB,QAAiC,YAAtBlwB,EAAKkwB,OAAOvrB,OAA6C,YAAtB3E,EAAKkwB,OAAOvrB,MAG7DiH,EAAA9D,EAAAC,cAACooB,GAAA,EAAD,CAAMC,iBAAiB,KACrBxkB,EAAA9D,EAAAC,cAAC6lB,GAAD,CAASyC,IAAI,UAAUzoB,IAAI,KAEvB5H,EAAKuK,QAEHqB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAA,oBACA6D,EAAA9D,EAAAC,cAAA,WAAMqN,KAAKC,UAAUqL,EAAK+O,mBAAmBzvB,EAAKuK,SAAS,KAAK,KAGhE,KAGFvK,EAAK2a,KAEH/O,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAA,kBACA6D,EAAA9D,EAAAC,cAAA,WAAMqN,KAAKC,UAAUqL,EAAK+O,mBAAmBzvB,EAAK2a,MAAM,KAAK,KAG7D,MAGN/O,EAAA9D,EAAAC,cAAC6lB,GAAD,CAASyC,IAAI,SAASzoB,IAAI,KACxBgE,EAAA9D,EAAAC,cAACuoB,GAAD,CACEjF,QAASrrB,EACTorB,YAAa1K,EAAK/b,MAAMorB,SAASE,SACjChF,YAAavK,EAAK/b,MAAMorB,SAAS9E,YACjC1jB,SAAUmZ,EAAK6M,oBACf1Y,SAAU6L,EAAK6P,uBAIjBvwB,EAAKkwB,QAAUlwB,EAAKkwB,OAAO3P,SAEzB3U,EAAA9D,EAAAC,cAAC6lB,GAAD,CAASyC,IAAI,WAAWzoB,IAAI,KAExB5H,EAAKkwB,OAAO3P,SAAShW,QAEnBqB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,oBACA6D,EAAA9D,EAAAC,cAAA,WAAMqN,KAAKC,UAAUrV,EAAKkwB,OAAO3P,SAAShW,QAAQ,KAAK,KAGzD,KAGFvK,EAAKkwB,OAAO3P,SAAS5F,KAEnB/O,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAAA,kBACA6D,EAAA9D,EAAAC,cAAA,WAAMqN,KAAKC,UAAUrV,EAAKkwB,OAAO3P,SAAS5F,KAAK,KAAK,KAGtD,MAIN,MA5DL/O,EAAA9D,EAAAC,cAACyoB,GAAA,EAAD,CAAUC,UAAY,CAACpL,KAAM,IAAMqL,QAAM,OAsE7C,MA5IGhQ,EAgJdiQ,aAAe,WACb,GAAIjQ,EAAK/b,MAAMorB,SAASE,SAAU,CAChC,IAAMW,EAAYlQ,EAAK/b,MAAMorB,SAASE,SAASjjB,IAAI,SAAAhN,GACjD,OACE4L,EAAA9D,EAAAC,cAAC2lB,GAAD,CAAMwC,OAAQlwB,EAAKkwB,OAAQlwB,EAAKkwB,OAAOvrB,MAAQ,KAAMmC,MAAO9G,EAAK6e,OAAQnR,SAAU1N,EAAKurB,cAAe/R,YAAaxZ,EAAKwZ,gBAGvHqX,EAAUD,EAAUtwB,OAAS,EAAuB,EAAnBswB,EAAUtwB,OAAa,GAC9D,OACEsL,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAMwE,GACTjlB,EAAA9D,EAAAC,cAAC+oB,GAAA,EAAD,CAAOC,SAAU,EAAGxqB,KAAK,aAAaiL,KAAK,WACxCof,KAOT,OAAO,MAnKGlQ,EAuKd6M,oBAAsB,SAAClC,GACrB3K,EAAKtb,SAAS,CAACimB,QAASA,KAxKZ3K,EA2KdsQ,wBAA0B,SAACpnB,EAAMhK,GAC/B8gB,EAAK/b,MAAMorB,SAAS9E,YAAYrhB,GAAQhK,EACxC8gB,EAAKP,eA7KOO,EAgLduQ,wBAA0B,SAACrnB,UAClB8W,EAAK/b,MAAMorB,SAAS9E,YAAYrhB,GACvC8W,EAAKP,eAlLOO,EAqLdwQ,yBAA2B,SAAC1X,GAE1B,IAAI2X,GAASzQ,EAAK/b,MAAMorB,SAASE,SAASnI,OAAO,SAASsJ,EAAG7X,GAAI,OAAOA,EAAE3S,GAAKwqB,EAAI7X,EAAE3S,GAAKwqB,GAAK,GAE/F1Q,EAAK/b,MAAMorB,SAASE,SAAStpB,KAAK,CAAEC,GAAIuqB,EAAM,EAAG3X,gBACjDkH,EAAKP,eA1LOO,EA6Ld6P,oBAAsB,SAACjF,GACrB,IAAM+F,EAAc3Q,EAAK/b,MAAMorB,SAASE,SAASqB,UAAU,SAAAtxB,GAAI,OAAIA,EAAK4G,IAAM0kB,IAC9E5K,EAAK/b,MAAMorB,SAASE,SAASrY,OAAOyZ,EAAY,GAChD3Q,EAAKP,eAhMOO,EAmMd8O,uBAAyB,SAAC+B,GAExB,IAAIlG,EAAU3K,EAAK/b,MAAMorB,SAASE,SAAStqB,KAAK,SAAA3F,GAAI,OAAIA,EAAK4G,KAAO2qB,EAAS3qB,KAC7E,GAAIykB,EAAQ6E,OAAQ,CAClB,GAAwB,YAApBqB,EAASrB,OACXrmB,QAAQC,IAAIuhB,GACZA,EAAQ6E,OAAOvrB,MAAQ,SACvB0mB,EAAQ6E,OAAO3P,SAAWgR,EAAShR,cAC9B,GAAwB,UAApBgR,EAASrB,OAAoB,CAItC,IAAK,IAAI9yB,KAHTiuB,EAAQ6E,OAAOvrB,MAAQ,QACvB0mB,EAAQ6E,OAAO3P,SAAW,CAAE5F,KAAM4W,EAAS5H,OAE7BjJ,EAAK/b,MAAMorB,SAASE,SAC3BvP,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,SACnCxP,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,OAAS,IAEU,YAAjDxP,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,OAAOvrB,QACzC+b,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,OAAOvrB,MAAQ,OAC/C+b,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,OAAO3P,SAAW,MAItD3D,KAAQ+M,MAAM,CAAEtpB,QAAS,mBAAoBuH,IAAK,uBAAwB2e,SAAU,IAEtF7F,EAAKP,gBA3NKO,EAgOd8Q,gBAhOcptB,OAAA+P,GAAA,EAAA/P,CAAAgQ,GAAAtM,EAAAiD,KAgOI,SAAAuP,IAAA,IAAAmX,EAAAr0B,EAAA,OAAAgX,GAAAtM,EAAAoD,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cAEVomB,EAAoB11B,KAAKyK,SAASC,SAAS,IAAIC,UAAU,GAC/DkW,KAAQwJ,QAAQ,CAAE/lB,QAAS,kCAAmCuH,IAAK,yBAHnD2S,EAAAlP,KAAA,EAIVgY,KAAMqO,KAAK,+CAAiDD,EAAmB/Q,EAAK/b,MAAMorB,SAAU,CAAExlB,QAAS,CAAEie,eAAgB,sBAJvH,OAQhB,IAASprB,KAHTwf,KAAQ/d,QAAQ,CAAEwB,QAAS,iBAAkBuH,IAAK,uBAAwB2e,SAAU,IAGtE7F,EAAK/b,MAAMorB,SAASE,SAC3BvP,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,SACnCxP,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,OAAS,IAE3CxP,EAAK/b,MAAMorB,SAASE,SAAS7yB,GAAG8yB,OAAOvrB,MAAQ,UAEjD+b,EAAKP,cAdW,wBAAA5F,EAAA/O,SAAA8O,MAhOJoG,EA2QdiR,gBAAkB,SAAC5B,GACjB,GAAIA,EAASE,SAAU,KACfA,EAAgCF,EAAhCE,SAAa2B,EADExtB,OAAAytB,GAAA,EAAAztB,CACiB2rB,EADjB,cAEf+B,EAAc7B,EAASjjB,IAAI,SAAAhN,GACGA,EAA1BkwB,OACR,OAFuC9rB,OAAAytB,GAAA,EAAAztB,CACLpE,EADK,cAIzC,OAAOoE,OAAAgU,GAAA,EAAAhU,CAAA,GAAKwtB,EAAZ,CAA4B3B,SAAU6B,IAEtC,OAAO,MApRGpR,EAwRdqR,6BAA+B,SAACC,GAC9BtR,EAAKtb,SAAS,CAAC2qB,SAAU,CACvBnmB,KAAMooB,EACN/G,YAAa,GACbgF,SAAU,OA5RAvP,EAgSduR,SAAW,SAAC5xB,EAASqoB,EAAUwJ,GAC7B,IAAIpqB,EAAIqqB,SAASpqB,cAAc,KAC3BqqB,EAAO,IAAIC,KAAK,CAAChyB,GAAU,CAACkG,KAAM2rB,IACtCpqB,EAAEwG,KAAOgkB,IAAIC,gBAAgBH,GAC7BtqB,EAAEmqB,SAAWvJ,EACb5gB,EAAE0qB,SArSU9R,EAwSd+R,wBAA0B,SAAC/J,GACzBhI,EAAKuR,SAAS7c,KAAKC,UAAUqL,EAAKiR,gBAAgBjR,EAAK/b,MAAMorB,UAAW,KAAM,GAAIrH,EAAU,eAzShFhI,EA4SdgS,iBAAmB,SAACC,GAClB/V,KAAQwJ,QAAQ,CAAE/lB,QAAS,sBAAuBuH,IAAK,uBACvD,IAAIgrB,EAAW,IAAIC,WACnBD,EAASE,OAAS,SAACliB,GACjB,IAAIvQ,EAAUuQ,EAAErC,OAAOwkB,OACvB,IACE,IAAIC,EAAS5d,KAAKO,MAAMtV,GACxBqgB,EAAKtb,SAAS,CAAC2qB,SAAUiD,IACzBpW,KAAQ/d,QAAQ,CAAEwB,QAAS,cAAeuH,IAAK,qBAAsB2e,SAAU,IAC/E,MAAOrd,GACP0T,KAAQ+M,MAAM,CAAEtpB,QAAS6I,EAAI0T,QAAShV,IAAK,qBAAsB2e,SAAU,MAG/EqM,EAASK,WAAWN,IAvTpBjS,EAAK/b,MAAQ,CACX0mB,QAAS,GACT0E,SAAU,GACVmD,4BAA4B,EAC5BC,sBAAuB,GACvBC,gBAAiB,GACjBC,gCAAgC,EAChCC,qBAAsB,GACtBC,2BAA2B,GAVjB7S,wEA6TL,IAAA8S,EAAAr4B,KAEDs4B,EACJ7nB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,oBACZhC,KAAK,OACL3G,MAAOzE,KAAKwJ,MAAMwuB,sBAClB5rB,SAAU,SAACqJ,GAAQ4iB,EAAKpuB,SAAS,CAAC+tB,sBAAuBviB,EAAErC,OAAO3O,WAEpEgM,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,kBACVvM,MAAM,UACN8O,KAAK,SACLf,QAAU,WACRimB,EAAKtC,yBAAyBsC,EAAK7uB,MAAMwuB,uBACzCK,EAAKpuB,SAAS,CAAC8tB,4BAA4B,KAE7C1hB,KAAK,MART,QAeIkiB,EACJ9nB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,gBACZhC,KAAK,OACL3G,MAAOzE,KAAKwJ,MAAMyuB,gBAClB7rB,SAAU,SAACqJ,GAAQ4iB,EAAKpuB,SAAS,CAACguB,gBAAiBxiB,EAAErC,OAAO3O,WAE9DgM,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,kBACVvM,MAAM,UACN8O,KAAK,SACLf,QAAU,WACRimB,EAAKzB,6BAA6ByB,EAAK7uB,MAAMyuB,iBAC7CI,EAAKpuB,SAAS,CAACiuB,gCAAgC,KAEjD7hB,KAAK,MART,WAeImiB,EACJ/nB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC+L,GAAA,EAAD,CACEvL,YAAY,YACZhC,KAAK,OACL3G,MAAOzE,KAAKwJ,MAAM2uB,qBAClB/rB,SAAU,SAACqJ,GAAQ4iB,EAAKpuB,SAAS,CAACkuB,qBAAsB1iB,EAAErC,OAAO3O,WAEnEgM,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,kBACVvM,MAAM,UACN8O,KAAK,SACLf,QAAU,WACRimB,EAAKf,wBAAwBe,EAAK7uB,MAAM2uB,sBACxCE,EAAKpuB,SAAS,CAACmuB,2BAA2B,KAE5C/hB,KAAK,MART,WAeF,OACE5F,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAACkhB,GAAA,EAAD,CACEC,UAAQ,EACRC,gBAAc,EACdC,aAAW,EACXtiB,MAAM,WACNiF,UAAU,WACVsd,UAASluB,KAAKwJ,MAAMivB,aACpBtK,OAAQ,KACRC,SAAU,WAAQiK,EAAKpuB,SAAS,CAACwuB,cAAc,MAE/ChoB,EAAA9D,EAAAC,cAAA,WAAMqN,KAAKC,UAAUla,KAAKw2B,gBAAgBx2B,KAAKwJ,MAAMorB,UAAW,KAAM,KAExEnkB,EAAA9D,EAAAC,cAACkJ,EAAD,MAEArF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChCN,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAAC8rB,GAAA,EAAD,CAAOC,UAAW,GAClBloB,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,wBACdH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAACgsB,GAAA,EAAD,CACEC,OAAS,QACTC,gBAAkB,EAClBC,aAAgB,SAAA9B,GAEd,OADAoB,EAAKd,iBAAiBN,IACf,IAGTxmB,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACE/R,MAAM,UACNgS,KAAK,KACLjE,QAAS,SAAAqD,GAAC,OAAIA,EAAEC,mBAHlB,oBASFjF,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,SACNgS,KAAK,KACLjE,QAASpS,KAAKq2B,iBAJhB,QAQA5lB,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CACElR,UAAU,cACV1L,QAASszB,EACT7sB,MAAM,yBACNoW,QAAQ,QACRmM,QAASluB,KAAKwJ,MAAM4uB,0BACpB7E,gBAAkB,SAACrF,GAAD,OAAamK,EAAKpuB,SAAS,CAACmuB,0BAA2BlK,MAEzEzd,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,yBACVvM,MAAM,UACNgS,KAAK,MAHT,SAQF5F,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,OACNgS,KAAK,KACLjE,QAAS,WAAQimB,EAAKpuB,SAAS,CAACwuB,cAAc,MAJhD,iBAQAhoB,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CACElR,UAAU,cACV1L,QAASqzB,EACT5sB,MAAM,gCACNoW,QAAQ,QACRmM,QAASluB,KAAKwJ,MAAM0uB,+BACpB3E,gBAAkB,SAACrF,GAAD,OAAamK,EAAKpuB,SAAS,CAACiuB,+BAAgChK,MAE9Ezd,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,yBACVvM,MAAM,UACNgS,KAAK,MAHT,sBAaV5F,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,KACElgB,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACTzgB,EAAA9D,EAAAC,cAACosB,GAAD,CAAa7F,OAAQnzB,KAAKwJ,MAAMorB,SAAS9E,YAAa1jB,SAAUpM,KAAK61B,wBAAyBnc,SAAU1Z,KAAK81B,4BAGjHrlB,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAK/f,UAAU,QACbH,EAAA9D,EAAAC,cAACgkB,GAAA,EAAD,CAAKM,KAAM,IACXzgB,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,uBACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,KACGjW,KAAKw1B,eACN/kB,EAAA9D,EAAAC,cAACkV,GAAA,EAAD,CACE5c,QAASozB,EACT3sB,MAAM,sCACNoW,QAAQ,QACRmM,QAASluB,KAAKwJ,MAAMuuB,2BACpBxE,gBAAkB,SAACrF,GAAD,OAAamK,EAAKpuB,SAAS,CAAC8tB,2BAA4B7J,MAE1Ezd,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACIxF,UAAU,yBACVvM,MAAM,UACNgS,KAAK,MAHT,qBASJ5F,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAAC+jB,GAAA,EAAD,CAAKsB,OAAQ,IACVjyB,KAAK60B,6CAlgBFvnB,IAAMC,uCCxY9B0rB,oLAEA,IAAMtqB,EAAM3O,KAAK0J,MAAMwvB,SACvB,OACEzoB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACC/B,EAAIwqB,eAEC1oB,EAAA9D,EAAAC,cAAA,WACE6D,EAAA9D,EAAAC,cAAA,WACA6D,EAAA9D,EAAAC,cAAA,OAAKG,MAAO,CAAEzL,gBAAiB,UAAWZ,MAAO,OAAQ2D,MAAO,OAAQmmB,SAAU,SAChF/Z,EAAA9D,EAAAC,cAAA,OAAKG,MAAO,CAAEzL,gBAAiB,UAAWZ,MAAO,OAAQ04B,WAAY,YAAa/0B,MAAO,aAEzFoM,EAAA9D,EAAAC,cAAA,OAAKG,MAAO,CAAEzG,QAAS,QAAS5F,MAAO,OAAQ24B,OAAQ,IAAKlsB,SAAU,SAAU9I,MAAO,YACpF4V,KAAKC,UAAUvL,EAAIwqB,eAAe,KAAK,MAKhDxqB,EAAI8S,gBAlBc6X,MAmGxBC,IAtDoBjsB,IAAMC,sBAwD9B,SAAAgsB,IAAc,IAAAld,EAAA,OAAApT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAu5B,IACZld,EAAApT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAswB,GAAAlwB,KAAArJ,QAKFw5B,aAAe,SAAC9Z,GACdA,EAAMwZ,SAASO,UAAY/Z,EAAMwZ,SAASO,SAC1Cpd,EAAK2I,eARO3I,EAWdqd,qBAAuB,WACnBrd,EAAKpS,SAAS,CAAC0vB,aAActd,EAAK7S,MAAMmwB,eAV1Ctd,EAAK7S,MAAQ,CACXmwB,aAAa,GAHHtd,wEAgBZ,IAAM1N,EAAM3O,KAAK0J,MAAMkwB,KAAK,GACtBn2B,EAAOzD,KAAK0J,MAAMjG,KACxB,OACEgN,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAACitB,GAAA,EAAS7Z,KAAV,CAAezZ,SAAS,SACtBkK,EAAA9D,EAAAC,cAAA,SAAI+B,EAAImrB,SACRrpB,EAAA9D,EAAAC,cAAA,WAAM6D,EAAA9D,EAAAC,cAACsF,GAAA,EAAD,CAAK7N,MAAOZ,EAAKs2B,UAAY,OAAS,UAAW3nB,QAASpS,KAAK05B,sBAAuBj2B,EAAKgL,MACjGgC,EAAA9D,EAAAC,cAAA,WAEE5M,KAAKwJ,MAAMmwB,YAETlpB,EAAA9D,EAAAC,cAACotB,GAAA,EAAD,CACEppB,UAAU,iCACV9L,KAAM9E,KAAK0J,MAAMkwB,KACjBK,OAAQhB,GACRiB,YAAY,WACZC,eAAgBn6B,KAAKw5B,cAErB/oB,EAAA9D,EAAAC,cAACotB,GAAA,EAAD,CAAQI,MAAM,UAAUzuB,MAAM,SAC9B8E,EAAA9D,EAAAC,cAACotB,GAAA,EAAD,CAAQI,MAAM,UAAUzuB,MAAM,YAC9B8E,EAAA9D,EAAAC,cAACotB,GAAA,EAAD,CAAQI,MAAM,YAAYzuB,MAAM,eAGlC,cAzCuB2B,IAAMC,YAiDnC8sB,eAYJ,SAAAA,IAAc,IAAA3d,EAAA,OAAAzT,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAq6B,IACZ3d,EAAAzT,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAoxB,GAAAhxB,KAAArJ,QAXFs6B,SAAY,CACVV,KAAM,GACNW,iBAAkB,GAClBC,iBAAkB,GAClBC,iBAAkB,KAClBC,SAAU,yBAKEhe,EAFdsX,OAAS,KAEKtX,EAKduX,qBAAuB,WACrBvX,EAAKsX,OAAOE,cANAxX,EA+Cdie,iBAAmB,WACjB,OAAOje,EAAKlT,MAAMgxB,iBAAiB3oB,IAAI,SAAAhN,GACrC,OAAIA,EAEA4L,EAAA9D,EAAAC,cAACguB,GAAD,CAAsBnuB,IAAK5H,EAAK4G,GAAIhI,KAAMoB,EAAM+0B,KAAMld,EAAKlT,MAAM+wB,iBAAiB11B,EAAK4G,MAIvFgF,EAAA9D,EAAAC,cAACitB,GAAA,EAAS7Z,KAAV,CAAe6a,IAAKpqB,EAAA9D,EAAAC,cAAC0F,GAAA,EAAD,CAAMlH,KAAK,iBAAiB2B,MAAO,CAAEyd,SAAU,UAAcnmB,MAAM,OAAMoM,EAAA9D,EAAAC,cAAA,WAAM6D,EAAA9D,EAAAC,cAAA,eAvD7F8P,EA8Ddoe,gBAAkB,WAChBpe,EAAKzS,SAASgQ,KAAKO,MAAMP,KAAKC,UAAUwC,EAAK4d,aA7D7C5d,EAAKlT,MAAQyQ,KAAKO,MAAMP,KAAKC,UAAUwC,EAAK4d,WAFhC5d,mFASM,IAAAI,EAAA9c,KACV06B,EAAa16B,KAAKwJ,MAAlBkxB,SACR16B,KAAKg0B,OAASG,KAAeuG,GAC7B16B,KAAKg0B,OAAOI,GAAG,SAAU,SAAA2G,GAKvB,GAHAje,EAAKtT,MAAMowB,KAAKpuB,KAAKuvB,IAGjBje,EAAKtT,MAAM+wB,iBAAiBlH,eAAe0H,EAAOC,UAAW,CAE/D,GADAle,EAAKtT,MAAM+wB,iBAAiBQ,EAAOC,UAAY,GAC1Cle,EAAKtT,MAAMixB,iBAET,CACL,IAAMQ,EAAiB,IAAIC,KAAKH,EAAOjB,SAAYhd,EAAKtT,MAAMixB,iBAC9D3d,EAAKtT,MAAMixB,iBAAmB,IAAIS,KAAKH,EAAOjB,SAC1CmB,EAAiB,KACnBne,EAAKtT,MAAMgxB,iBAAiBhvB,KAAK,WALnCsR,EAAKtT,MAAMixB,iBAAmB,IAAIS,KAAKH,EAAOjB,SAOhD,IAAIrrB,EAAOssB,EAAOtZ,QACdsZ,EAAOne,WACTnO,EAAOssB,EAAOne,SAAS8G,OAAO+G,cAAgB,IAAMsQ,EAAOne,SAAS3K,MAEtE6K,EAAKtT,MAAMgxB,iBAAiBhvB,KAAK,CAAEC,GAAIsvB,EAAOC,SAAUvsB,OAAMsrB,WAAW,IAK3E,GAAyB,UAArBgB,EAAOI,UAAuB,CAEhC,IAAMC,EAAYte,EAAKtT,MAAMgxB,iBAAiBrE,UAAU,SAAAtxB,GAAI,QAAIA,GAAOA,EAAK4G,KAAOsvB,EAAOC,WAC1Fle,EAAKtT,MAAMgxB,iBAAiBY,GAAWrB,WAAY,EAGrDjd,EAAKtT,MAAM+wB,iBAAiBQ,EAAOC,UAAUxvB,KAAKuvB,GAClDje,EAAKkI,iDAwBP,OACEvU,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACAD,EAAA9D,EAAAC,cAAC0H,EAAA,EAAD,CAAK1D,UAAU,QACfH,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,OACbH,EAAA9D,EAAAC,cAACoJ,EAAA,EAAD,CAAMpF,UAAU,UACdH,EAAA9D,EAAAC,cAACqJ,EAAA,EAAD,CAAYrF,UAAU,YACpBH,EAAA9D,EAAAC,cAACwJ,EAAA,EAAD,CACExF,UAAU,cACVvM,MAAM,SACNgS,KAAK,KACLjE,QAASpS,KAAK86B,iBAJhB,SAQArqB,EAAA9D,EAAAC,cAAA,MAAIgE,UAAU,QAAd,YAEFH,EAAA9D,EAAAC,cAACsJ,EAAA,EAAD,KACEzF,EAAA9D,EAAAC,cAACitB,GAAA,EAAD,CAAUwB,SAAS,EAAMC,QAAQ,iBAY9Bt7B,KAAK26B,gCA5GUrtB,IAAMC,WChErBqE,GAzFF,CACX,CACEK,KAAM,SACNxD,KAAM,YACN6D,KAAM,0BACNipB,UAAWC,EACXr1B,OAAQ,UAEV,CACE8L,KAAM,cACNxD,KAAM,aACN6D,KAAM,+BACNipB,sBDqQF,SAAAE,IAAc,IAAAte,EAAA,OAAAlU,OAAAoI,EAAA,EAAApI,CAAAjJ,KAAAy7B,IACZte,EAAAlU,OAAAqI,EAAA,EAAArI,CAAAjJ,KAAAiJ,OAAAsI,EAAA,EAAAtI,CAAAwyB,GAAApyB,KAAArJ,QACKwJ,MAAQ,GAFD2T,wEASZ,OACE1M,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAACkJ,EAAD,MAEArF,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChCN,EAAA9D,EAAAC,cAAC8uB,GAAD,eAfWpuB,IAAMC,WCnQvBpH,OAAQ,UAEV,CACE8L,KAAM,kBACNxD,KAAM,sBACN8D,SAAU,GACVD,KAAM,iCACNipB,UAAWzQ,GACX3kB,OAAQ,UAEV,CACE8L,KAAM,oBACNxD,KAAM,mBACN8D,SAAU,oBACVD,KAAM,oCACNipB,UAAW3M,GACXzoB,OAAQ,UAEV,CACE8L,KAAM,kBACNxD,KAAM,iBACN8D,SAAU,sBACVD,KAAM,oCACNipB,UAAWtM,GACX9oB,OAAQ,UAEV,CACE8L,KAAM,oBACNxD,KAAM,mBACN6D,KAAM,8BACNipB,UAAWxH,GACX5tB,OAAQ,WCaGw1B,8MAtDbC,UAAY,SAAAhqB,GACV,OAAOA,EAAOC,IAAI,SAACC,EAAMrF,GACvB,MAAoB,WAAhBqF,EAAK3L,OAELsK,EAAA9D,EAAAC,cAACivB,EAAA,EAAD,CACE5pB,KAAMH,EAAK3L,OAAS2L,EAAKG,KACzBspB,UAAWzpB,EAAKypB,UAChB9uB,IAAKA,IAIF,UAIbqvB,aAAe,SAAA7pB,GACb,IAAK,IAAIhQ,EAAI,EAAGA,EAAI2P,GAAOzM,OAAQlD,IACjC,IAGS,IAFP+G,EAAKU,MAAMkJ,SAASC,SAASjR,QAC3BgQ,GAAO3P,GAAGkE,OAASyL,GAAO3P,GAAGgQ,MAG/B,OAAOL,GAAO3P,GAAGwM,KAGrB,MAAO,2FA9BUgH,GACjBuhB,SAAS+E,gBAAgBC,UAAY,EACrChF,SAASiF,iBAAiBD,UAAY,EACtCh8B,KAAKihB,KAAKib,YAAYF,UAAY,mCA8BlC,OACEvrB,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAA+D,SAAA,KACED,EAAA9D,EAAAC,cAACuvB,EAADlzB,OAAAqK,OAAA,GACMtT,KAAK0J,MADX,CAEEkI,OAAQA,GACRoB,KAAM,CACJC,UAAW,eACXS,OAAQvU,EAAQ,KAChBqU,OAAQ,UAGZ/C,EAAA9D,EAAAC,cAAA,OAAKgE,UAAU,eAAesR,IAAI,eAChCzR,EAAA9D,EAAAC,cAACwvB,EAADnzB,OAAAqK,OAAA,GACMtT,KAAK0J,MADX,CAEEwH,UAAWlR,KAAK87B,aAAa97B,KAAK0J,MAAMkJ,SAASC,aAEnDpC,EAAA9D,EAAAC,cAACyvB,EAAA,EAAD,KAASr8B,KAAK47B,UAAUhqB,KACxBnB,EAAA9D,EAAAC,cAACkE,EAAA,EAAD,CAAWC,OAAK,GACdN,EAAA9D,EAAAC,cAAC0vB,EAAD,gBApDQhvB,IAAMC,WCA1BgvB,IAASC,OACP/rB,EAAA9D,EAAAC,cAAC6vB,EAAA,EAAD,KACEhsB,EAAA9D,EAAAC,cAACyvB,EAAA,EAAD,KACE5rB,EAAA9D,EAAAC,cAACivB,EAAA,EAAD,CAAO5pB,KAAK,SAASuqB,OAAQ,SAAA9yB,GAAK,OAAI+G,EAAA9D,EAAAC,cAAC8vB,GAAgBhzB,MAEvD+G,EAAA9D,EAAAC,cAAC+vB,EAAA,EAAD,CAAUC,KAAK,IAAI3rB,GAAG,mBAG1B+lB,SAAS6F,eAAe","file":"static/js/main.2cfd5bc1.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    },\n    maxBarThickness: 10\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.jsx (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.jsx (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"GET /parties/{Type}/{ID}\", \"POST /quotes\", \"POST /transfers\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30]\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.jsx\n  parseOptions, // used inside src/views/Index.jsx\n  chartExample1, // used inside src/views/Index.jsx\n  chartExample2 // used inside src/views/Index.jsx\n};\n","module.exports = __webpack_public_path__ + \"static/media/react.c4eb3d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.4ffd4fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.87be59a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.ab904daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.368685db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vue.9378e368.jpg\";","import React from \"react\";\n\n// reactstrap components\nimport {\n  FormGroup,\n  Form,\n  Row,\n  Button,\n  Col,\n  Table\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\nimport { Select, TreeSelect, Input, Tooltip, Tag } from 'antd';\nimport 'antd/dist/antd.css';\nimport jsf from 'json-schema-faker';\n// import './index.css';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\njsf.option('alwaysFakeOptionals', true);\n\nexport class FactSelect extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      value: undefined,\n      treeData: [],\n      factData: null\n    };\n  }\n\n  componentDidMount = () => {\n    this.componentDidUpdate()\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.factData !== this.props.factData) {\n      let factTreeData = []\n      if (this.props.factData) {\n        factTreeData = this.getNodeFacts(this.props.factData);\n      }\n\n      let value = undefined\n      if (this.props.value) {\n        value = this.props.value\n        const selectedFact = this.findValueInFactData(value, this.props.factData)\n        this.props.onSelect(value, selectedFact)\n      }\n\n      this.setState({treeData: factTreeData, factData: this.props.factData, value})\n    }\n  }\n\n  findValueInFactData = (value, factData) => {\n    \n    const valueArr = value.split('.')\n    let tFactData = this.props.factData\n    \n    for(let i=0; i<valueArr.length; i++) {\n      const factTreeData = this.getNodeFacts(tFactData);\n      const tFact = factTreeData.find(item => {\n        return item.value === valueArr[i]\n      })\n      if(!tFact) {\n        return null\n      }\n      tFactData = tFact.nodeObject\n    }\n    return tFactData\n\n  }\n\n  getNodeFacts = (nodeData, parentId=0, valuePrefix='') => {\n    let factTreeData = [];\n    for (let property in nodeData.properties) {\n      let isLeaf = true;\n      const fact = nodeData.properties[property];\n      if (fact.type === 'object') {\n        isLeaf = false;\n      }\n      let random = Math.random()\n      .toString(36)\n      .substring(2, 6);\n      factTreeData.push({ id: random, pId: parentId, value: valuePrefix + property, nodeObject: fact, title: property, isLeaf, disabled: !isLeaf });\n    }\n    return factTreeData;\n  }\n\n  onLoadData = treeNode =>\n    new Promise(resolve => {\n      const { id, nodeObject, value } = treeNode.props;\n      setImmediate(() => {\n        this.setState({\n          treeData: this.state.treeData.concat(this.getNodeFacts(nodeObject, id, value + '.')),\n        });\n        resolve();\n      });\n    });\n\n  onChange = (value, label, extra) => {\n    this.setState({ value });\n    this.props.onSelect(value, extra.triggerNode.props.nodeObject)\n  };\n\n\n\n  render() {\n    const { treeData } = this.state;\n    return (\n      <TreeSelect\n        treeDataSimpleMode\n        style={{ width: '100%', minWidth: '200px' }}\n        value={this.state.value}\n        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n        onChange={this.onChange}\n        loadData={this.onLoadData}\n        treeData={treeData}\n      />\n    );\n  }\n}\n\nexport class FactDataGenerator {\n\n  getBodyFactData = (resourceDefinition) => {\n    let bodySchema = {}\n    try {\n      bodySchema = resourceDefinition.requestBody.content['application/json'].schema\n    } catch(err) {\n    }\n    return bodySchema\n  }\n\n  getBodySample = (resourceDefinition) => {\n    let bodySample = null\n    try {\n      bodySample = resourceDefinition['x-examples']['application/json']\n    } catch(err) {\n    }\n    return bodySample\n  }\n\n  getHeadersFactData = (resourceDefinition, rootParameters) => {\n    // Convert header array in openapi file to object like requestBody\n    let headerSchema = {\n      properties: {}\n    }\n    let totalParameters\n    if(rootParameters) {\n      totalParameters = [...rootParameters]\n    } else {\n      totalParameters = []\n    }\n    try {\n      totalParameters.concat(resourceDefinition.parameters).forEach((item) => {\n        if (item.in === 'header') {\n          headerSchema.properties[item.name] = item.schema\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n    return headerSchema\n  }\n\n  getPathParametersFactData = (parameters) => {\n    // Convert path parameters array in openapi file to object like requestBody\n    let pathParametersSchema = {\n      properties: {}\n    }\n    try {\n      parameters.forEach((item) => {\n        if (item.in === 'path') {\n          pathParametersSchema.properties[item.name] = item.schema\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n    return pathParametersSchema\n  }\n\n  getQueryParametersFactData = (parameters) => {\n    // Convert path parameters array in openapi file to object like requestBody\n    let queryParametersSchema = {\n      properties: {}\n    }\n    try {\n      parameters.forEach((item) => {\n        if (item.in === 'query') {\n          queryParametersSchema.properties[item.name] = item.schema\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n    return queryParametersSchema\n  }\n\n  getSelectedResponseBodySchema = (responses, statusCode) => {\n    let bodySchema = {}\n    try {\n      bodySchema = responses[statusCode].content['application/json'].schema\n    } catch(err) {\n    }\n    return bodySchema\n  }\n\n  getSelectedResponseHeaders = (responses) => {\n    let headers = {}\n    try {\n      const successCode = this.pickSuccessCodeFromResponsesObject(responses)\n      headers = responses[successCode].headers\n    } catch(err) {\n    }\n    return headers\n  }\n\n  pickSuccessCodeFromResponsesObject = (responses) => {\n    let successCode\n    for (let responseCode in responses) {\n      if(responseCode >= 200 && responseCode <=299) {\n        successCode = responseCode\n        break\n      }\n    }\n    if(successCode) {\n      return successCode\n    } else {\n      return 'default'\n    }\n  }\n\n  generateSample = async (schema) => {\n    const sample = await jsf.resolve(schema,)\n    return sample\n  }\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/mojaloop.89213192.png\";","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Navbar,\n  Container,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form> */}\n            \n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return null\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n  NavbarToggler\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n            <br /> {prop.subTitle}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n              <br />\n              <h4 className=\"mb-0\">Self Testing Toolkit</h4>\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\n// import { Button, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header bg-gradient-default opacity-8 pb-6 pt-7 pt-lg-7 d-flex align-items-center\"\n          style={{\n            minHeight: \"150px\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >          \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.jsx\";\n\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Index extends React.Component {\n  state = {\n    activeNav: 1,\n    chartExample1Data: \"data1\"\n  };\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n    let wow = () => {\n      console.log(this.state);\n    };\n    wow.bind(this);\n    setTimeout(() => wow(), 1000);\n    // this.chartReference.update();\n  };\n  componentWillMount() {\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col xl=\"6\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Resource Hits\n                      </h6>\n                      <h2 className=\"mb-0\">Incoming</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"6\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Resource Hits\n                      </h6>\n                      <h2 className=\"mb-0\">Outgoing</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Requests and Responses</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Resource name</th>\n                      <th scope=\"col\">Hits</th>\n                      <th scope=\"col\">Responses Sent</th>\n                      <th scope=\"col\">Percentage</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">GET /parties/Type/ID</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">POST /quotes</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">POST /transfer</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /parties/Type/ID</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /quotes/ID</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /transfer/ID</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /parties/Type/ID/error</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /quotes/ID/error</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /transfer/ID/error</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Rules Engine Hits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Rules Engine</th>\n                      <th scope=\"col\">Hits</th>\n                      <th scope=\"col\">Percentage</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Validation Rules</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Callback Rules</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/react.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Jesse</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n                <Button\n                  color=\"info\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Edit profile\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.jsx\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"assets/img/theme/react.jpg\")}\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Connect\n                    </Button>\n                    <Button\n                      className=\"float-right\"\n                      color=\"default\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Message\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Friends</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Photos</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Comments</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                      Jessica Jones\n                      <span className=\"font-weight-light\">, 27</span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Bucharest, Romania\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Solution Manager - Creative Tim Officer\n                    </div>\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      University of Computer Science\n                    </div>\n                    <hr className=\"my-4\" />\n                    <p>\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                      Nick Murphy — writes, performs and records all of his own\n                      music.\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"lucky.jesse\"\n                              id=\"input-username\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder=\"jesse@example.com\"\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Lucky\"\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Jesse\"\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"New York\"\n                              id=\"input-city\"\n                              placeholder=\"City\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"United States\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          defaultValue=\"A beautiful Dashboard for Bootstrap 4. It is Free and\n                          Open Source.\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Register extends React.Component {\n  render() {\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <small>Sign up with</small>\n              </div>\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon mr-4\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign up with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Name\" type=\"text\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" />\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"text-muted font-italic\">\n                  <small>\n                    password strength:{\" \"}\n                    <span className=\"text-success font-weight-700\">strong</span>\n                  </small>\n                </div>\n                <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row>\n                <div className=\"text-center\">\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\">\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" />\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"button\">\n                    Sign in\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Create new account</small>\n              </a>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip742438047\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip742438047\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip941738690\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip941738690\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip804044742\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip804044742\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip996637554\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip996637554\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip746418347\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip746418347\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip102182364\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip102182364\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip406489510\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip406489510\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip476840018\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip476840018\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip753056318\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip753056318\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip441753266\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip441753266\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188462246\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188462246\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip621168444\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip621168444\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip875258217\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip875258217\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip834416663\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip834416663\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip372449339\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip372449339\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip108714769\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip108714769\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip664029969\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip664029969\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip806693074\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip806693074\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip844096937\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip844096937\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip757459971\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip757459971\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n                <CardFooter className=\"py-4\">\n                  <nav aria-label=\"...\">\n                    <Pagination\n                      className=\"pagination justify-content-end mb-0\"\n                      listClassName=\"justify-content-end mb-0\"\n                    >\n                      <PaginationItem className=\"disabled\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                          tabIndex=\"-1\"\n                        >\n                          <i className=\"fas fa-angle-left\" />\n                          <span className=\"sr-only\">Previous</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem className=\"active\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          1\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          2 <span className=\"sr-only\">(current)</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          3\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-angle-right\" />\n                          <span className=\"sr-only\">Next</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                    </Pagination>\n                  </nav>\n                </CardFooter>\n              </Card>\n            </div>\n          </Row>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip731399078\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip731399078\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip491083084\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip491083084\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip528540780\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip528540780\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip237898869\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip237898869\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188614932\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188614932\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip66535734\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip66535734\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip427561578\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip427561578\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip904098289\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip904098289\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip707904950\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip707904950\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip353988222\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip353988222\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip467171202\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip467171202\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip362118155\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362118155\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip226319315\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip226319315\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip711961370\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip711961370\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip216246707\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip216246707\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip638048561\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip638048561\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip781594051\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip781594051\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip840372212\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip840372212\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip497647175\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip497647175\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip951447946\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip951447946\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  FormGroup,\n  Form,\n  Row,\n  Button,\n  Col,\n  Table\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\nimport { Select, TreeSelect, Input, Tooltip, Tag } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport { FactDataGenerator, FactSelect } from './BuilderTools.jsx';\n// import './index.css';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\n\nclass ValueSelector extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      ajvErrors: null\n    }\n  }\n  validateAjv = null\n\n  handleValueChange = (newValue) => {\n    if (this.props.selectedFact) {\n      // TODO: The props propagation and state changes should be optimized. Currently this method is called when we update the value in props.\n      // Its due to the hight level component in RulesCallback which is trying to re-render the whole page if any change in conditions detected.\n      this.validateAjv = ajv.compile(this.props.selectedFact);\n      const valid = this.validateAjv(newValue);\n      if (valid) {\n        this.props.onChange(newValue)\n        this.setState({ajvErrors: ''})\n      } else {\n        this.props.onChange(newValue)\n        this.setState({ajvErrors: this.validateAjv.errors})\n      }\n    }\n  }\n\n\n  getValueInput = () => {\n    if(this.props.selectedFact && this.props.selectedFact.enum) {\n      return (\n        <Select\n          onChange={this.handleValueChange}\n          value={this.props.value}\n        >\n        { this.props.selectedFact.enum.map(item => {\n          return (\n            <Option key={item} value={item}>{item}</Option>\n          )\n        })}\n        </Select>\n      )\n    } else {\n      return (\n        <>\n          <Input placeholder=\"Value\" \n          value={this.props.value}\n          onChange={(e) => this.handleValueChange(e.target.value)}  />\n        </>\n      )\n    }\n  }\n\n  getErrorMessage = () => {\n    if(this.props.selectedFact && this.props.selectedFact.enum) {\n      return (null)\n    } else {\n      if(this.state.ajvErrors && this.state.ajvErrors.length > 0) {\n        return (\n          <>\n            <Tooltip title={ajv.errorsText(this.state.ajvErrors)}>\n              <Tag color=\"red\">errors found</Tag>\n            </Tooltip>\n          </>\n        )\n      }\n    }\n  }\n\n  render() {\n    return(\n      <>\n        { this.getValueInput() }\n        { this.getErrorMessage() }\n      </>\n    )\n  }\n}\n\nclass Condition extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedFactType: null,\n      selectedFact: null,\n      selectedFactPath: null,\n      factData: null,\n      selectedOperator: null,\n      allParameters: []\n    }\n  }\n\n  componentDidMount = async () => {\n    const selectedFactType = this.allFactTypes.find(item => {\n      return item.name === this.props.condition.fact\n    })\n    const selectedFactPath = this.props.condition.path\n    let allParameters = []\n    if(this.props.rootParameters) {\n      allParameters = allParameters.concat(this.props.rootParameters)\n    }\n    if(this.props.resourceDefinition && this.props.resourceDefinition.parameters) {\n      allParameters = allParameters.concat(this.props.resourceDefinition.parameters)\n    }\n\n    await this.setState({ selectedFactType, selectedFactPath, allParameters })\n    this.updateFactData()\n  }\n\n  // handleFactChange = (newValue) => {\n  //   this.props.condition.fact = newValue\n  //   this.props.onConditionChange()\n  // }\n\n  handleValueChange = (newValue) => {\n    this.props.condition.value = newValue\n    this.props.onConditionChange()\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.index)\n    this.props.onConditionChange()\n  }\n\n  factTypes = [\n    {\n      title: 'Request Body',\n      name: 'body'\n    },\n    {\n      title: 'Request Headers',\n      name: 'headers'\n    },\n  ]\n\n  allFactTypes = [\n    {\n      title: 'Request Body',\n      name: 'body'\n    },\n    {\n      title: 'Request Headers',\n      name: 'headers'\n    },\n    {\n      title: 'Request Path Parameters',\n      name: 'pathParams'\n    },\n    {\n      title: 'Request Query Parameters',\n      name: 'queryParams'\n    }\n  ]\n\n  havePathParams = () => {\n    if (this.state.allParameters) {\n      const firstPathItem = this.state.allParameters.find(item => {\n        return item.in === 'path'\n      })\n      if (firstPathItem) {\n        return true\n      }\n    }\n    return false\n  }\n\n  haveQueryParams = () => {\n    if (this.state.allParameters) {\n      const firstQueryItem = this.state.allParameters.find(item => {\n        return item.in === 'query'\n      })\n      if (firstQueryItem) {\n        return true\n      }\n    }\n    return false\n  }\n\n  getFactTypeItems = () => {\n    let tempFactTypes = [...this.factTypes]\n    if (this.havePathParams()) {\n      tempFactTypes.push(\n        {\n          title: 'Request Path Parameters',\n          name: 'pathParams'\n        }\n      )\n    }\n    if (this.haveQueryParams()) {\n      tempFactTypes.push(\n        {\n          title: 'Request Query Parameters',\n          name: 'queryParams'\n        }\n      )\n    }\n    return tempFactTypes.map((item) => {\n      return(<Option key={item.name} value={JSON.stringify(item)}>{item.title}</Option>)\n    })    \n  }\n\n  updateFactData = () => {\n    if (this.state.selectedFactType) {\n      switch(this.state.selectedFactType.name) {\n        case 'body':\n          this.setState( {factData: (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)} )\n          break\n        case 'headers':\n          this.setState( {factData: (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)} )\n          break\n        case 'pathParams':\n          this.setState( {factData: (new FactDataGenerator()).getPathParametersFactData(this.state.allParameters)} )\n          break\n        case 'queryParams':\n          this.setState( {factData: (new FactDataGenerator()).getQueryParametersFactData(this.state.allParameters)} )\n          break\n        default:\n          this.setState( {factData: null} )\n      }\n    } else {\n      this.setState( {factData: null} )\n    }\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject, selectedFact: null, selectedFactPath: null} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    // console.log('Selected', value, factObject)\n    let selectedOperator = null\n    if (this.props.condition.path === value) {\n      selectedOperator = this.props.condition.operator\n    }\n    this.setState( { selectedFact: factObject, selectedOperator, selectedFactPath: value } )\n    this.props.condition.path = value\n    this.props.condition.operator = selectedOperator\n    this.props.onConditionChange()\n  }\n\n  handleOperatorSelect = (operator) => {\n    try {\n      this.setState( {selectedOperator:  operator} )\n      this.props.condition.operator = operator\n      this.props.onConditionChange()\n    } catch(err) {}\n  }\n\n  operatorDisplayNames = {\n    numericEqual: 'Equal',\n    numericNotEqual: 'Not Equal',\n    numericLessThan: 'Less Than',\n    numericGreaterThan: 'Greater Than',\n    numericLessThanInclusive: 'Less Than or Equal to',\n    numericGreaterThanInclusive: 'Greater Than or Equal to',\n    dateBefore: 'Before',\n    dateAfter: 'After',\n  }\n  propertyTitleOperators = {\n    Amount: [ 'numericEqual', 'numericNotEqual', 'numericLessThan', 'numericGreaterThan', 'numericLessThanInclusive', 'numericGreaterThanInclusive' ],\n  }\n  getOperatorItems = () => {\n    let operatorList = []\n    if (this.state.selectedFact) {\n      // Check the selectedFact is a string type\n      if (this.state.selectedFact.type === 'string') {\n        // Check the selectedFact title in openApi file and determine the list of operators\n        if(this.propertyTitleOperators[this.state.selectedFact.title]) {\n          this.propertyTitleOperators[this.state.selectedFact.title].map(item => {\n            let displayName = item\n            // Check whether the operator name is in display names, if found replace it\n            if(this.operatorDisplayNames[item]) {\n              displayName = this.operatorDisplayNames[item]\n            }\n            operatorList.push({ displayName, name: item })\n          })\n        } else {\n          operatorList.push({displayName: 'Equal', name: 'equal'})\n          operatorList.push({displayName: 'Not Equal', name: 'notEqual'})\n        }\n      } else if (this.state.selectedFact.type === 'integer') {\n        operatorList.push({displayName: 'Equal', name: 'equal'})\n        operatorList.push({displayName: 'Not Equal', name: 'notEqual'})\n        operatorList.push({displayName: 'Less Than', name: 'lessThan'})\n        operatorList.push({displayName: 'Less Than or Equal to', name: 'lessThanInclusive'})\n        operatorList.push({displayName: 'Greater Than', name: 'greaterThan'})\n        operatorList.push({displayName: 'Greater Than or Equal to', name: 'greaterThanInclusive'})\n      } else {\n        operatorList.push({displayName: 'Equal', name: 'equal'})\n        operatorList.push({displayName: 'Not Equal', name: 'notEqual'})\n      }\n    }\n\n\n    return operatorList.map(item => {\n      return(<Option key={item.name} value={item.name}>{item.displayName}</Option>)\n    })\n    // return []\n  }\n\n  render() {\n\n    return (\n      <>\n        <Table className=\"shadow\">\n          <tbody>\n          <tr>\n          <td>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-country\"\n              >\n                Fact Type\n              </label>\n              <br />\n\n              <Select \n                value={JSON.stringify(this.state.selectedFactType)}\n                onChange={this.handleFactTypeSelect}\n                style={{minWidth: '150px'}}\n              >\n                {this.getFactTypeItems()} \n              </Select>\n            </FormGroup>\n          </td>\n          <td>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-city\"\n              >\n                Fact\n              </label>\n              <br />\n              <FactSelect factData={this.state.factData} value={this.state.selectedFactPath} onSelect={this.handleFactSelect} />\n            </FormGroup>\n          </td>\n          <td>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-country\"\n              >\n                Operator\n              </label>\n              <br />\n              <Select style={{ width: 180 }} value={this.state.selectedOperator} onChange={this.handleOperatorSelect}>\n                {this.getOperatorItems()}\n              </Select>\n            </FormGroup>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan='2'>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-country\"\n              >\n                Value\n              </label>\n              <br />\n              <ValueSelector value={this.props.condition.value} selectedFact={this.state.selectedFact} onChange={this.handleValueChange} />\n\n            </FormGroup>\n          </td>\n          <td align='right'>\n            <br />\n            <Button\n              color=\"danger\"\n              onClick={this.handleDelete}\n              size=\"sm\"\n            >\n              Delete\n            </Button>\n          </td>\n          </tr>\n          </tbody>\n        </Table>\n      </>\n\n    )\n  }\n}\n\nclass Conditions extends React.Component {\n\n  // componentDidUpdate = () => {\n  //   console.log(this.props)\n  // }\n\n  handleConditionChange = (condition) => {\n    this.props.onConditionsChange()\n  }\n\n  handleConditionDelete = (index) => {\n    this.props.conditions.splice(index, 1)\n  }\n\n  render() {\n    return(\n      <>\n      {\n        this.props.conditions.map((condition, index) => {\n          return (\n            <Row key={index}>\n              <Condition condition={condition} index={index} resource={this.props.resource} resourceDefinition={this.props.resourceDefinition} rootParameters={this.props.rootParameters}\n                onConditionChange={this.handleConditionChange}\n                onDelete={this.handleConditionDelete}\n              />\n            </Row>\n          )\n        })\n      }\n      </>\n    )\n  }\n}\n\n\n\nclass ConditionBuilder extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  // async componentWillMount() {\n  //   // this.getData()\n  //   // await this.getDefinition()\n  // }\n\n  newCondition = {\n    fact: null,\n    operator: null,\n    value: null\n  }\n\n  addCondition = () => {\n    this.props.conditions.push({...this.newCondition})\n    this.handleConditionsChange()\n  }\n\n  handleConditionsChange = () => {\n    this.props.onChange({ conditions: this.props.conditions })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Conditions \n          conditions={this.props.conditions} \n          resource={this.props.resource}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters={this.props.rootParameters}\n          onConditionsChange={this.handleConditionsChange}\n        />\n        <Button\n          color=\"primary\"\n          onClick={() => this.addCondition()}\n          disabled={(this.props.resource? false : true)}\n          size=\"sm\"\n        >\n          Add Condition\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default ConditionBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n\n// reactstrap components\nimport {\n  FormGroup,\n  Row,\n  Button,\n  Col,\n  CardBody\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Select, TreeSelect, Input, Tooltip, Tag, Radio, Icon, Menu, Dropdown, Card, Popover, Checkbox, message } from 'antd';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { FactDataGenerator, FactSelect } from './BuilderTools.jsx';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\nclass ConfigurableParameter extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mode: null,\n      factData: null,\n    }\n\n    // Set Modes Array\n    this.modes[0]='Request Path Parameter'\n    this.modes[1]='Request Body Parameter'\n    this.modes[2]='Request Header Parameter'\n    this.modes[3]='Negotiated Content Type'\n  }\n\n  modes = []\n  inputValue = null\n\n  getModeMenu = () => {\n    return this.modes.map((item, key) => {\n      return (\n        <Option key={key} value={key}>\n          {item}\n        </Option>\n      )\n    })\n  }\n  \n  handleModeChange = async (mode) => {\n    var factData = null\n    switch(mode) {\n      case 0:\n        factData = (new FactDataGenerator()).getPathParametersFactData(this.props.rootParameters)\n        break\n      case 1:\n        factData = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n        break\n      case 2:\n        factData = (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)\n        break\n      default:\n        factData = null\n    }\n    await this.setState( {mode: mode, factData: factData} )\n    this.updateChanges()\n  }\n\n  getValueComponent = () => {\n    switch(this.state.mode) {\n      case 0:\n      case 1:\n      case 2:\n        return (\n          <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n        )\n        break\n      case 3:\n      default:\n        return null\n    }\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    this.inputValue = value\n    this.updateChanges()\n  }\n\n  updateChanges = () => {\n    let finalValue = ''\n    if (!this.inputValue) {\n      this.inputValue = ''\n    }\n    switch(this.state.mode) {\n      case 0:\n        finalValue = '{$request.params.' + this.inputValue + '}'\n        break\n      case 1:\n        finalValue = '{$request.body.' + this.inputValue + '}'\n        break\n      case 2:\n        finalValue = '{$request.header.' + this.inputValue + '}'\n        break\n      case 3:\n        finalValue = '{$session.negotiatedContentType}'\n        break\n      default:\n        finalValue = this.inputValue\n    }\n    \n\n    this.props.onChange(finalValue)\n  }\n\n  handleValueChange = (newValue) => {\n    this.inputValue = newValue\n    this.updateChanges()\n  }\n\n  render() {\n\n    return (\n      <Row>\n        <Col>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.modes[this.state.mode]}\n            onSelect={this.handleModeChange}\n          >\n            {this.getModeMenu()}\n          </Select>\n        </Col>\n        <Col>\n          {this.getValueComponent()}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass FixedCallbackBuilder extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      configurableParameterSelected: '',\n      allParamsFromDefinition: [],\n      allParamsObject: {}\n    }\n  }\n\n  bodySchema = {}\n\n  componentDidMount = () => {\n    // console.log(this.props.callbackRootParameters)\n    // console.log(this.props.resourceDefinition.parameters)\n    // console.log(this.props.callbackDefinition)\n    this.bodySchema = (new FactDataGenerator()).getBodyFactData(this.props.callbackDefinition)\n\n\n    let allParamsFromDefinition = []\n    if (this.props.callbackRootParameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.callbackRootParameters)\n    }\n    if (this.props.callbackDefinition.parameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.callbackDefinition.parameters)\n    }\n\n    let allParamsObject = {}\n    for (let k in allParamsFromDefinition) {\n      allParamsObject[allParamsFromDefinition[k].name] = {\n        description: allParamsFromDefinition[k].description\n      }\n    }\n    this.setState({allParamsFromDefinition, allParamsObject})\n\n  }\n  // componentDidUpdate = () => {\n  //   // console.log(this.props.callbackRootParameters)\n  //   // console.log(this.props.resourceDefinition.parameters)\n  //   // console.log(this.props.callbackDefinition)\n    \n\n\n  // }\n\n\n  addHeaderItemsFromDefinition = async (onlyRequired=false) => {\n    this.state.allParamsFromDefinition.forEach((param) => {\n      if (param.in==='header') {\n        if (!onlyRequired || param.required) {\n          if (!this.props.eventParams.headers) {\n            this.props.eventParams.headers = {}\n            this.props.eventParams.headers[param.name] = ''\n          }\n          else if (!this.props.eventParams.headers[param.name]) {\n            this.props.eventParams.headers[param.name] = ''\n          }\n        }\n      }\n    })\n    this.updateChanges()\n  }\n\n  addHeaderItem = (itemName) => {\n    if (!this.props.eventParams.headers) {\n      this.props.eventParams.headers = {}\n    }\n    this.props.eventParams.headers[itemName] = this.props.eventParams.headers[itemName] ? this.props.eventParams.headers[itemName] : \"\"\n    this.updateChanges()\n  }\n  handleHeaderItemChange = (key, name, value) => {\n    this.props.eventParams.headers[name] = value\n    this.updateChanges()\n  }\n  handleHeaderItemDelete = async (name) => {\n    delete this.props.eventParams.headers[name]\n    this.updateChanges()\n  }\n\n  handleBodyChange = (bodyObject) => {\n    // console.log(ace.getCursorPosition())\n    this.props.eventParams.body = bodyObject\n    this.updateChanges()\n  }\n\n  handleAddHeaderClick = (event) => {\n    this.addHeaderItem(event.item.props.children);\n  };\n\n  headerItemsMenu = () => {    \n    const headerParams = this.state.allParamsFromDefinition.filter(item => {\n      return item.in === 'header'\n    })\n    const menuItems = headerParams.map((item, key) => {\n      return (\n        <Menu.Item key={key}>{item.name}</Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={this.handleAddHeaderClick}>\n        {menuItems}\n      </Menu>\n    )\n  }\n\n  updateChanges = () => {\n    const paramsObject = {}\n    paramsObject.headers = this.props.eventParams.headers\n    paramsObject.body = this.props.eventParams.body\n    this.props.onChange(paramsObject)\n  }\n\n  getHeaderItems = () => {\n    let headerItems = []\n    let k=0\n    if (this.props.eventParams) {\n      for( let headerName in this.props.eventParams.headers ) {\n        const item = {\n          name: headerName,\n          value: this.props.eventParams.headers[headerName]\n        }\n        const key = k++\n        headerItems.push(\n          <HeaderInputComponent key={key} itemKey={item.name} name={item.name} value={item.value} description={this.state.allParamsObject[item.name]? this.state.allParamsObject[item.name].description: null} rootParameters={this.props.rootParameters} resourceDefinition={this.props.resourceDefinition} onChange={this.handleHeaderItemChange} onDelete={this.handleHeaderItemDelete} />\n        )\n      }\n    }\n    return headerItems\n\n  }\n\n  handleAddConfigParam = (newValue) => {\n    this.setState({configurableParameterSelected: newValue})\n  }\n\n\n  handlePopulateSampleBodyClick = async () => {\n    const newBody = (new FactDataGenerator()).getBodySample(this.props.callbackDefinition)\n    if(newBody) {\n      if(this.props.callbackObject && this.props.callbackObject.bodyOverride) {\n        _.merge(newBody, this.props.callbackObject.bodyOverride)\n      }\n      this.props.eventParams.body = newBody\n      this.refs.bodyEditor.jsonEditor.update(this.props.eventParams.body)\n      this.updateChanges()\n    }\n  }\n\n  handleConfigParamCopyToClipboard = () => {\n    navigator.clipboard.writeText(this.state.configurableParameterSelected)\n    message.success('Copied to clipboard');\n  }\n\n  render() {\n\n    const content = (\n      <>\n      <Row>\n        <Col>\n          <ConfigurableParameter\n            onChange={this.handleAddConfigParam}\n            rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n          />\n        </Col>\n      </Row>\n      {\n        this.state.configurableParameterSelected ?\n        (\n          <Row className=\"mt-4 text-center\">\n            <Col>\n              <Tag color=\"geekblue\"><a onClick={this.handleConfigParamCopyToClipboard}>{this.state.configurableParameterSelected}</a></Tag>\n            </Col>\n          </Row>\n        )\n        : null\n      }\n      </>\n    )\n\n    return (\n      <>\n        <Row>\n          <Col>\n            <Card size=\"small\" title=\"Headers\">\n              <Row>\n                <Col lg=\"12\">\n                  <FormGroup>\n                    <Row>\n                      <Col lg=\"4\">\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Name\n                        </label>\n                      </Col>\n                      <Col lg=\"4\">\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Value\n                        </label>\n                      </Col>\n                    </Row>\n                    { this.getHeaderItems() }\n                  </FormGroup>\n                  <Dropdown overlay={this.headerItemsMenu()}>\n                    <Button\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Add Header\n                    </Button>\n\n                  </Dropdown>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => this.addHeaderItemsFromDefinition(true)}\n                    size=\"sm\"\n                  >\n                    Add Required Headers\n                  </Button>\n                  <Button\n                    color=\"info\"\n                    onClick={() => this.addHeaderItemsFromDefinition(false)}\n                    size=\"sm\"\n                  >\n                    Add All Headers\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row className='mt-2'>\n          <Col>\n            <Card size=\"small\" title=\"Body\">\n              <Row className='mb-2'>\n                <Col lg=\"6\">\n                  <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n                    <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n                  </Popover>\n                </Col>\n                <Col lg=\"6\" style={{textAlign: 'right'}}>\n                  <Button color=\"success\" size=\"sm\" onClick={this.handlePopulateSampleBodyClick} >Populate with sample body</Button>\n                </Col>\n              </Row>\n              <Row >\n                <Col lg=\"12\">\n                  <Editor\n                    ref=\"bodyEditor\"\n                    value={ this.props.eventParams.body? this.props.eventParams.body : {} }\n                    ace={ace}\n                    ajv={ajv}\n                    theme=\"ace/theme/tomorrow_night_blue\"\n                    mode=\"code\"\n                    search={false}\n                    statusBar={false}\n                    navigationBar={false}\n                    onChange={this.handleBodyChange}\n                    schema={this.bodySchema}\n                    // onError={this.handleError}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\n\nclass HeaderInputComponent extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      value: ''\n    }\n  }\n  inputValue = null\n\n  componentDidMount = () => {\n    this.inputValue = this.props.value\n  }\n\n  componentDidUpdate = () => {\n    this.inputValue = this.props.value\n  }\n\n  handleNameChange = (event) => {\n    // this.setState({name: event.target.value})\n    this.props.onChange(this.props.itemKey, event.target.value, this.props.value)\n  }\n  handleAddConfigParam = (newValue) => {\n    this.inputValue = newValue\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n  handleValueChange = (event) => {\n    this.inputValue = event.target.value\n    // console.log(event.target.value)\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.itemKey)\n  }\n\n  \n  render() {\n\n    const content = (\n      <ConfigurableParameter\n        name={this.props.name}\n        value={this.props.value}\n        onChange={this.handleAddConfigParam}\n        rootParameters={this.props.rootParameters}\n        resourceDefinition={this.props.resourceDefinition}\n      />\n    )\n\n    \n    return (\n      <>\n      <Row>\n        <Col lg=\"4\">\n          <Tooltip placement=\"topLeft\" title={this.props.description}>\n            <Input\n              className=\"form-control-alternative\"\n              placeholder=\"Name\"\n              type=\"text\"\n              defaultValue={this.props.name}\n              value={this.props.name}\n              onChange={this.handleNameChange}\n              disabled={false}\n            />\n          </Tooltip>\n        </Col>\n        \n        <Col lg=\"6\">\n          <Input\n            className=\"form-control-alternative\"\n            placeholder=\"Name\"\n            type=\"text\"\n            defaultValue={this.props.value}\n            value={this.props.value}\n            onChange={this.handleValueChange}\n            disabled={false}\n          />\n          <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n            <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n          </Popover>\n\n        </Col>\n        <Col lg=\"2\">\n          <Button\n            color=\"danger\"\n            key={this.props.name}\n            onClick={this.handleDelete}\n            size=\"sm\"\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\nclass MockCallbackBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      overrideChecked: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (this.props.eventParams) {\n      if (this.props.eventParams.headers || this.props.eventParams.body) {\n        this.setState({overrideChecked: true})\n      }\n    }\n    \n  }\n\n  handleOverrideChecked = (event) => {\n    this.setState({overrideChecked: event.target.checked})\n    if (!event.target.checked) {\n      this.handleOverrideValuesChange({})\n    }\n  }\n\n  handleOverrideValuesChange = (paramsObject) => {\n    // const paramsObject = {}\n    // paramsObject.header = this.getHeaderObject()\n    // paramsObject.body = this.state.body\n  \n    this.props.onChange(paramsObject)\n  }\n\n  render () {\n    return (\n      <>\n      <Row>\n        <Col>\n          <Checkbox checked={this.state.overrideChecked} onChange={this.handleOverrideChecked}>Override some parameters</Checkbox>\n        </Col>\n      </Row>\n      { this.state.overrideChecked?\n            <Row className='mt-3'>\n            <Col>\n              <FixedCallbackBuilder\n                eventParams={this.props.eventParams}\n                onChange={this.handleOverrideValuesChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n                callbackDefinition={this.props.callbackDefinition}\n                callbackRootParameters={this.props.callbackRootParameters}\n                callbackObject={this.props.callbackObject}\n              />\n            </Col>\n          </Row>\n        : null\n      }\n\n      </>\n    )\n  }\n}\n\nclass ParamsBuilder extends React.Component {\n  \n  render() {\n    if (this.props.eventType === 'FIXED_CALLBACK' || this.props.eventType === 'FIXED_ERROR_CALLBACK') {\n      return (\n        <FixedCallbackBuilder\n          eventParams={this.props.eventParams}\n          onChange={this.props.onChange}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters = {this.props.rootParameters}\n          callbackDefinition={this.props.callbackDefinition}\n          callbackRootParameters={this.props.callbackRootParameters}\n          callbackObject={this.props.callbackObject}\n        />\n      )\n    }\n    else if (this.props.eventType === 'MOCK_CALLBACK' || this.props.eventType === 'MOCK_ERROR_CALLBACK') {\n      return (\n        <MockCallbackBuilder\n          eventParams={this.props.eventParams}\n          onChange={this.props.onChange}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters = {this.props.rootParameters}\n          callbackDefinition={this.props.callbackDefinition}\n          callbackRootParameters={this.props.callbackRootParameters}\n          callbackObject={this.props.callbackObject}\n        />\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nclass EventBuilder extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedResource: null\n    };\n  }\n\n  // componentDidMount = () => {\n  //   console.log(this.props)\n  // }\n\n  // componentDidUpdate = () => {\n  //   console.log(this.props.event)\n  // }\n\n  successEventTypes = [\n    {\n      name: 'FIXED_CALLBACK',\n      title: 'Fixed Callback'\n    },\n    {\n      name: 'MOCK_CALLBACK',\n      title: 'Mock Callback'\n    }\n  ]\n\n  errorEventTypes = [\n    {\n      name: 'FIXED_ERROR_CALLBACK',\n      title: 'Fixed Error Callback'\n    },\n    {\n      name: 'MOCK_ERROR_CALLBACK',\n      title: 'Mock Error Callback'\n    }\n  ]\n\n  handleEventTypeSelect = (eventType) => {\n    this.props.event.type = eventType\n    this.handleEventChange()\n  }\n\n  handleEventChange = () => {\n    if (this.props.callbackObject) {\n      this.props.event.method = this.props.callbackObject.method\n      this.props.event.path = this.props.callbackObject.path\n    }\n\n    this.props.onChange(this.props.event)\n  }\n\n  getEventTypes = () => {\n    let eventTypes = this.successEventTypes\n    if (this.props.mode === 'validation') {\n      eventTypes = this.errorEventTypes\n    }\n    return eventTypes.map(item => {\n      return (\n        <Option key={item.name} value={item.name}>{item.title}</Option>\n      )\n    })\n  }\n\n  handleParamsChange = (newParams) => {\n    if (newParams) {\n      this.props.event.params = newParams\n    } else {\n      delete this.props.event.params\n    }\n    this.handleEventChange()\n  }\n\n  render() {\n\n    return (\n      <>\n        <div className=\"pl-lg-4\">\n          <Row>\n            <Col md=\"12\">\n              <FormGroup>\n                <label\n                  className=\"form-control-label\"\n                  htmlFor=\"input-address\"\n                >\n                  Event Type\n                </label>\n                <Select\n                  value={this.props.event.type}\n                  onChange={this.handleEventTypeSelect}\n                  disabled={(this.props.resource? false : true)}\n                >\n                  {this.getEventTypes()}\n                </Select>\n              </FormGroup>\n            </Col>\n          </Row>\n          <ParamsBuilder\n            eventType={this.props.event.type}\n            eventParams={this.props.event.params}\n            onChange={this.handleParamsChange}\n            resourceDefinition={this.props.resourceDefinition}\n            rootParameters = {this.props.rootParameters}\n            callbackDefinition={this.props.callbackDefinition}\n            callbackRootParameters={this.props.callbackRootParameters}\n            callbackObject={this.props.callbackObject}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EventBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n\n// reactstrap components\nimport {\n  FormGroup,\n  Row,\n  Button,\n  Col,\n  CardBody\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Select, TreeSelect, Input, Tooltip, Tag, Radio, Icon, Menu, Dropdown, Card, Popover, Checkbox, message } from 'antd';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { FactDataGenerator, FactSelect } from './BuilderTools.jsx';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\nclass ConfigurableParameter extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mode: null,\n      factData: null,\n    }\n\n    // Set Modes Array\n    this.modes[0]='Request Path Parameter'\n    this.modes[1]='Request Body Parameter'\n    this.modes[2]='Request Header Parameter'\n    this.modes[3]='Negotiated Content Type'\n    this.modes[4]='Request Query Parameter'\n  }\n\n  modes = []\n  inputValue = null\n\n  getModeMenu = () => {\n    return this.modes.map((item, key) => {\n      return (\n        <Option key={key} value={key}>\n          {item}\n        </Option>\n      )\n    })\n  }\n  \n  handleModeChange = async (mode) => {\n    var factData = null\n    let allParameters = []\n    if(this.props.rootParameters) {\n      allParameters = allParameters.concat(this.props.rootParameters)\n    }\n    if(this.props.resourceDefinition.parameters) {\n      allParameters = allParameters.concat(this.props.resourceDefinition.parameters)\n    }\n    switch(mode) {\n      case 0:\n        factData = (new FactDataGenerator()).getPathParametersFactData(allParameters)\n        break\n      case 1:\n        factData = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n        break\n      case 2:\n        factData = (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)\n        break\n      case 4:\n        factData = (new FactDataGenerator()).getQueryParametersFactData(allParameters)\n        break\n      default:\n        factData = null\n    }\n    await this.setState( {mode: mode, factData: factData} )\n    this.updateChanges()\n  }\n\n  getValueComponent = () => {\n    switch(this.state.mode) {\n      case 0:\n      case 1:\n      case 2:\n      case 4:\n        return (\n          <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n        )\n        break\n      case 3:\n      default:\n        return null\n    }\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    this.inputValue = value\n    this.updateChanges()\n  }\n\n  updateChanges = () => {\n    let finalValue = ''\n    if (!this.inputValue) {\n      this.inputValue = ''\n    }\n    switch(this.state.mode) {\n      case 0:\n        finalValue = '{$request.params.' + this.inputValue + '}'\n        break\n      case 4:\n        finalValue = '{$request.query.' + this.inputValue + '}'\n        break\n      case 1:\n        finalValue = '{$request.body.' + this.inputValue + '}'\n        break\n      case 2:\n        finalValue = '{$request.header.' + this.inputValue + '}'\n        break\n      case 3:\n        finalValue = '{$session.negotiatedContentType}'\n        break\n      default:\n        finalValue = this.inputValue\n    }\n    \n\n    this.props.onChange(finalValue)\n  }\n\n  handleValueChange = (newValue) => {\n    this.inputValue = newValue\n    this.updateChanges()\n  }\n\n  render() {\n\n    return (\n      <Row>\n        <Col>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.modes[this.state.mode]}\n            onSelect={this.handleModeChange}\n          >\n            {this.getModeMenu()}\n          </Select>\n        </Col>\n        <Col>\n          {this.getValueComponent()}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass FixedCallbackBuilder extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      configurableParameterSelected: ''\n    }\n  }\n\n  bodySchema = {}\n  allHeadersArray = []\n  allHeadersObject = {}\n  // componentDidUpdate = () => {\n  //   console.log(this.props.resources)\n  // }\n  componentDidMount = async () => {\n    if (!this.props.eventParams.statusCode) {\n      this.props.eventParams.statusCode = (new FactDataGenerator()).pickSuccessCodeFromResponsesObject(this.props.responses)\n    }\n    this.updateBodyAndHeadersSchemaForResponseCode()\n  }\n\n  componentDidUpdate = async () => {\n    if (!this.props.eventParams.statusCode) {\n      this.props.eventParams.statusCode = (new FactDataGenerator()).pickSuccessCodeFromResponsesObject(this.props.responses)\n    }\n    this.updateBodyAndHeadersSchemaForResponseCode()\n  }\n\n  updateBodyAndHeadersSchemaForResponseCode = () => {\n    this.bodySchema = (new FactDataGenerator()).getSelectedResponseBodySchema(this.props.responses, this.props.eventParams.statusCode)\n    const allHeadersObject = (new FactDataGenerator()).getSelectedResponseHeaders(this.props.responses, this.props.eventParams.statusCode)\n    let allHeadersArray = []\n    for (let k in allHeadersObject) {\n      allHeadersArray.push({\n        name: k,\n        ...allHeadersObject[k]\n      })\n    }\n    this.allHeadersArray = allHeadersArray\n    this.allHeadersObject = allHeadersObject\n  }\n\n  addHeaderItemsFromDefinition = async (onlyRequired=false) => {\n    this.allHeadersArray.forEach((param) => {\n      if (!onlyRequired || param.required) {\n        if (!this.props.eventParams.headers) {\n          this.props.eventParams.headers = {}\n          this.props.eventParams.headers[param.name] = ''\n        }\n        else if (!this.props.eventParams.headers[param.name]) {\n          this.props.eventParams.headers[param.name] = ''\n        }\n      }\n    })\n    this.updateChanges()\n  }\n\n  addHeaderItem = (itemName) => {\n    if (!this.props.eventParams.headers) {\n      this.props.eventParams.headers = {}\n    }\n    this.props.eventParams.headers[itemName] = this.props.eventParams.headers[itemName] ? this.props.eventParams.headers[itemName] : \"\"\n    this.updateChanges()\n  }\n  handleHeaderItemChange = (key, name, value) => {\n    this.props.eventParams.headers[name] = value\n    this.updateChanges()\n  }\n  handleHeaderItemDelete = async (name) => {\n    delete this.props.eventParams.headers[name]\n    this.updateChanges()\n  }\n\n  handleBodyChange = (bodyObject) => {\n    // console.log(ace.getCursorPosition())\n    this.props.eventParams.body = bodyObject\n    this.updateChanges()\n  }\n\n  handleAddHeaderClick = (event) => {\n    this.addHeaderItem(event.item.props.children);\n  };\n\n  headerItemsMenu = () => {    \n    const menuItems = this.allHeadersArray.map((item, key) => {\n      return (\n        <Menu.Item key={key}>{item.name}</Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={this.handleAddHeaderClick}>\n        {menuItems}\n      </Menu>\n    )\n  }\n\n  updateChanges = () => {\n    const paramsObject = {}\n    paramsObject.headers = this.props.eventParams.headers\n    paramsObject.body = this.props.eventParams.body\n    paramsObject.statusCode = this.props.eventParams.statusCode\n    this.props.onChange(paramsObject)\n  }\n\n  getHeaderItems = () => {\n    let headerItems = []\n    let k=0\n    if (this.props.eventParams) {\n      for( let headerName in this.props.eventParams.headers ) {\n        const item = {\n          name: headerName,\n          value: this.props.eventParams.headers[headerName]\n        }\n        const key = k++\n        headerItems.push(\n          <HeaderInputComponent key={key} itemKey={item.name} name={item.name} value={item.value} description={this.allHeadersObject[item.name]? this.allHeadersObject[item.name].description: null} rootParameters={this.props.rootParameters} resourceDefinition={this.props.resourceDefinition} onChange={this.handleHeaderItemChange} onDelete={this.handleHeaderItemDelete} />\n        )\n      }\n    }\n    return headerItems\n\n  }\n\n  handleAddConfigParam = (newValue) => {\n    this.setState({configurableParameterSelected: newValue})\n  }\n\n\n  handlePopulateSampleBodyClick = async () => {\n    // const newBody = (new FactDataGenerator()).getBodySample(this.props.callbackDefinition)\n    const newBody = await (new FactDataGenerator()).generateSample(this.bodySchema)\n    if(newBody) {\n      if(this.props.callbackObject && this.props.callbackObject.bodyOverride) {\n        _.merge(newBody, this.props.callbackObject.bodyOverride)\n      }\n      this.props.eventParams.body = newBody\n      this.refs.bodyEditor.jsonEditor.update(this.props.eventParams.body)\n      this.updateChanges()\n    }\n  }\n\n  handleConfigParamCopyToClipboard = () => {\n    navigator.clipboard.writeText(this.state.configurableParameterSelected)\n    message.success('Copied to clipboard');\n  }\n\n  render() {\n\n    const content = (\n      <>\n      <Row>\n        <Col>\n          <ConfigurableParameter\n            onChange={this.handleAddConfigParam}\n            rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n          />\n        </Col>\n      </Row>\n      {\n        this.state.configurableParameterSelected ?\n        (\n          <Row className=\"mt-4 text-center\">\n            <Col>\n              <Tag color=\"geekblue\"><a onClick={this.handleConfigParamCopyToClipboard}>{this.state.configurableParameterSelected}</a></Tag>\n            </Col>\n          </Row>\n        )\n        : null\n      }\n      </>\n    )\n\n    return (\n      <>\n        <Row className='mt-2'>\n          <Col>\n            <Card size=\"small\" title=\"Headers\">\n              <Row>\n                <Col lg=\"12\">\n                  <FormGroup>\n                    <Row>\n                      <Col lg=\"4\">\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Name\n                        </label>\n                      </Col>\n                      <Col lg=\"4\">\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Value\n                        </label>\n                      </Col>\n                    </Row>\n                    { this.getHeaderItems() }\n                  </FormGroup>\n                  <Dropdown overlay={this.headerItemsMenu()}>\n                    <Button\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Add Header\n                    </Button>\n\n                  </Dropdown>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => this.addHeaderItemsFromDefinition(true)}\n                    size=\"sm\"\n                  >\n                    Add Required Headers\n                  </Button>\n                  <Button\n                    color=\"info\"\n                    onClick={() => this.addHeaderItemsFromDefinition(false)}\n                    size=\"sm\"\n                  >\n                    Add All Headers\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row className='mt-2'>\n          <Col>\n            <Card size=\"small\" title=\"Body\">\n              <Row className='mb-2'>\n                <Col lg=\"6\">\n                  <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n                    <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n                  </Popover>\n                </Col>\n                <Col lg=\"6\" style={{textAlign: 'right'}}>\n                  <Button color=\"success\" size=\"sm\" onClick={this.handlePopulateSampleBodyClick} >Populate with sample body</Button>\n                </Col>\n              </Row>\n              <Row >\n                <Col lg=\"12\">\n                  <Editor\n                    ref=\"bodyEditor\"\n                    value={ this.props.eventParams.body? this.props.eventParams.body : {} }\n                    ace={ace}\n                    ajv={ajv}\n                    theme=\"ace/theme/tomorrow_night_blue\"\n                    mode=\"code\"\n                    search={false}\n                    statusBar={false}\n                    navigationBar={false}\n                    onChange={this.handleBodyChange}\n                    schema={this.bodySchema}\n                    // onError={this.handleError}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\n\nclass HeaderInputComponent extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      value: ''\n    }\n  }\n  inputValue = null\n\n  componentDidMount = () => {\n    this.inputValue = this.props.value\n  }\n\n  componentDidUpdate = () => {\n    this.inputValue = this.props.value\n  }\n\n  handleNameChange = (event) => {\n    // this.setState({name: event.target.value})\n    this.props.onChange(this.props.itemKey, event.target.value, this.props.value)\n  }\n  handleAddConfigParam = (newValue) => {\n    this.inputValue = newValue\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n  handleValueChange = (event) => {\n    this.inputValue = event.target.value\n    // console.log(event.target.value)\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.itemKey)\n  }\n\n  \n  render() {\n\n    const content = (\n      <ConfigurableParameter\n        name={this.props.name}\n        value={this.props.value}\n        onChange={this.handleAddConfigParam}\n        rootParameters={this.props.rootParameters}\n        resourceDefinition={this.props.resourceDefinition}\n      />\n    )\n\n    \n    return (\n      <>\n      <Row>\n        <Col lg=\"4\">\n          <Tooltip placement=\"topLeft\" title={this.props.description}>\n            <Input\n              className=\"form-control-alternative\"\n              placeholder=\"Name\"\n              type=\"text\"\n              defaultValue={this.props.name}\n              value={this.props.name}\n              onChange={this.handleNameChange}\n              disabled={false}\n            />\n          </Tooltip>\n        </Col>\n        \n        <Col lg=\"6\">\n          <Input\n            className=\"form-control-alternative\"\n            placeholder=\"Name\"\n            type=\"text\"\n            defaultValue={this.props.value}\n            value={this.props.value}\n            onChange={this.handleValueChange}\n            disabled={false}\n          />\n          <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n            <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n          </Popover>\n\n        </Col>\n        <Col lg=\"2\">\n          <Button\n            color=\"danger\"\n            key={this.props.name}\n            onClick={this.handleDelete}\n            size=\"sm\"\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\nclass MockCallbackBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      overrideChecked: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (this.props.eventParams) {\n      if (this.props.eventParams.headers || this.props.eventParams.body) {\n        this.setState({overrideChecked: true})\n      }\n    }\n    \n  }\n\n  handleOverrideChecked = (event) => {\n    this.setState({overrideChecked: event.target.checked})\n    if (!event.target.checked) {\n      this.handleOverrideValuesChange({})\n    }\n  }\n\n  handleOverrideValuesChange = (paramsObject) => {\n    // const paramsObject = {}\n    // paramsObject.header = this.getHeaderObject()\n    // paramsObject.body = this.state.body\n  \n    this.props.onChange(paramsObject)\n  }\n\n  render () {\n    return (\n      <>\n      <Row>\n        <Col>\n          <Checkbox checked={this.state.overrideChecked} onChange={this.handleOverrideChecked}>Override some parameters</Checkbox>\n        </Col>\n      </Row>\n      { this.state.overrideChecked?\n            <Row className='mt-3'>\n            <Col>\n              <FixedCallbackBuilder\n                eventParams={this.props.eventParams}\n                onChange={this.handleOverrideValuesChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n                responses={this.props.responses}\n                callbackRootParameters={this.props.callbackRootParameters}\n                resourceObject={this.props.resourceObject}\n              />\n            </Col>\n          </Row>\n        : null\n      }\n\n      </>\n    )\n  }\n}\n\nclass ParamsBuilder extends React.Component {\n  \n  componentDidMount = () => {\n    if (this.props.eventParams && !this.props.eventParams.statusCode) {\n      this.props.eventParams.statusCode = (new FactDataGenerator()).pickSuccessCodeFromResponsesObject(this.props.responses)\n      this.forceUpdate()\n    }\n  }\n  getResponseItems = () => {\n    let responseItems = []\n    for(let k in this.props.responses) {\n      if(k != 'default') {\n        const item = this.props.responses[k]\n        responseItems.push(<Option key={k} value={k}>{k}</Option>)\n      }\n    }\n    return responseItems\n  }\n\n  handleResponseSelect = (response) => {\n    this.props.eventParams.statusCode = response\n    this.forceUpdate()\n  }\n\n  render() {\n    if (this.props.eventType === 'FIXED_RESPONSE' || this.props.eventType === 'FIXED_ERROR_RESPONSE') {\n      return (\n        <>\n        <Row>\n          <Col>\n            <Card size=\"small\" title=\"Response Code\">\n              <Row>\n                <Col md=\"12\">\n                  <FormGroup>\n                    <Select\n                      value={this.props.eventParams.statusCode}\n                      onChange={this.handleResponseSelect}\n                    >\n                      {this.getResponseItems()}\n                    </Select>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row className='mt-2'>\n        <Col>\n        <FixedCallbackBuilder\n          eventParams={this.props.eventParams}\n          onChange={this.props.onChange}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters = {this.props.rootParameters}\n          responses={this.props.responses}\n          callbackRootParameters={this.props.callbackRootParameters}\n          resourceObject={this.props.resourceObject}\n        />\n        </Col>\n        </Row>\n        </>\n      )\n    }\n    else if (this.props.eventType === 'MOCK_RESPONSE' || this.props.eventType === 'MOCK_ERROR_RESPONSE') {\n      return (\n        <MockCallbackBuilder\n          eventParams={this.props.eventParams}\n          onChange={this.props.onChange}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters = {this.props.rootParameters}\n          responses={this.props.responses}\n          callbackRootParameters={this.props.callbackRootParameters}\n          resourceObject={this.props.resourceObject}\n        />\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nclass EventResponseBuilder extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedResource: null\n    };\n  }\n\n  // componentDidMount = () => {\n  //   console.log(this.props)\n  // }\n\n  // componentDidUpdate = () => {\n  //   console.log(this.props.event)\n  // }\n\n  successEventTypes = [\n    {\n      name: 'FIXED_RESPONSE',\n      title: 'Fixed Response'\n    },\n    {\n      name: 'MOCK_RESPONSE',\n      title: 'Mock Response'\n    }\n  ]\n\n  errorEventTypes = [\n    {\n      name: 'FIXED_ERROR_RESPONSE',\n      title: 'Fixed Error Response'\n    },\n    {\n      name: 'MOCK_ERROR_RESPONSE',\n      title: 'Mock Error Response'\n    }\n  ]\n\n  handleEventTypeSelect = (eventType) => {\n    this.props.event.type = eventType\n    this.handleEventChange()\n  }\n\n  handleEventChange = () => {\n    if (this.props.callbackObject) {\n      this.props.event.method = this.props.callbackObject.method\n      this.props.event.path = this.props.callbackObject.path\n    }\n\n    this.props.onChange(this.props.event)\n  }\n\n  getEventTypes = () => {\n    let eventTypes = this.successEventTypes\n    if (this.props.mode === 'validation') {\n      eventTypes = this.errorEventTypes\n    }\n    return eventTypes.map(item => {\n      return (\n        <Option key={item.name} value={item.name}>{item.title}</Option>\n      )\n    })\n  }\n\n  handleParamsChange = (newParams) => {\n    if (newParams) {\n      this.props.event.params = newParams\n    } else {\n      delete this.props.event.params\n    }\n    this.handleEventChange()\n  }\n\n  render() {\n\n    return (\n      <>\n        <div className=\"pl-lg-4\">\n          <Row>\n            <Col md=\"12\">\n              <FormGroup>\n                <label\n                  className=\"form-control-label\"\n                  htmlFor=\"input-address\"\n                >\n                  Event Type\n                </label>\n                <Select\n                  value={this.props.event.type}\n                  onChange={this.handleEventTypeSelect}\n                  disabled={(this.props.resource? false : true)}\n                >\n                  {this.getEventTypes()}\n                </Select>\n              </FormGroup>\n            </Col>\n          </Row>\n          <ParamsBuilder\n            eventType={this.props.event.type}\n            eventParams={this.props.event.params}\n            onChange={this.handleParamsChange}\n            resourceDefinition={this.props.resourceDefinition}\n            rootParameters = {this.props.rootParameters}\n            responses={this.props.responses}\n            callbackRootParameters={this.props.callbackRootParameters}\n            resourceObject={this.props.resourceObject}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EventResponseBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  FormGroup,\n  CardHeader,\n  Form,\n  Input,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n// core components\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport { Select } from 'antd';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport axios from 'axios';\nimport './fixAce.css';\nimport ConditionBuilder from './ConditionBuilder'\nimport EventBuilder from './EventBuilder'\nimport EventResponseBuilder from './EventResponseBuilder'\n\nconst { Option } = Select;\n\nclass ResourceSelector extends React.Component {\n\n  constructor() {\n    super();\n  }\n  resourceOptions = []\n\n  getResourceOptions = () => {\n    this.resourceOptions = []\n    if(this.props.openApiDefinition) {\n      let currentResourceGroup = ''\n      for ( let pathKey in this.props.openApiDefinition.paths ) {\n        for ( let methodKey in this.props.openApiDefinition.paths[pathKey]) {\n          let itemKey = JSON.stringify({\n            method: methodKey,\n            path: pathKey\n          })\n          switch(methodKey) {\n            case 'get':\n            case 'post':\n              // if (pathKey === '/parties/{Type}/{ID}' || pathKey === '/quotes' || pathKey === '/transfers') {\n                this.resourceOptions.push(<Option key={itemKey} value={itemKey}>{methodKey} {pathKey}</Option>)                \n              // }\n              break\n          }\n        }\n      }\n    }\n    return this.resourceOptions\n  }\n\n  getResourceValue = () => {\n    if(this.props.value) {\n      return JSON.stringify(this.props.value)\n    } else {\n      return null\n    }\n  }\n\n  render() {\n\n    const resourceSelectHandler = (eventKey) => {\n      this.props.onSelect(JSON.parse(eventKey))\n    }\n\n    return(\n      <>\n      <Select onChange={resourceSelectHandler}\n        disabled={(this.props.value? true : false)}\n        style={{ width: 300 }}\n        placeholder=\"Select a resource\"\n        value={this.getResourceValue()}\n      >\n      {this.getResourceOptions()}\n      </Select>\n      </>\n    )\n  }\n}\n\nclass ApiVersionSelector extends React.Component {\n\n  constructor() {\n    super();\n  }\n  apiVersionOptions = []\n\n  getApiVersionOptions = () => {\n    this.apiVersionOptions = this.props.apiVersions.map((item, index) => {\n      return (\n        <Option key={index} value={JSON.stringify(item)}>{item.type} {item.majorVersion}.{item.minorVersion}</Option>\n      )\n    })\n    return this.apiVersionOptions\n  }\n\n  getApiVersionValue = () => {\n    if(this.props.value) {\n      return JSON.stringify(this.props.value)\n    } else {\n      return null\n    }\n  }\n\n  render() {\n\n    const apiVersionSelectHandler = (eventKey) => {\n      this.props.onSelect(JSON.parse(eventKey))\n    }\n\n    return(\n      <>\n      <Select onChange={apiVersionSelectHandler}\n        disabled={(this.props.value? true : false)}\n        style={{ width: 300 }}\n        placeholder=\"Select an API\"\n        value={this.getApiVersionValue()}\n      >\n      {this.getApiVersionOptions()}\n      </Select>\n      </>\n    )\n  }\n}\n\nclass RulesEditor extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      origJson: [],\n      curJson: {},\n      description: '',\n      event: {},\n      conditions: [],\n      pathMethodConditions: [],\n      apiVersions: [],\n      openApiDefinition: null,\n      selectedResource: null,\n      selectedApiVersion: null,\n      callbackMap: {},\n      responseMap: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    const apiVersions = await this.getApiVersions()\n\n    \n    // Deep clone the input rule to a new object to work with (Copying without object references recursively)\n    const inputRule = JSON.parse(JSON.stringify(this.props.rule))\n    let selectedResource = null\n    try {\n      const pathObject = inputRule.conditions.all.find(item => (item.fact === 'operationPath'))\n      const methodObject = inputRule.conditions.all.find(item => (item.fact === 'method'))\n      if(pathObject && methodObject) {\n        selectedResource = {\n          method: methodObject.value,\n          path: pathObject.value\n        }\n      }\n    } catch(err) {}\n\n    let pathMethodConditions = []\n    let conditions = []\n    try {\n      pathMethodConditions = inputRule.conditions.all.filter(item => {\n        if(item.fact === 'method' || item.fact === 'operationPath') {\n          return true\n        } else {\n          return false\n        }\n      })\n      conditions = inputRule.conditions.all.filter(item => {\n        if(item.fact === 'method' || item.fact === 'operationPath') {\n          return false\n        } else {\n          return true\n        }\n      })\n    } catch(err){}\n\n    let event = {\n      method: null,\n      path: null,\n      params: {},\n      delay: 0\n    }\n    if (inputRule.event) {\n      event = inputRule.event\n    }\n\n    let description = ''\n    if (inputRule.description) {\n      description = inputRule.description\n    }\n\n    let selectedApiVersion = null\n    if(inputRule.apiVersion) {\n        selectedApiVersion = inputRule.apiVersion\n        await this.fetchAllApiData(inputRule.apiVersion.type, inputRule.apiVersion.majorVersion+'.'+inputRule.apiVersion.minorVersion)\n    }\n\n    this.setState({description, conditions, pathMethodConditions, event, selectedResource, apiVersions, selectedApiVersion})\n  }\n\n  fetchAllApiData = async (apiType, version) => {\n    const openApiDefinition = await this.getDefinition(apiType, version)\n    let callbackMap = {}\n    try {\n      callbackMap = await this.getCallbackMap(apiType, version)\n    } catch(err) {}\n\n    let responseMap = {}\n    try {\n      responseMap = await this.getResponseMap(apiType, version)\n    } catch(err) {}\n    this.setState({openApiDefinition, callbackMap, responseMap})\n  }\n\n  getConditions = () => {\n    return this.state.conditions\n  }\n\n  getPathMethodConditions = () => {\n    return this.state.pathMethodConditions\n  }\n\n  getEvent = () => {\n    return this.state.event\n  }\n  // async componentWillMount() {\n  //   await this.getDefinition()\n  //   await this.getCallbackMap()\n  // }\n\n  getRule = () => {\n    const rule = {\n      description: this.state.description ? this.state.description : this.state.selectedResource.method + ' ' + this.state.selectedResource.path,\n      apiVersion: this.state.selectedApiVersion,\n      conditions: {\n        \"all\": [...this.state.conditions, ...this.state.pathMethodConditions]\n      },\n      event: this.state.event,\n    }\n    return JSON.stringify(rule, null, 2)\n  }\n\n  handleConditionsChange = () => {\n    this.forceUpdate()\n    // this.setState({conditions});\n  };\n\n  handleEventChange = (event) => {\n    this.setState({event});\n  };\n\n  getApiVersions = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/api_versions\")\n    return response.data\n  }\n\n  getDefinition = async (apiType, version) => {\n    const response = await axios.get(`http://localhost:5050/api/openapi/definition/${apiType}/${version}`)\n    // console.log(response.data)\n    return response.data\n    // this.setState(  { openApiDefinition: response.data } )\n  }\n\n  getResponseMap = async (apiType, version) => {\n    const response = await axios.get(`http://localhost:5050/api/openapi/response_map/${apiType}/${version}`)\n    return response.data\n    // this.setState(  { callbackMap: response.data } )\n  }\n\n  getCallbackMap = async (apiType, version) => {\n    const response = await axios.get(`http://localhost:5050/api/openapi/callback_map/${apiType}/${version}`)\n    return response.data\n    // this.setState(  { callbackMap: response.data } )\n  }\n\n  handleSave = () => {\n    // const newJson = this.refs.editor.jsonEditor.get()\n    // // this.setState( { curJson: [ ...newJson ]} )\n    // axios.put(\"http://localhost:5050/api/rules/callback\", newJson, { headers: { 'Content-Type': 'application/json' } })\n    this.props.onSave(JSON.parse(this.getRule()))\n  }\n\n  apiVersionSelectHandler = (apiVersion) => {\n    this.fetchAllApiData(apiVersion.type, apiVersion.majorVersion+'.'+apiVersion.minorVersion)\n    // this.state.pathMethodConditions = []\n    // this.state.pathMethodConditions.push({\n    //   fact: 'operationPath',\n    //   operator: 'equal',\n    //   value: apiVersion.path\n    // })\n    // this.state.pathMethodConditions.push({\n    //   fact: 'method',\n    //   operator: 'equal',\n    //   value: apiVersion.method\n    // })\n    // const newApiVersion = {\n    //   type: apiVersion.type,\n    //   version: apiVersion.majorVersion+'.'+apiVersion.minorVersion\n    // }\n    this.setState({selectedApiVersion: apiVersion})\n  }\n\n  resourceSelectHandler = (resource) => {\n    this.state.pathMethodConditions = []\n    this.state.pathMethodConditions.push({\n      fact: 'operationPath',\n      operator: 'equal',\n      value: resource.path\n    })\n    this.state.pathMethodConditions.push({\n      fact: 'method',\n      operator: 'equal',\n      value: resource.method\n    })\n    this.setState({selectedResource: resource})\n  }\n\n  getResourceDefinition = () => {\n    if (this.state.selectedResource && this.state.openApiDefinition) {\n      return this.state.openApiDefinition.paths[this.state.selectedResource.path][this.state.selectedResource.method]\n    }\n    return null\n  }\n  getRootParameters = () => {\n    var rootParams = []\n    if (this.state.selectedResource && this.state.openApiDefinition) {\n      rootParams = this.state.openApiDefinition.paths[this.state.selectedResource.path].parameters\n    }\n    return rootParams\n  }\n\n  getCallbackObject = () => {\n      let callbackObj = null\n      try {\n        if(this.props.mode === 'validation') {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['errorCallback']\n        } else {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['successCallback']\n        }\n      } catch(err){\n      }\n      return callbackObj\n  }\n\n  getCallbackRootParameters = () => {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path].parameters\n      } catch(err) {\n        return []\n      }\n \n  }\n\n  getCallbackDefinition = () => {\n    if (this.state.selectedResource) {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path][callbackObj.method]\n      } catch(err) {\n        return null\n      }\n    }\n    return null\n  }\n\n  getResponseObject = () => {\n    let responseObj = null\n    try {\n      responseObj = this.state.responseMap[this.state.selectedResource.path][this.state.selectedResource.method]['response']\n    } catch(err){\n    }\n    return responseObj\n  }\n\n  getResponses = () => {\n    if (this.state.selectedResource) {\n      try {\n        const responseObj = this.getResponseObject()\n        return this.state.openApiDefinition.paths[this.state.selectedResource.path][this.state.selectedResource.method].responses\n      } catch(err) {\n        return null\n      }\n    }\n    return null\n  }\n\n  handleDescriptionChange = (newValue) => {\n    this.setState({description: newValue})\n  }\n\n  render() {\n    return (\n      <>\n          <Row>\n            {/* <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"6\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex float-right\">\n                    <Button\n                      className=\"float-right\"\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={this.handleSave}\n                      size=\"sm\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <div className=\"text-left\">\n                    <pre>{this.getRule()}</pre>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col> */}\n            <Col className=\"order-xl-1\" xl=\"12\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"2\">\n                      <h3 className=\"mb-0\">Rule #{this.props.rule.ruleId}</h3>\n                    </Col>\n                    <Col xs=\"6\" className=\"text-center\">\n                      <table>\n                        <tbody>\n                        <tr>\n                          <td align='right'><b>API:</b></td>\n                          <td>\n                            <ApiVersionSelector value={this.state.selectedApiVersion} apiVersions={this.state.apiVersions} onSelect={this.apiVersionSelectHandler} />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td align='right'><b>Resource:</b></td>\n                          <td>\n                            <ResourceSelector value={this.state.selectedResource} openApiDefinition={this.state.openApiDefinition} onSelect={this.resourceSelectHandler} />\n                          </td>\n                        </tr>\n                        </tbody>\n                      </table>\n                    </Col>\n                    <Col xs=\"4\">\n                      <Row className=\"text-right float-right\">\n                        <Col>\n                          <Button\n                            color=\"danger\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                            size=\"sm\"\n                          >\n                            Reset\n                          </Button>\n                        </Col>\n                        <Col>\n                          <Button\n                            className=\"float-right\"\n                            color=\"primary\"\n                            href=\"#pablo\"\n                            onClick={this.handleSave}\n                            size=\"sm\"\n                          >\n                            Save\n                          </Button>\n                        </Col>\n                      </Row>\n\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Conditions\n                    </h6>\n                    <div className=\"pl-lg-4\">\n\n                      <ConditionBuilder\n                        conditions={this.getConditions()}\n                        pathMethodConditions={this.getPathMethodConditions()}\n                        onChange={this.handleConditionsChange} \n                        openApiDefinition={this.state.openApiDefinition}\n                        resource={this.state.selectedResource}\n                        resourceDefinition={this.getResourceDefinition()}\n                        rootParameters={this.getRootParameters()}\n                      />\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Event\n                    </h6>\n                    {\n                      this.props.mode === 'response'\n                      ? (\n                        <EventResponseBuilder\n                          event={this.getEvent()}\n                          onChange={this.handleEventChange}\n                          resource={this.state.selectedResource}\n                          resourceDefinition={this.getResourceDefinition()}\n                          rootParameters={this.getRootParameters()}\n                          responses={this.getResponses()}\n                          callbackRootParameters={this.getCallbackRootParameters()}\n                          responseObject={this.getResponseObject()}\n                          mode={this.props.mode}\n                        />\n                      )\n                      : (\n                        <EventBuilder\n                          event={this.getEvent()}\n                          onChange={this.handleEventChange}\n                          resource={this.state.selectedResource}\n                          resourceDefinition={this.getResourceDefinition()}\n                          rootParameters={this.getRootParameters()}\n                          callbackDefinition={this.getCallbackDefinition()}\n                          callbackRootParameters={this.getCallbackRootParameters()}\n                          callbackObject={this.getCallbackObject()}\n                          mode={this.props.mode}\n                        />\n                      )\n                    }\n\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">Rule Details</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>Rule Description</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about the rule ...\"\n                          onChange={(e) => this.handleDescriptionChange(e.target.value)}\n                          rows=\"4\"\n                          value={this.state.description}\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n      </>\n    );\n  }\n}\n\nexport default RulesEditor;\n","import React from \"react\";\n\nimport { Card, Tag, Icon, Button, Row, Col } from 'antd';\n\nclass RuleViewer extends React.Component {\n\n  render () {\n    const inputRule = this.props.rule\n    let resource = {}\n    let conditions = []\n    try {\n      const pathCondition = inputRule.conditions.all.find(item => {\n        if(item.fact === 'operationPath') {\n          return true\n        } else {\n          return false\n        }\n      })\n      if(pathCondition) {\n        resource.path = pathCondition.value\n      }\n      const methodCondition = inputRule.conditions.all.find(item => {\n        if(item.fact === 'method') {\n          return true\n        } else {\n          return false\n        }\n      })\n      if(methodCondition) {\n        resource.method = methodCondition.value\n      }\n\n      conditions = inputRule.conditions.all.filter(item => {\n        if(item.fact === 'method' || item.fact === 'operationPath') {\n          return false\n        } else {\n          return true\n        }\n      })\n    } catch(err){}\n\n    const conditionItems = conditions.map(item => {\n      return (\n        <>\n        <Card size=\"small\" className=\"mt-1\" >\n          <Tag color=\"cyan\">{item.fact}.{item.path}</Tag>\n          <Tag>{item.operator}</Tag>\n          <Tag color=\"blue\">{item.value}</Tag>\n          </Card>\n        </>\n      )\n    })\n\n    return (\n      <>\n        <table width='100%' cellPadding=\"5px\">\n          <tbody>\n            <tr>\n              <td className=\"align-text-top\" width='25px'>\n                  <Icon type=\"double-right\" style={{ fontSize: '20px', color: '#08c' }}></Icon>\n              </td>\n              <td>\n                <h3>{resource.method.toUpperCase()+' '+resource.path}</h3>\n              </td>\n            </tr>\n            {\n              conditions.length > 0\n              ? (\n                <tr>\n                  <td className=\"align-text-top\">\n                    <Icon type=\"question\" style={{ fontSize: '20px', color: '#08c' }}></Icon>\n                  </td>\n                  <td>\n                    <h3>Conditions</h3>\n                    {conditionItems}\n                  </td>\n                </tr>\n              )\n              : null\n            }\n            <tr>\n              <td className=\"align-text-top\">\n                <Icon type=\"double-left\" style={{ fontSize: '20px', color: '#08c' }}></Icon>\n              </td>\n              <td>\n                <h3>Event</h3>\n                {\n                  Object.entries(inputRule.event.params).length > 0\n                  ? (\n                    <Card size=\"small\" className=\"mt-4\" title={inputRule.event.type}>\n                      <pre>{JSON.stringify(inputRule.event.params, null, 2)}</pre>\n                    </Card>\n                  )\n                  : inputRule.event.type\n                }\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </>\n    )\n  }\n}\n\nexport default RuleViewer;","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n\nimport { Input, Select, Menu, Collapse, Modal, Icon, message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from 'axios';\nimport RulesEditor from './RuleEditor'\nimport RuleViewer from './RuleViewer'\n\nconst { Option } = Select;\nconst { SubMenu } = Menu;\nconst { Panel } = Collapse;\n\n\nclass RulesResponse extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      responseRulesFiles: [],\n      activeRulesFile: null,\n      selectedRuleFile: null,\n      curRules: [],\n      editRule: null,\n      mode: null\n    };\n  }\n\n  componentDidMount() {\n    this.getResponseRulesFiles()\n  }\n\n  getResponseRulesFiles = async () => {\n    message.loading({ content: 'Getting rules files...', key: 'getFilesProgress' });\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/response\")\n    if(typeof response.data === 'object') {\n      const activeRulesFile = response.data.activeRulesFile\n      await this.setState(  { responseRulesFiles: response.data.files, activeRulesFile } )\n      message.success({ content: 'Loaded', key: 'getFilesProgress', duration: -1 });\n      // Select the active rules file by default\n      await this.setState({selectedRuleFile: activeRulesFile, ruleItemActive: null})\n    } \n    this.updateRulesFileDisplay()\n  }\n\n  getResponseRulesFileContent = async (ruleFile) => {\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/response/\" + ruleFile)\n    let curRules = []\n    if (response.data && Array.isArray(response.data)) {\n      curRules = response.data\n    }\n    this.setState(  { curRules } )\n  }\n\n  getRulesFilesItems = () => {\n    return this.state.responseRulesFiles.map(ruleFile => {\n      const isActive = (ruleFile === this.state.activeRulesFile)\n      return (\n      <Menu.Item key={ruleFile}>{isActive?(<Icon type=\"check\" />):''} {ruleFile}</Menu.Item>\n      )\n    })\n  }\n\n  handleRuleFileSelect = async (selectedItem) => {\n    const selectedRuleFile = selectedItem.key\n    await this.setState({selectedRuleFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  updateRulesFileDisplay = () => {\n    this.getResponseRulesFileContent(this.state.selectedRuleFile)\n  }\n\n  getRulesFileContentItems = () => {\n    return this.state.curRules.map((rule, key) => {\n      return (\n        <Panel header={rule.description} key={key}>\n          <Row>\n            <Col xs=\"12\" style={{textAlign: 'right'}}>\n              <Button\n                color=\"info\"\n                onClick={this.handleRuleClick(rule)}\n                size=\"sm\"\n              >\n                Edit\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={this.handleRuleDelete(rule.ruleId)}\n                size=\"sm\"\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <RuleViewer rule={rule} />\n            </Col>\n          </Row>\n        </Panel>\n      )\n    })\n  }\n\n  handleRuleClick = (tRule={}) => {\n    // console.log(rule)\n    return () => {\n      this.setState({editRule: tRule, mode: 'edit'})\n    }\n  }\n\n  handleAddNewRuleClick = () => {\n    // Calculate the new rule ID which is the next number of the highest rule ID in the list\n    const highestRule = this.state.curRules.reduce((prevItem, item) => {\n      return (prevItem.ruleId > item.ruleId ? prevItem : item)\n    }, this.state.curRules[0])\n\n    let newRuleId = 1\n    if (highestRule) {\n      newRuleId = highestRule.ruleId + 1\n    }\n    \n    const tRule = {\n      ruleId: newRuleId,\n      priority: 1\n    }\n\n    this.setState({editRule: tRule, mode: 'create'})\n  }\n\n  handleRuleCancelClick = () => {\n    this.setState({editRule: null})\n  }\n\n  handleRuleSave = async (newRule) => {\n    const newRuleFull = {\n      ruleId: this.state.editRule.ruleId,\n      priority: this.state.editRule.priority,\n      ...newRule\n    }\n\n    let updatedRules = null\n    if(this.state.mode == 'create') {\n      updatedRules = this.state.curRules.concat(newRuleFull)\n    } else if(this.state.mode == 'edit') {\n      updatedRules = this.state.curRules.map(item => {\n        if (item.ruleId === newRuleFull.ruleId) {\n          return newRuleFull\n        } else {\n          return item\n        }\n      })\n    }\n\n    if (updatedRules) {\n      message.loading({ content: 'Saving the rule...', key: 'ruleSaveProgress' });\n      await axios.put(\"http://localhost:5050/api/rules/files/response/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n      this.setState({editRule: null, curRules: updatedRules})\n      message.success({ content: 'Saved', key: 'ruleSaveProgress', duration: 2 });\n    }\n  }\n\n  handleRuleDelete = (ruleId) => {\n    return async () => {\n      const updatedRules = this.state.curRules.filter(item => {\n        return item.ruleId !== ruleId\n      })\n      if (updatedRules) {\n        message.loading({ content: 'Deleting rule...', key: 'deleteProgress' });\n        await axios.put(\"http://localhost:5050/api/rules/files/response/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n        message.success({ content: 'Deleted', key: 'deleteProgress', duration: 2 });\n        this.setState({editRule: null, curRules: updatedRules})\n      }\n    }\n  }\n\n  handleNewRulesFileClick = async (fileName) => {\n    message.loading({ content: 'Creating new file...', key: 'fileNewProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/response/\" + fileName)\n    await this.getResponseRulesFiles()\n    await this.setState({selectedRuleFile: fileName, ruleItemActive: null})\n    message.success({ content: 'Created', key: 'fileNewProgress', duration: 2 });\n    this.updateRulesFileDisplay()\n  }\n\n  handleRuleFileDelete = async () => {\n    message.loading({ content: 'Deleting file...', key: 'deleteFileProgress' });\n    await axios.delete(\"http://localhost:5050/api/rules/files/response/\" + this.state.selectedRuleFile)\n    await this.getResponseRulesFiles()\n    await this.setState({selectedRuleFile: null, ruleItemActive: null})\n    message.success({ content: 'Deleted', key: 'deleteFileProgress', duration: 2 });\n  }\n\n  handleRuleFileSetActive = async () => {\n    message.loading({ content: 'Activating rule file...', key: 'activateFileProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/response\", { type: 'activeRulesFile', fileName: this.state.selectedRuleFile }, { headers: { 'Content-Type': 'application/json' } })\n    await this.getResponseRulesFiles()\n    this.updateRulesFileDisplay()\n    message.success({ content: 'Activated', key: 'activateFileProgress', duration: 2 });\n  }\n\n\n  render() {\n    var newFileName = ''\n    var newFileNameErrorMessage = ''\n    const newFileCreateConfirm = () => {\n      // Validate filename format\n      // TODO: Some additional validation for the filename format\n      if (!newFileName.endsWith('.json')) {\n        message.error('Filename should be ended with .json');\n        return\n      }\n\n      if (/\\s/.test(newFileName)) {\n        message.error('Filename contains spaces');\n        return\n      }\n\n      this.setState({ mode: null})\n      this.handleNewRulesFileClick(newFileName)\n    }\n\n    return (\n      <>\n          <Modal\n            centered\n            destroyOnClose\n            forceRender\n            title=\"Rule Builder\"\n            className=\"w-50 p-3\"\n            visible={this.state.editRule? true : false}\n            footer={null}\n            onCancel={this.handleRuleCancelClick}\n          >\n            <RulesEditor\n              rule={this.state.editRule}\n              onSave={this.handleRuleSave}\n              mode='response'\n            />\n          </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      onClick={() => {this.setState({ mode: 'newFile'})}}\n                      size=\"sm\"\n                    >\n                      New Rules File\n                    </Button>\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          color=\"success\"\n                          onClick={this.handleRuleFileSetActive}\n                          size=\"sm\"\n                        >\n                          Set as active\n                        </Button>\n                      )\n                      : null\n                    }\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          className=\"float-right\"\n                          color=\"danger\"\n                          onClick={this.handleRuleFileDelete}\n                          size=\"sm\"\n                        >\n                          Delete\n                        </Button>\n                      )\n                      : null\n                    }\n                  </div>\n                  {\n                    (this.state.mode === 'newFile') ?\n                    (\n                      <table className=\"mt-2\">\n                      <tbody>\n                      <tr><td>\n                        <Input\n                          placeholder=\"File Name\"\n                          type=\"text\"\n                          onChange={(e) => { newFileName = e.target.value }}\n                        />\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={newFileCreateConfirm}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"check\" />\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={() => {this.setState({ mode: null})}}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"close\" />\n                        </Button>\n                      </td>\n                      </tr>\n                      </tbody>\n                      </table>\n                    )\n                    : null\n                  }\n\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Menu\n                    mode=\"inline\"\n                    theme=\"light\"\n                    selectedKeys={[this.state.selectedRuleFile]}\n                    onSelect={this.handleRuleFileSelect}\n                  >\n                    {this.getRulesFilesItems()}\n                  </Menu>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            {\n              this.state.selectedRuleFile\n              ? (\n                <Card className=\"bg-secondary shadow\">\n                  <CardHeader className=\"bg-white border-0\">\n                    <Row className=\"align-items-center\">\n                      <Col xs=\"6\">\n                        <h3 className=\"mb-0\">{this.state.selectedRuleFile}</h3>\n                      </Col>\n                      <Col className=\"text-right\" xs=\"6\">\n                        <Button\n                          color=\"info\"\n                          href=\"#pablo\"\n                          onClick={this.handleAddNewRuleClick}\n                          size=\"sm\"\n                        >\n                          Add a new Rule\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Collapse\n                      onChange={this.handleRuleItemActivePanelChange}\n                    >\n                      {this.getRulesFileContentItems()}\n                    </Collapse>\n                  </CardBody>\n                </Card>\n              )\n              : (\n                <Card className=\"bg-secondary shadow\" style={{minHeight: '300px'}}>\n                  <CardHeader className=\"bg-white border-0\"></CardHeader>\n                  <CardBody>\n                  <Row>\n                    <Col xs=\"12\" style={{textAlign: 'center'}}>\n                      <p>Please select a file</p>\n                    </Col>\n                  </Row>\n                  </CardBody>\n                </Card>\n              )\n            }\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default RulesResponse;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n\nimport { Input, Select, Menu, Collapse, Modal, Icon, message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from 'axios';\nimport RulesEditor from './RuleEditor'\nimport RuleViewer from './RuleViewer'\n\nconst { Option } = Select;\nconst { SubMenu } = Menu;\nconst { Panel } = Collapse;\n\n\nclass RulesValidation extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      validationRulesFiles: [],\n      activeRulesFile: null,\n      selectedRuleFile: null,\n      curRules: [],\n      editRule: null,\n      mode: null\n    };\n  }\n\n  componentDidMount() {\n    this.getValidationRulesFiles()\n  }\n\n  getValidationRulesFiles = async () => {\n    message.loading({ content: 'Getting rules files...', key: 'getFilesProgress' });\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/validation\")\n    const activeRulesFile = response.data.activeRulesFile\n    await this.setState(  { validationRulesFiles: response.data.files, activeRulesFile } )\n    message.success({ content: 'Loaded', key: 'getFilesProgress', duration: -1 });\n\n    // Select the active rules file by default\n    await this.setState({selectedRuleFile: activeRulesFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n\n  }\n\n  getValidationRulesFileContent = async (ruleFile) => {\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/validation/\" + ruleFile)\n    let curRules = []\n    if (response.data && Array.isArray(response.data)) {\n      curRules = response.data\n    }\n    this.setState(  { curRules } )\n  }\n\n  getRulesFilesItems = () => {\n    return this.state.validationRulesFiles.map(ruleFile => {\n      const isActive = (ruleFile === this.state.activeRulesFile)\n      return (\n      <Menu.Item key={ruleFile}>{isActive?(<Icon type=\"check\" />):''} {ruleFile}</Menu.Item>\n      )\n    })\n  }\n\n  handleRuleFileSelect = async (selectedItem) => {\n    const selectedRuleFile = selectedItem.key\n    await this.setState({selectedRuleFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  updateRulesFileDisplay = () => {\n    this.getValidationRulesFileContent(this.state.selectedRuleFile)\n  }\n\n  getRulesFileContentItems = () => {\n    return this.state.curRules.map((rule, key) => {\n      return (\n        <Panel header={rule.description} key={key}>\n          <Row>\n            <Col xs=\"12\" style={{textAlign: 'right'}}>\n              <Button\n                color=\"info\"\n                onClick={this.handleRuleClick(rule)}\n                size=\"sm\"\n              >\n                Edit\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={this.handleRuleDelete(rule.ruleId)}\n                size=\"sm\"\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <RuleViewer rule={rule} />\n            </Col>\n          </Row>\n        </Panel>\n      )\n    })\n  }\n\n  handleRuleClick = (tRule={}) => {\n    // console.log(rule)\n    return () => {\n      this.setState({editRule: tRule, mode: 'edit'})\n    }\n  }\n\n  handleAddNewRuleClick = () => {\n    // Calculate the new rule ID which is the next number of the highest rule ID in the list\n    const highestRule = this.state.curRules.reduce((prevItem, item) => {\n      return (prevItem.ruleId > item.ruleId ? prevItem : item)\n    }, this.state.curRules[0])\n\n    let newRuleId = 1\n    if (highestRule) {\n      newRuleId = highestRule.ruleId + 1\n    }\n    \n    const tRule = {\n      ruleId: newRuleId,\n      priority: 1\n    }\n\n    this.setState({editRule: tRule, mode: 'create'})\n  }\n\n  handleRuleCancelClick = () => {\n    this.setState({editRule: null})\n  }\n\n  handleRuleSave = async (newRule) => {\n    const newRuleFull = {\n      ruleId: this.state.editRule.ruleId,\n      priority: this.state.editRule.priority,\n      ...newRule\n    }\n\n    let updatedRules = null\n    if(this.state.mode == 'create') {\n      updatedRules = this.state.curRules.concat(newRuleFull)\n    } else if(this.state.mode == 'edit') {\n      updatedRules = this.state.curRules.map(item => {\n        if (item.ruleId === newRuleFull.ruleId) {\n          return newRuleFull\n        } else {\n          return item\n        }\n      })\n    }\n\n    if (updatedRules) {\n      message.loading({ content: 'Saving the rule...', key: 'ruleSaveProgress' });\n      await axios.put(\"http://localhost:5050/api/rules/files/validation/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n      await this.setState({editRule: null, curRules: updatedRules})\n      message.success({ content: 'Saved', key: 'ruleSaveProgress', duration: 2 });\n    }\n  }\n\n  handleRuleDelete = (ruleId) => {\n    return async () => {\n      const updatedRules = this.state.curRules.filter(item => {\n        return item.ruleId !== ruleId\n      })\n      if (updatedRules) {\n        message.loading({ content: 'Deleting rule...', key: 'deleteProgress' });\n        await axios.put(\"http://localhost:5050/api/rules/files/validation/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n        message.success({ content: 'Deleted', key: 'deleteProgress', duration: 2 });\n        this.setState({editRule: null, curRules: updatedRules})\n      }\n    }\n  }\n\n  handleNewRulesFileClick = async (fileName) => {\n    message.loading({ content: 'Creating new file...', key: 'fileNewProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/validation/\" + fileName)\n    await this.getValidationRulesFiles()\n    await this.setState({selectedRuleFile: fileName, ruleItemActive: null})\n    message.success({ content: 'Created', key: 'fileNewProgress', duration: 2 });\n    this.updateRulesFileDisplay()\n  }\n\n  handleRuleFileDelete = async () => {\n    message.loading({ content: 'Deleting file...', key: 'deleteFileProgress' });\n    await axios.delete(\"http://localhost:5050/api/rules/files/validation/\" + this.state.selectedRuleFile)\n    await this.getValidationRulesFiles()\n    await this.setState({selectedRuleFile: null, ruleItemActive: null})\n    message.success({ content: 'Deleted', key: 'deleteFileProgress', duration: 2 });\n  }\n\n  handleRuleFileSetActive = async () => {\n    message.loading({ content: 'Activating rule file...', key: 'activateFileProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/validation\", { type: 'activeRulesFile', fileName: this.state.selectedRuleFile }, { headers: { 'Content-Type': 'application/json' } })\n    await this.getValidationRulesFiles()\n    this.updateRulesFileDisplay()\n    message.success({ content: 'Activated', key: 'activateFileProgress', duration: 2 });\n  }\n\n\n  render() {\n    var newFileName = ''\n    var newFileNameErrorMessage = ''\n    const newFileCreateConfirm = () => {\n      // Validate filename format\n      // TODO: Some additional validation for the filename format\n      if (!newFileName.endsWith('.json')) {\n        message.error('Filename should be ended with .json');\n        return\n      }\n\n      if (/\\s/.test(newFileName)) {\n        message.error('Filename contains spaces');\n        return\n      }\n\n      this.setState({ mode: null})\n      this.handleNewRulesFileClick(newFileName)\n    }\n\n    return (\n      <>\n          <Modal\n            centered\n            destroyOnClose\n            forceRender\n            title=\"Rule Builder\"\n            className=\"w-50 p-3\"\n            visible={this.state.editRule? true : false}\n            footer={null}\n            onCancel={this.handleRuleCancelClick}\n          >\n            <RulesEditor\n              rule={this.state.editRule}\n              onSave={this.handleRuleSave}\n              mode='validation'\n            />\n          </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      onClick={() => {this.setState({ mode: 'newFile'})}}\n                      size=\"sm\"\n                    >\n                      New Rules File\n                    </Button>\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          color=\"success\"\n                          onClick={this.handleRuleFileSetActive}\n                          size=\"sm\"\n                        >\n                          Set as active\n                        </Button>\n                      )\n                      : null\n                    }\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          className=\"float-right\"\n                          color=\"danger\"\n                          onClick={this.handleRuleFileDelete}\n                          size=\"sm\"\n                        >\n                          Delete\n                        </Button>\n                      )\n                      : null\n                    }\n                  </div>\n                  {\n                    (this.state.mode === 'newFile') ?\n                    (\n                      <table className=\"mt-2\">\n                      <tbody>\n                      <tr><td>\n                        <Input\n                          placeholder=\"File Name\"\n                          type=\"text\"\n                          onChange={(e) => { newFileName = e.target.value }}\n                        />\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={newFileCreateConfirm}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"check\" />\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={() => {this.setState({ mode: null})}}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"close\" />\n                        </Button>\n                      </td>\n                      </tr>\n                      </tbody>\n                      </table>\n                    )\n                    : null\n                  }\n\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Menu\n                    mode=\"inline\"\n                    theme=\"light\"\n                    selectedKeys={[this.state.selectedRuleFile]}\n                    onSelect={this.handleRuleFileSelect}\n                  >\n                    {this.getRulesFilesItems()}\n                  </Menu>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            {\n              this.state.selectedRuleFile\n              ? (\n                <Card className=\"bg-secondary shadow\">\n                  <CardHeader className=\"bg-white border-0\">\n                    <Row className=\"align-items-center\">\n                      <Col xs=\"6\">\n                        <h3 className=\"mb-0\">{this.state.selectedRuleFile}</h3>\n                      </Col>\n                      <Col className=\"text-right\" xs=\"6\">\n                        <Button\n                          color=\"info\"\n                          href=\"#pablo\"\n                          onClick={this.handleAddNewRuleClick}\n                          size=\"sm\"\n                        >\n                          Add a new Rule\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Collapse\n                      onChange={this.handleRuleItemActivePanelChange}\n                    >\n                      {this.getRulesFileContentItems()}\n                    </Collapse>\n                  </CardBody>\n                </Card>\n              )\n              : (\n                <Card className=\"bg-secondary shadow\" style={{minHeight: '300px'}}>\n                  <CardHeader className=\"bg-white border-0\"></CardHeader>\n                  <CardBody>\n                  <Row>\n                    <Col xs=\"12\" style={{textAlign: 'center'}}>\n                      <p>Please select a file</p>\n                    </Col>\n                  </Row>\n                  </CardBody>\n                </Card>\n              )\n            }\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default RulesValidation;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n\nimport { Input, Select, Menu, Collapse, Modal, Icon, message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from 'axios';\nimport RulesEditor from './RuleEditor'\nimport RuleViewer from './RuleViewer'\n\nconst { Option } = Select;\nconst { SubMenu } = Menu;\nconst { Panel } = Collapse;\n\n\nclass RulesCallback extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      callbackRulesFiles: [],\n      activeRulesFile: null,\n      selectedRuleFile: null,\n      curRules: [],\n      editRule: null,\n      mode: null\n    };\n  }\n\n  componentDidMount() {\n    this.getCallbackRulesFiles()\n  }\n\n  getCallbackRulesFiles = async () => {\n    message.loading({ content: 'Getting rules files...', key: 'getFilesProgress' });\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/callback\")\n    const activeRulesFile = response.data.activeRulesFile\n    await this.setState(  { callbackRulesFiles: response.data.files, activeRulesFile } )\n    message.success({ content: 'Loaded', key: 'getFilesProgress', duration: -1 });\n\n    // Select the active rules file by default\n    await this.setState({selectedRuleFile: activeRulesFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  getCallbackRulesFileContent = async (ruleFile) => {\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/callback/\" + ruleFile)\n    let curRules = []\n    if (response.data && Array.isArray(response.data)) {\n      curRules = response.data\n    }\n    this.setState(  { curRules } )\n  }\n\n  getRulesFilesItems = () => {\n    return this.state.callbackRulesFiles.map(ruleFile => {\n      const isActive = (ruleFile === this.state.activeRulesFile)\n      return (\n      <Menu.Item key={ruleFile}>{isActive?(<Icon type=\"check\" />):''} {ruleFile}</Menu.Item>\n      )\n    })\n  }\n\n  handleRuleFileSelect = async (selectedItem) => {\n    const selectedRuleFile = selectedItem.key\n    await this.setState({selectedRuleFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  updateRulesFileDisplay = () => {\n    this.getCallbackRulesFileContent(this.state.selectedRuleFile)\n  }\n\n  getRulesFileContentItems = () => {\n    return this.state.curRules.map((rule, key) => {\n      return (\n        <Panel header={rule.description} key={key}>\n          <Row>\n            <Col xs=\"12\" style={{textAlign: 'right'}}>\n              <Button\n                color=\"info\"\n                onClick={this.handleRuleClick(rule)}\n                size=\"sm\"\n              >\n                Edit\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={this.handleRuleDelete(rule.ruleId)}\n                size=\"sm\"\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <RuleViewer rule={rule} />\n            </Col>\n          </Row>\n        </Panel>\n      )\n    })\n  }\n\n  handleRuleClick = (tRule={}) => {\n    // console.log(rule)\n    return () => {\n      this.setState({editRule: tRule, mode: 'edit'})\n    }\n  }\n\n  handleAddNewRuleClick = () => {\n    // Calculate the new rule ID which is the next number of the highest rule ID in the list\n    const highestRule = this.state.curRules.reduce((prevItem, item) => {\n      return (prevItem.ruleId > item.ruleId ? prevItem : item)\n    }, this.state.curRules[0])\n\n    let newRuleId = 1\n    if (highestRule) {\n      newRuleId = highestRule.ruleId + 1\n    }\n    \n    const tRule = {\n      ruleId: newRuleId,\n      priority: 1\n    }\n\n    this.setState({editRule: tRule, mode: 'create'})\n  }\n\n  handleRuleCancelClick = () => {\n    this.setState({editRule: null})\n  }\n\n  handleRuleSave = async (newRule) => {\n    const newRuleFull = {\n      ruleId: this.state.editRule.ruleId,\n      priority: this.state.editRule.priority,\n      ...newRule\n    }\n\n    let updatedRules = null\n    if(this.state.mode == 'create') {\n      updatedRules = this.state.curRules.concat(newRuleFull)\n    } else if(this.state.mode == 'edit') {\n      updatedRules = this.state.curRules.map(item => {\n        if (item.ruleId === newRuleFull.ruleId) {\n          return newRuleFull\n        } else {\n          return item\n        }\n      })\n    }\n\n    if (updatedRules) {\n      message.loading({ content: 'Saving the rule...', key: 'ruleSaveProgress' });\n      await axios.put(\"http://localhost:5050/api/rules/files/callback/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n      this.setState({editRule: null, curRules: updatedRules})\n      message.success({ content: 'Saved', key: 'ruleSaveProgress', duration: 2 });\n    }\n  }\n\n  handleRuleDelete = (ruleId) => {\n    return async () => {\n      const updatedRules = this.state.curRules.filter(item => {\n        return item.ruleId !== ruleId\n      })\n      if (updatedRules) {\n        message.loading({ content: 'Deleting rule...', key: 'deleteProgress' });\n        await axios.put(\"http://localhost:5050/api/rules/files/callback/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n        message.success({ content: 'Deleted', key: 'deleteProgress', duration: 2 });\n        this.setState({editRule: null, curRules: updatedRules})\n      }\n    }\n  }\n\n  handleNewRulesFileClick = async (fileName) => {\n    message.loading({ content: 'Creating new file...', key: 'fileNewProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/callback/\" + fileName)\n    await this.getCallbackRulesFiles()\n    await this.setState({selectedRuleFile: fileName, ruleItemActive: null})\n    message.success({ content: 'Created', key: 'fileNewProgress', duration: 2 });\n    this.updateRulesFileDisplay()\n  }\n\n  handleRuleFileDelete = async () => {\n    message.loading({ content: 'Deleting file...', key: 'deleteFileProgress' });\n    await axios.delete(\"http://localhost:5050/api/rules/files/callback/\" + this.state.selectedRuleFile)\n    await this.getCallbackRulesFiles()\n    await this.setState({selectedRuleFile: null, ruleItemActive: null})\n    message.success({ content: 'Deleted', key: 'deleteFileProgress', duration: 2 });\n  }\n\n  handleRuleFileSetActive = async () => {\n    message.loading({ content: 'Activating rule file...', key: 'activateFileProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/callback\", { type: 'activeRulesFile', fileName: this.state.selectedRuleFile }, { headers: { 'Content-Type': 'application/json' } })\n    await this.getCallbackRulesFiles()\n    this.updateRulesFileDisplay()\n    message.success({ content: 'Activated', key: 'activateFileProgress', duration: 2 });\n  }\n\n\n  render() {\n    var newFileName = ''\n    var newFileNameErrorMessage = ''\n    const newFileCreateConfirm = () => {\n      // Validate filename format\n      // TODO: Some additional validation for the filename format\n      if (!newFileName.endsWith('.json')) {\n        message.error('Filename should be ended with .json');\n        return\n      }\n\n      if (/\\s/.test(newFileName)) {\n        message.error('Filename contains spaces');\n        return\n      }\n\n      this.setState({ mode: null})\n      this.handleNewRulesFileClick(newFileName)\n    }\n\n    return (\n      <>\n          <Modal\n            centered\n            destroyOnClose\n            forceRender\n            title=\"Rule Builder\"\n            className=\"w-50 p-3\"\n            visible={this.state.editRule? true : false}\n            footer={null}\n            onCancel={this.handleRuleCancelClick}\n          >\n            <RulesEditor\n              rule={this.state.editRule}\n              onSave={this.handleRuleSave}\n              mode='callback'\n            />\n          </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      onClick={() => {this.setState({ mode: 'newFile'})}}\n                      size=\"sm\"\n                    >\n                      New Rules File\n                    </Button>\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          color=\"success\"\n                          onClick={this.handleRuleFileSetActive}\n                          size=\"sm\"\n                        >\n                          Set as active\n                        </Button>\n                      )\n                      : null\n                    }\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          className=\"float-right\"\n                          color=\"danger\"\n                          onClick={this.handleRuleFileDelete}\n                          size=\"sm\"\n                        >\n                          Delete\n                        </Button>\n                      )\n                      : null\n                    }\n                  </div>\n                  {\n                    (this.state.mode === 'newFile') ?\n                    (\n                      <table className=\"mt-2\">\n                      <tbody>\n                      <tr><td>\n                        <Input\n                          placeholder=\"File Name\"\n                          type=\"text\"\n                          onChange={(e) => { newFileName = e.target.value }}\n                        />\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={newFileCreateConfirm}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"check\" />\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={() => {this.setState({ mode: null})}}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"close\" />\n                        </Button>\n                      </td>\n                      </tr>\n                      </tbody>\n                      </table>\n                    )\n                    : null\n                  }\n\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Menu\n                    mode=\"inline\"\n                    theme=\"light\"\n                    selectedKeys={[this.state.selectedRuleFile]}\n                    onSelect={this.handleRuleFileSelect}\n                  >\n                    {this.getRulesFilesItems()}\n                  </Menu>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            {\n              this.state.selectedRuleFile\n              ? (\n                <Card className=\"bg-secondary shadow\">\n                  <CardHeader className=\"bg-white border-0\">\n                    <Row className=\"align-items-center\">\n                      <Col xs=\"6\">\n                        <h3 className=\"mb-0\">{this.state.selectedRuleFile}</h3>\n                      </Col>\n                      <Col className=\"text-right\" xs=\"6\">\n                        <Button\n                          color=\"info\"\n                          href=\"#pablo\"\n                          onClick={this.handleAddNewRuleClick}\n                          size=\"sm\"\n                        >\n                          Add a new Rule\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Collapse\n                      onChange={this.handleRuleItemActivePanelChange}\n                    >\n                      {this.getRulesFileContentItems()}\n                    </Collapse>\n                  </CardBody>\n                </Card>\n              )\n              : (\n                <Card className=\"bg-secondary shadow\" style={{minHeight: '300px'}}>\n                  <CardHeader className=\"bg-white border-0\"></CardHeader>\n                  <CardBody>\n                  <Row>\n                    <Col xs=\"12\" style={{textAlign: 'center'}}>\n                      <p>Please select a file</p>\n                    </Col>\n                  </Row>\n                  </CardBody>\n                </Card>\n              )\n            }\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default RulesCallback;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n\n// reactstrap components\nimport {\n  FormGroup,\n  Button,\n  CardBody\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Select, TreeSelect, Input, Tooltip, Tag, Radio, Icon, Menu, Dropdown, Card, Popover, Checkbox, message, Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { FactDataGenerator, FactSelect } from '../rules/BuilderTools.jsx';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\nclass ConfigurableParameter extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      paramType: null,\n      factData: null,\n      selectedValueComponent: null\n    }\n\n    // Set paramTypes Array\n    this.paramTypes[0]='Input Values'\n    this.paramTypes[1]='Previous Request'\n    this.paramTypes[2]='Previous Response'\n    this.paramTypes[3]='Function'\n  }\n\n  paramTypes = []\n  inputValue = null\n\n  getParamTypeMenu = () => {\n    return this.paramTypes.map((item, key) => {\n      return (\n        <Option key={key} value={key}>\n          {item}\n        </Option>\n      )\n    })\n  }\n  \n  // handleParamTypeChange = async (paramType) => {\n  //   var factData = null\n  //   switch(paramType) {\n  //     case 0:\n  //       factData = (new FactDataGenerator()).getPathParametersFactData(this.props.rootParameters)\n  //       break\n  //     case 1:\n  //       factData = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n  //       break\n  //     case 2:\n  //       factData = (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)\n  //       break\n  //     default:\n  //       factData = null\n  //   }\n  //   await this.setState( {paramType: paramType, factData: factData} )\n  //   this.updateChanges()\n  // }\n  handleParamTypeChange = async (paramType) => {\n    this.setState( {paramType: paramType, factData: null, selectedValueComponent: null} )\n  }\n\n  // getValueComponent = () => {\n  //   switch(this.state.paramType) {\n  //     case 0:\n  //     case 1:\n  //     case 2:\n  //       return (\n  //         <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n  //       )\n  //       break\n  //     case 3:\n  //     default:\n  //       return null\n  //   }\n  // }\n\n  getRequestFactComponent = () => {\n    if (this.state.factData) {\n      return (\n        <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n      )\n    } else {\n      return null\n    }\n\n  }\n\n  getValueComponent = () => {\n    switch(this.state.paramType) {\n      case 0:\n        let inputOptionItems = []\n        for (let item in this.props.inputValues) {\n          inputOptionItems.push(\n            <Option key={item} value={item}>{item}</Option>\n          )\n        }\n        return (\n          <>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.state.selectedValueComponent}\n            onChange={(value) => {\n              this.state.selectedValueComponent = value\n              this.handleParamSelect('{$inputs.'+value+'}')\n            }}\n          >\n            {inputOptionItems}\n          </Select>\n          </>\n        )\n        break\n      case 1:\n      case 2:\n        let requestSelectionOptionItems = []\n        requestSelectionOptionItems = this.props.allRequests.map(request => {\n          return (\n            <Option key={request.id} value={request.id}>{request.description}</Option>\n          )\n        })\n        return (\n          <>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.state.selectedValueComponent}\n            onChange={(requestId) => {\n              const request = this.props.allRequests.find(item => item.id === requestId)\n              let resourceDefinition = null\n              let rootParams = null\n              if (this.state.paramType === 1) {\n                resourceDefinition = this.props.openApiDefinition.paths[request.operationPath][request.method]\n                rootParams = this.props.openApiDefinition.paths[request.operationPath].parameters\n              } else {\n                const callbackObj = this.props.callbackMap[request.operationPath][request.method]['successCallback']\n                resourceDefinition = this.props.openApiDefinition.paths[callbackObj.path][callbackObj.method]\n                rootParams = this.props.openApiDefinition.paths[callbackObj.path].parameters\n              }\n              const bodyFactData = (new FactDataGenerator()).getBodyFactData(resourceDefinition)\n              const headerFactData = (new FactDataGenerator()).getHeadersFactData(resourceDefinition, rootParams)\n              const factData = {\n                properties: {\n                  body: bodyFactData,\n                  headers: { type: 'object', ...headerFactData }\n                }\n              }\n              this.setState({selectedValueComponent: requestId, factData})\n            }}\n          >\n            {requestSelectionOptionItems}\n          </Select>\n          </>\n        )\n        break\n      case 3:\n        // TODO: Get the function list and type of functions from backend. Include another subtype to select\n        let functionList = {\n          generateUUID: {\n            description: 'Generates unique id'\n          },\n          curDate: {\n            description: 'Get current date and time'\n          }\n        }\n        let functionOptionItems = []\n        for (let item in functionList) {\n          functionOptionItems.push(\n            <Option key={item} value={item}>{item}</Option>\n          )\n        }\n        return (\n          <>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.state.selectedValueComponent}\n            onChange={(value) => {\n              this.state.selectedValueComponent = value\n              this.handleParamSelect('{$function.generic.'+value+'}')\n            }}\n          >\n            {functionOptionItems}\n          </Select>\n          </>\n        )\n        break\n      default:\n        return null\n    }\n  }\n\n  handleParamSelect = (paramValue) => {\n    this.props.onChange(paramValue)\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    this.inputValue = value\n    this.handleParamSelect('{$prev.'+this.state.selectedValueComponent+'.'+(this.state.paramType===1?'request':'response')+'.'+value+'}')\n    // this.updateChanges()\n  }\n\n  updateChanges = () => {\n    let finalValue = ''\n    if (!this.inputValue) {\n      this.inputValue = ''\n    }\n    switch(this.state.paramType) {\n      case 0:\n        finalValue = '{$request.params.' + this.inputValue + '}'\n        break\n      case 1:\n        finalValue = '{$request.body.' + this.inputValue + '}'\n        break\n      case 2:\n        finalValue = '{$request.header.' + this.inputValue + '}'\n        break\n      case 3:\n        finalValue = '{$session.negotiatedContentType}'\n        break\n      default:\n        finalValue = this.inputValue\n    }\n    \n\n    this.props.onChange(finalValue)\n  }\n\n  handleValueChange = (newValue) => {\n    this.inputValue = newValue\n    this.updateChanges()\n  }\n\n  render() {\n\n    return (\n      <Row>\n        <Col>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.paramTypes[this.state.paramType]}\n            onSelect={this.handleParamTypeChange}\n          >\n            {this.getParamTypeMenu()}\n          </Select>\n        </Col>\n        <Col>\n          {this.getValueComponent()}\n        </Col>\n        <Col>\n          {this.getRequestFactComponent()}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass PathBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      params: {}\n    }\n  }\n\n  handleValueChange = async (name, value) => {\n    let params = this.state.params\n    params[name] = value\n    this.props.request.params = params\n    await this.setState({params})\n    this.updatePath()\n  }\n\n  updatePath = () => {\n    let operationPath = this.props.request.operationPath\n    for (let k in this.state.params) {\n      operationPath = operationPath.replace('{'+k+'}', this.state.params[k])      \n    }\n    this.props.request.path = operationPath\n    this.props.onChange()\n  }\n\n  getPathItems = () => {\n    // TODO: read the path parameters from resource parameters also\n    // Currently only rootParameters are considered\n    if (!this.props.rootParameters) {\n      return null\n    }\n    const pathItems = this.props.rootParameters.filter(item => {\n      return item.in === 'path'\n    })\n    if (pathItems.length<=0) {\n      return null\n    }\n    return (\n      <Row className=\"mb-2\">\n        <Col>\n          <Card size=\"small\" title=\"Path Parameters\">\n            <Row>\n              <Col span={24}>\n                <FormGroup>\n                  {(\n                    pathItems.map(item => {\n                      return (\n                        <Row className=\"mb-2\" key={item.name}>\n                          <Col span={8}>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              {item.name}\n                            </label>\n                          </Col>\n                          <Col span={16}>\n                            { this.getValueInput(item) }\n                          </Col>\n                        </Row>\n                      )\n                    })\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    )\n\n  }\n\n  getValueInput = (pathParam) => {\n    if (!this.props.request.params) {\n      this.props.request.params = {}\n    }\n    if(!this.props.request.params[pathParam.name]) {\n      this.props.request.params[pathParam.name] = ''\n    }\n    const pathValue = this.props.request.params[pathParam.name]\n    let dynamicPathValue = null\n    //Check if the path value is a configurable input parameter\n    if (pathValue.startsWith('{$inputs.')) {\n      // Find the parameter name\n      const paramName = pathValue.slice(9,pathValue.length-1)\n      // if (this.props.inputValues)\n      const temp = _.get(this.props.inputValues, paramName)\n      if (temp) {\n        dynamicPathValue = (\n          <Tag style={{ borderStyle: 'dashed' }}>{temp}</Tag>\n        )\n      }\n    }\n    if(pathParam.schema && pathParam.schema.enum) {\n      return (\n        <>\n        <Select\n          onChange={(value) => this.handleValueChange(pathParam.name, value)}\n          value={this.props.request.params[pathParam.name]}\n        >\n        { pathParam.schema.enum.map(item => {\n          return (\n            <Option key={item} value={item}>{item}</Option>\n          )\n        })}\n        </Select>\n        {dynamicPathValue}\n        </>\n      )\n    } else {\n      return (\n        <>\n          <Input placeholder=\"Value\" value={this.props.request.params[pathParam.name]}\n          onChange={(e) => this.handleValueChange(pathParam.name, e.target.value)}  />\n          {dynamicPathValue}\n        </>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n      <>\n      { this.getPathItems() }\n      </>\n    )\n  }\n}\n\nclass HeaderBodyBuilder extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      configurableParameterSelected: '',\n      allParamsFromDefinition: [],\n      allParamsObject: {}\n    }\n  }\n\n  bodySchema = {}\n\n  componentDidMount = () => {\n    // console.log(this.props.rootParameters)\n    // console.log(this.props.resourceDefinition.parameters)\n    this.bodySchema = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n\n    let allParamsFromDefinition = []\n    if (this.props.rootParameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.rootParameters)\n    }\n    if (this.props.resourceDefinition.parameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.resourceDefinition.parameters)\n    }\n\n    let allParamsObject = {}\n    for (let k in allParamsFromDefinition) {\n      allParamsObject[allParamsFromDefinition[k].name] = {\n        description: allParamsFromDefinition[k].description\n      }\n    }\n    this.setState({allParamsFromDefinition, allParamsObject})\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.props.request.body)\n    if(this.refs.bodyEditor) {\n      this.refs.bodyEditor.jsonEditor.update(this.props.request.body)\n    }\n    // console.log(this.props.resourceDefinition.parameters)\n    // console.log(this.props.resourceDefinition)\n  }\n\n\n  addHeaderItemsFromDefinition = async (onlyRequired=false) => {\n    this.state.allParamsFromDefinition.forEach((param) => {\n      if (param.in==='header') {\n        if (!onlyRequired || param.required) {\n          if (!this.props.request.headers) {\n            this.props.request.headers = {}\n            this.props.request.headers[param.name] = ''\n          }\n          else if (!this.props.request.headers[param.name]) {\n            this.props.request.headers[param.name] = ''\n          }\n        }\n      }\n    })\n    this.updateChanges()\n  }\n\n  addHeaderItem = (itemName) => {\n    if (!this.props.request.headers) {\n      this.props.request.headers = {}\n    }\n    this.props.request.headers[itemName] = this.props.request.headers[itemName] ? this.props.request.headers[itemName] : \"\"\n    this.updateChanges()\n  }\n  handleHeaderItemChange = (key, name, value) => {\n    this.props.request.headers[name] = value\n    this.updateChanges()\n  }\n  handleHeaderItemDelete = async (name) => {\n    delete this.props.request.headers[name]\n    this.updateChanges()\n  }\n\n  handleBodyChange = (bodyObject) => {\n    // console.log(ace.getCursorPosition())\n    this.props.request.body = bodyObject\n    this.updateChanges()\n  }\n\n  handleAddHeaderClick = (event) => {\n    this.addHeaderItem(event.item.props.children);\n  };\n\n  headerItemsMenu = () => {\n    const headerParams = this.state.allParamsFromDefinition.filter(item => {\n      return item.in === 'header'\n    })\n    const menuItems = headerParams.map((item, key) => {\n      return (\n        <Menu.Item key={key}>{item.name}</Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={this.handleAddHeaderClick}>\n        {menuItems}\n      </Menu>\n    )\n  }\n\n  updateChanges = () => {\n    this.props.onChange(this.props.request)\n  }\n\n  getHeaderItems = () => {\n    // console.log(this.props.resourceDefinition)\n    let headerItems = []\n    let k=0\n    if (this.props.request) {\n      for( let headerName in this.props.request.headers ) {\n        const item = {\n          name: headerName,\n          value: this.props.request.headers[headerName]\n        }\n        const key = k++\n        headerItems.push(\n          <HeaderInputComponent\n            key={key}\n            itemKey={item.name}\n            name={item.name}\n            value={item.value}\n            description={this.state.allParamsObject[item.name]? this.state.allParamsObject[item.name].description: null} rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n            onChange={this.handleHeaderItemChange}\n            onDelete={this.handleHeaderItemDelete}\n            inputValues={this.props.inputValues}\n          />\n        )\n      }\n    }\n    return headerItems\n\n  }\n\n  handleAddConfigParam = (newValue) => {\n    this.setState({configurableParameterSelected: newValue})\n  }\n\n\n  handlePopulateSampleBodyClick = async () => {\n    const newBody = (new FactDataGenerator()).getBodySample(this.props.resourceDefinition)\n    if(newBody) {\n      // if(this.props.callbackObject && this.props.callbackObject.bodyOverride) {\n      //   _.merge(newBody, this.props.callbackObject.bodyOverride)\n      // }\n      this.props.request.body = newBody\n      this.refs.bodyEditor.jsonEditor.update(this.props.request.body)\n      this.updateChanges()\n    }\n  }\n\n  handleConfigParamCopyToClipboard = () => {\n    navigator.clipboard.writeText(this.state.configurableParameterSelected)\n    message.success('Copied to clipboard');\n  }\n\n  render() {\n    const content = (\n      <>\n      <Row>\n        <Col>\n          <ConfigurableParameter\n            onChange={this.handleAddConfigParam}\n            rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n            openApiDefinition={this.props.openApiDefinition}\n            callbackMap={this.props.callbackMap}\n            inputValues={this.props.inputValues}\n            allRequests={this.props.allRequests}\n          />\n        </Col>\n      </Row>\n      {\n        this.state.configurableParameterSelected ?\n        (\n          <Row className=\"mt-4 text-center\">\n            <Col>\n              <Tag color=\"geekblue\"><a onClick={this.handleConfigParamCopyToClipboard}>{this.state.configurableParameterSelected}</a></Tag>\n            </Col>\n          </Row>\n        )\n        : null\n      }\n      </>\n    )\n\n    return (\n      <>\n        <Row>\n          <Col>\n            <Card size=\"small\" title=\"Headers\">\n              <Row>\n                <Col span={24}>\n                  <FormGroup>\n                    <Row>\n                      <Col span={8}>\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Name\n                        </label>\n                      </Col>\n                      <Col span={8}>\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Value\n                        </label>\n                      </Col>\n                    </Row>\n                    { this.getHeaderItems() }\n                  </FormGroup>\n                  <Dropdown overlay={this.headerItemsMenu()}>\n                    <Button\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Add Header\n                    </Button>\n\n                  </Dropdown>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => this.addHeaderItemsFromDefinition(true)}\n                    size=\"sm\"\n                  >\n                    Add Required Headers\n                  </Button>\n                  <Button\n                    color=\"info\"\n                    onClick={() => this.addHeaderItemsFromDefinition(false)}\n                    size=\"sm\"\n                  >\n                    Add All Headers\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        {\n          this.props.resourceDefinition.requestBody\n          ? (\n            <Row className='mt-2'>\n              <Col>\n                <Card size=\"small\" title=\"Body\">\n                  <Row className='mb-2'>\n                    <Col span={12}>\n                      <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n                        <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n                      </Popover>\n                    </Col>\n                    <Col span={12} style={{textAlign: 'right'}}>\n                      <Button color=\"success\" size=\"sm\" onClick={this.handlePopulateSampleBodyClick} >Populate with sample body</Button>\n                    </Col>\n                  </Row>\n                  <Row >\n                    <Col span={24}>\n                      <Editor\n                        ref=\"bodyEditor\"\n                        value={ this.props.request.body? this.props.request.body : {} }\n                        ace={ace}\n                        ajv={ajv}\n                        theme=\"ace/theme/tomorrow_night_blue\"\n                        mode=\"code\"\n                        search={false}\n                        statusBar={false}\n                        navigationBar={false}\n                        onChange={this.handleBodyChange}\n                        schema={this.bodySchema}\n                        // onError={this.handleError}\n                      />\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n          )\n          : null\n        }\n      </>\n    )\n  }\n}\n\n\nclass HeaderInputComponent extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      value: ''\n    }\n  }\n  inputValue = null\n\n  componentDidMount = () => {\n    this.inputValue = this.props.value\n  }\n\n  componentDidUpdate = () => {\n    this.inputValue = this.props.value\n  }\n\n  getDynamicValue = () => {\n    let dynamicValue = null\n    //Check if the path value is a configurable input parameter\n    if (this.inputValue && this.inputValue.startsWith('{$inputs.')) {\n      // Find the parameter name\n      const paramName = this.inputValue.slice(9,this.inputValue.length-1)\n      // if (this.props.inputValues)\n      const temp = _.get(this.props.inputValues, paramName)\n      if (temp) {\n        dynamicValue = (\n          <Tag style={{ borderStyle: 'dashed' }}>{temp}</Tag>\n        )\n      }\n    }\n    return dynamicValue\n  }\n\n  handleNameChange = (event) => {\n    // this.setState({name: event.target.value})\n    this.props.onChange(this.props.itemKey, event.target.value, this.props.value)\n  }\n  handleValueChange = (event) => {\n    this.inputValue = event.target.value\n    // console.log(event.target.value)\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.itemKey)\n  }\n\n  \n  render() {\n    return (\n      <>\n      <Row className=\"mb-2\" gutter={16}>\n        <Col span={8}>\n          <Tooltip placement=\"topLeft\" title={this.props.description}>\n            <Input\n              className=\"form-control-alternative\"\n              placeholder=\"Name\"\n              type=\"text\"\n              defaultValue={this.props.name}\n              value={this.props.name}\n              onChange={this.handleNameChange}\n              disabled={false}\n            />\n          </Tooltip>\n        </Col>\n        \n        <Col span={14}>\n          <Input\n            className=\"form-control-alternative\"\n            placeholder=\"Value\"\n            type=\"text\"\n            defaultValue={this.props.value}\n            value={this.props.value}\n            onChange={this.handleValueChange}\n            disabled={false}\n          />\n          {this.getDynamicValue()}\n        </Col>\n        <Col span={2}>\n          <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#eb2f96\"\n            key={this.props.name}\n            onClick={this.handleDelete}\n          />\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\n\nclass RequestBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n    }\n  }\n\n  // componentDidMount = () => {\n  //   if (this.props.eventParams) {\n  //     if (this.props.request.headers || this.props.request.body) {\n  //       this.setState({overrideChecked: true})\n  //     }\n  //   }\n    \n  // }\n\n  handleRequestChange = () => {\n    // if (newParams) {\n    //   this.props.request.params = newParams\n    // } else {\n    //   delete this.props.request.params\n    // }\n\n    this.props.onChange(this.props.request)\n  }\n\n  render () {\n    return (\n      <>\n      <div>\n        <Row className='mt-2'>\n          <Col>\n          {\n            this.props.resource\n            ? (\n              <>\n              <PathBuilder\n                request={this.props.request}\n                inputValues={this.props.inputValues}\n                onChange={this.handleRequestChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n              />\n              <HeaderBodyBuilder\n                request={this.props.request}\n                inputValues={this.props.inputValues}\n                allRequests={this.props.allRequests}\n                onChange={this.handleRequestChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n                openApiDefinition={this.props.openApiDefinition}\n                callbackMap={this.props.callbackMap}\n              />\n              </>\n            )\n            : null\n          }\n\n          </Col>\n        </Row>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default RequestBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n \n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  FormGroup,\n  CardHeader,\n  Form,\n  Container,\n  Button,\n} from \"reactstrap\";\n// core components\n\nimport socketIOClient from \"socket.io-client\";\n\nimport Header from \"components/Headers/Header.jsx\";\n\n\nimport { Select, Input, Row, Col, Affix, Steps, Descriptions, Switch, Tabs, Modal, Icon, Skeleton, message, Popover, Upload } from 'antd';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport axios from 'axios';\nimport './fixAce.css';\nimport RequestBuilder from './RequestBuilder'\n\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { TabPane } = Tabs;\n\n\nclass InputValues extends React.Component {\n\n  state = {\n    addInputValueDialogVisible: false,\n    newInputValueName: ''\n  };\n\n  handleDeleteClick = (inputValueName) => {\n    this.props.onDelete(inputValueName)\n  }\n\n  getInputItems = () => {\n    let inputItems = []\n    let i = 0\n    for (let inputValueName in this.props.values) {\n      inputItems.push(\n        <>\n        <Descriptions.Item label={inputValueName}>\n          <Row gutter={8}>\n            <Col span={23}>\n              <Input\n                value={this.props.values[inputValueName]}\n                onChange={(e) => this.props.onChange(inputValueName, e.target.value)}\n              />\n            </Col>\n            <Col span={1}>\n              <Icon key={inputValueName} type=\"delete\" theme=\"filled\"\n                onClick={ () => this.handleDeleteClick(inputValueName) }\n              />\n            </Col>\n          </Row>\n          \n        </Descriptions.Item>\n        </>\n      )\n    }\n    return inputItems\n  }\n\n  handleAddInputValue = (inputValueName) => {\n    // Check if the input value name already exists\n    if (this.props.values.hasOwnProperty(inputValueName)) {\n      message.error({ content: 'The input value name already exists', key: 'InputValueNameExists', duration: 3 });\n    } else {\n      // Save the input value\n      this.props.onChange(inputValueName, '')\n      this.state.newInputValueName = ''\n    }\n  }\n\n\n  render () {\n    const addInputValueDialogContent = (\n      <>\n      <Input \n        placeholder=\"Input Value Name\"\n        type=\"text\"\n        value={this.state.newInputValueName}\n        onChange={(e) => { this.setState({newInputValueName: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleAddInputValue(this.state.newInputValueName)\n            this.setState({addInputValueDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Add\n      </Button>\n      </>\n    )\n\n    return (\n      <>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Card className=\"bg-white shadow\">\n            <CardBody>\n              <Popover\n                content={addInputValueDialogContent}\n                title=\"Enter a new name\"\n                trigger=\"click\"\n                visible={this.state.addInputValueDialogVisible}\n                onVisibleChange={ (visible) => this.setState({addInputValueDialogVisible: visible})}\n              >\n                <Button\n                    className=\"text-right float-right\"\n                    color=\"primary\"\n                    size=\"sm\"\n                  >\n                    Add Input Value\n                </Button>\n              </Popover>\n\n              <Form>\n                <Descriptions title=\"Input Values\" bordered>\n                  {this.getInputItems()}\n                </Descriptions>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\n\n\nclass ResourceSelector extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedItem: null\n    }\n  }\n  resourceOptions = []\n\n  getResourceOptions = () => {\n    this.resourceOptions = []\n    if(this.props.openApiDefinition.paths) {\n      let currentResourceGroup = ''\n      for ( let pathKey in this.props.openApiDefinition.paths ) {\n        for ( let methodKey in this.props.openApiDefinition.paths[pathKey]) {\n          let itemKey = methodKey + \" \" + pathKey\n          switch(methodKey) {\n            case 'get':\n            case 'post':\n              this.resourceOptions.push(<Option key={itemKey} value={itemKey}>{itemKey}</Option>)\n              break\n          }\n        }\n      }\n    }\n    return this.resourceOptions\n  }\n\n  getResourceValue = () => {\n    // console.log(this.props.value)\n    if(this.props.value) {\n      return this.props.value.method + ' ' + this.props.value.path\n    } else {\n      return null\n    }\n    \n  }\n\n  render() {\n\n    const resourceSelectHandler = (eventKey) => {\n      const resourceArr = eventKey.split(' ')\n      const resource = {\n        method: resourceArr[0],\n        path: resourceArr[1]\n      }\n      this.state.selectedItem = resource\n      // this.state.selectedItem = JSON.parse(eventKey)\n      this.props.onSelect(resource)\n      // console.log(this.props.openApiDefinition.paths[selectedItem.path][selectedItem.method])\n    }\n\n    return(\n      <Select onChange={resourceSelectHandler}\n        disabled={(this.props.value? true : false)}\n        style={{ width: 300 }}\n        placeholder=\"Select a resource\"\n        value={this.getResourceValue()}\n      >\n      {this.getResourceOptions()}\n      </Select>\n    )\n  }\n}\n\nclass RequestGenerator extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      origJson: [],\n      curJson: {},\n      description: '',\n      request: {},\n      conditions: [],\n      pathMethodConditions: [],\n      openApiDefinition: {},\n      selectedResource: null,\n      callbackMap: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    const openApiDefinition = await this.getDefinition()\n    const callbackMap = await this.getCallbackMap()\n    // Deep clone the input rule to a new object to work with (Copying without object references recursively)\n    const inputRule = {}\n    let selectedResource = null\n    if (this.props.request && this.props.request.operationPath && this.props.request.method) {\n      selectedResource = {\n        path: this.props.request.operationPath,\n        method: this.props.request.method\n      }\n    }\n\n    this.setState({selectedResource, openApiDefinition, callbackMap})\n  }\n\n  getConditions = () => {\n    return this.state.conditions\n  }\n\n  getPathMethodConditions = () => {\n    return this.state.pathMethodConditions\n  }\n\n  getRequest = () => {\n    return this.state.request\n  }\n  // async componentWillMount() {\n  //   await this.getDefinition()\n  //   await this.getCallbackMap()\n  // }\n\n  getRule = () => {\n    const rule = {\n      description: this.state.description,\n      conditions: {\n        \"all\": [...this.state.conditions, ...this.state.pathMethodConditions]\n      },\n      request: this.state.request,\n    }\n    return JSON.stringify(rule, null, 2)\n  }\n\n  handleConditionsChange = () => {\n    this.forceUpdate()\n    // this.setState({conditions});\n  };\n\n  handleRequestChange = (request) => {\n    this.setState({request});\n    this.props.onChange(request)\n  };\n\n  getDefinition = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/definition/fspiop/1.1\")\n    // console.log(response.data)\n    return response.data\n    // this.setState(  { openApiDefinition: response.data } )\n  }\n\n  getCallbackMap = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/callback_map/fspiop/1.1\")\n    return response.data\n    // this.setState(  { callbackMap: response.data } )\n  }\n\n  resourceSelectHandler = (resource) => {\n    const request = this.props.request\n    request.operationPath = resource.path\n    request.path = resource.path\n    request.method = resource.method\n    this.props.onChange(request)\n    this.setState({selectedResource: resource, request})\n  }\n\n  getResourceDefinition = () => {\n    if (this.state.selectedResource && this.state.openApiDefinition && this.state.selectedResource.path && this.state.selectedResource.method) {\n      return this.state.openApiDefinition.paths[this.state.selectedResource.path][this.state.selectedResource.method]\n    }\n    return null\n  }\n  getRootParameters = () => {\n    var rootParams = []\n    if (this.state.selectedResource && this.state.openApiDefinition && this.state.selectedResource.path && this.state.selectedResource.method) {\n      rootParams = this.state.openApiDefinition.paths[this.state.selectedResource.path].parameters\n    }\n    return rootParams\n  }\n\n  getCallbackObject = () => {\n      let callbackObj = null\n      try {\n        if(this.props.mode === 'validation') {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['errorCallback']\n        } else {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['successCallback']\n        }\n      } catch(err){\n      }\n      return callbackObj\n  }\n\n  getCallbackRootParameters = () => {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path].parameters\n      } catch(err) {\n        return []\n      }\n \n  }\n\n  getCallbackDefinition = () => {\n    if (this.state.selectedResource) {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path][callbackObj.method]\n      } catch(err) {\n        return null\n      }\n\n    }\n    return null\n  }\n\n  handleDescriptionChange = (newValue) => {\n    this.setState({description: newValue})\n  }\n\n\n  render() {\n    return (\n      <>\n          <Row>\n            <Col span={24}>\n                  <Row className=\"align-items-center\">\n                    <Col span={16}>\n                      <ResourceSelector value={this.state.selectedResource} openApiDefinition={this.state.openApiDefinition} onSelect={this.resourceSelectHandler} />\n                    </Col>\n                    <Col span={8}>\n                      <Row className=\"text-right float-right\">\n                        <Col>\n                          <Button\n                            className=\"float-right\"\n                            color=\"danger\"\n                            size=\"sm\"\n                            onClick={() => {this.props.onDelete(this.props.request.id)}}\n                          >\n                            Delete\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Form>\n                        <RequestBuilder\n                          request={this.props.request}\n                          allRequests={this.props.allRequests}\n                          inputValues={this.props.inputValues}\n                          onChange={this.handleRequestChange}\n                          resource={this.state.selectedResource}\n                          resourceDefinition={this.getResourceDefinition()}\n                          rootParameters={this.getRootParameters()}\n                          openApiDefinition={this.state.openApiDefinition}\n                          callbackMap={this.state.callbackMap}\n                        />\n                      </Form>\n                    </Col>\n                  </Row>\n            </Col>\n          </Row>\n      </>\n    );\n  }\n}\n\nclass OutboundRequest extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      request: {},\n      template: {},\n      addNewRequestDialogVisible: false,\n      newRequestDescription: '',\n      newTemplateName: '',\n      createNewTemplateDialogVisible: false,\n      saveTemplateFileName: '',\n      saveTemplateDialogVisible: false,\n    };\n  }\n\n  socket = null\n\n  componentWillUnmount = () => {\n    this.socket.disconnect()\n  }\n  \n  componentDidMount = () => {\n    // const sampleTemplate = require('./sample1.json')\n    // this.setState({template: sampleTemplate})\n    this.socket = socketIOClient('http://127.0.0.1:5050');\n    this.socket.on(\"outboundProgress\", this.handleIncomingProgress);\n  }\n\n  replaceInputValues = (inputObject, inputValues) => {\n    var resultObject\n    // Check whether inputObject is string or object. If it is object, then convert that to JSON string and parse it while return\n    if (typeof inputObject === 'string') {\n      resultObject = inputObject\n    } else if (typeof inputObject === 'object') {\n      resultObject = JSON.stringify(inputObject)\n    } else {\n      return inputObject\n    }\n  \n    // Check the string for any inclusions like {$some_param}\n    const matchedArray = resultObject.match(/{\\$([^}]+)}/g)\n    if (matchedArray) {\n      matchedArray.forEach(element => {\n        // Check for the function type of param, if its function we need to call a function in custom-functions and replace the returned value\n        const splitArr = element.split('.')\n        switch (splitArr[0]) {\n          case '{$inputs':\n          default:\n            const paramName = element.slice(9,element.length-1)\n            const temp = _.get(this.state.template.inputValues, paramName)\n            if (temp) {\n              resultObject = resultObject.replace(element, temp)\n            }\n        }\n      })\n    }\n  \n    if (typeof inputObject === 'object') {\n      return JSON.parse(resultObject)\n    } else {\n      return resultObject\n    }\n  }\n\n  getRequestGeneratorItems = () => {\n    if (this.state.template.requests) {\n      return this.state.template.requests.map(item => {\n        return (\n          <Col span={24 / (this.state.template.requests.length ? this.state.template.requests.length : 1)}>\n            {\n              item.status && (item.status.state === 'waiting' || item.status.state === 'process')\n              ? (<Skeleton paragraph={ {rows: 10} } active />)\n              : (\n                <Tabs defaultActiveKey='1'>\n                  <TabPane tab=\"Request\" key=\"1\">\n                    {\n                      item.headers\n                      ? (\n                        <>\n                        <h4>Header</h4>\n                        <pre>{JSON.stringify(this.replaceInputValues(item.headers),null,2)}</pre>\n                        </>\n                      )\n                      : null\n                    }\n                    {\n                      item.body\n                      ? (\n                        <>\n                        <h4>Body</h4>\n                        <pre>{JSON.stringify(this.replaceInputValues(item.body),null,2)}</pre>\n                        </>\n                      )\n                      : null\n                    }\n                  </TabPane>\n                  <TabPane tab=\"Editor\" key=\"2\">\n                    <RequestGenerator\n                      request={item}\n                      allRequests={this.state.template.requests}\n                      inputValues={this.state.template.inputValues}\n                      onChange={this.handleRequestChange}\n                      onDelete={this.handleRequestDelete}\n                    />\n                  </TabPane>\n                  {\n                    item.status && item.status.response\n                    ? (\n                      <TabPane tab=\"Response\" key=\"3\">\n                        {\n                          item.status.response.headers\n                          ? (\n                            <>\n                              <h4>Header</h4>\n                              <pre>{JSON.stringify(item.status.response.headers,null,2)}</pre>\n                            </>\n                          )\n                          : null\n                        }\n                        {\n                          item.status.response.body\n                          ? (\n                            <>\n                              <h4>Body</h4>\n                              <pre>{JSON.stringify(item.status.response.body,null,2)}</pre>\n                            </>\n                          )\n                          : null\n                        }\n                      </TabPane>\n                    )\n                    : null\n                  }\n                </Tabs>\n              )\n            }\n\n          </Col>\n        )\n      })\n    } else {\n      return null\n    }\n  }\n\n  getStepItems = () => {\n    if (this.state.template.requests) {\n      const stepItems = this.state.template.requests.map(item => {\n        return (\n          <Step status={item.status? item.status.state : null} title={item.method} subTitle={item.operationPath} description={item.description} />\n        )\n      })\n      const spanCol = stepItems.length < 3 ? stepItems.length * 8 : 24\n      return (\n        <Row>\n          <Col span={spanCol}>\n            <Steps current={-1} type=\"navigation\" size=\"default\">\n              {stepItems}\n            </Steps>\n          </Col>\n        </Row>\n      )\n      \n    } else {\n      return null\n    }\n  }\n\n  handleRequestChange = (request) => {\n    this.setState({request: request})\n  }\n\n  handleInputValuesChange = (name, value) => {\n    this.state.template.inputValues[name] = value\n    this.forceUpdate()\n  }\n\n  handleInputValuesDelete = (name) => {\n    delete this.state.template.inputValues[name]\n    this.forceUpdate()\n  }\n\n  handleAddNewRequestClick = (description) => {\n    // Find highest request id to determine the new ID\n    let maxId = +this.state.template.requests.reduce(function(m, k){ return k.id > m ? k.id : m }, 0)\n\n    this.state.template.requests.push({ id: maxId+1, description})\n    this.forceUpdate()\n  }\n\n  handleRequestDelete = (requestId) => {\n    const deleteIndex = this.state.template.requests.findIndex(item => item.id == requestId)\n    this.state.template.requests.splice(deleteIndex,1)\n    this.forceUpdate()\n  }\n\n  handleIncomingProgress = (progress) => {\n    // console.log(progress)\n    let request = this.state.template.requests.find(item => item.id === progress.id)\n    if (request.status) {\n      if (progress.status === 'SUCCESS') {\n        console.log(request)\n        request.status.state = 'finish'\n        request.status.response = progress.response\n      } else if (progress.status === 'ERROR') {\n        request.status.state = 'error'\n        request.status.response = { body: progress.error }\n        // Clear the waiting status of the remaining requests\n        for (let i in this.state.template.requests) {\n          if (!this.state.template.requests[i].status) {\n            this.state.template.requests[i].status = {}\n          }\n          if (this.state.template.requests[i].status.state === 'process') {\n            this.state.template.requests[i].status.state = 'wait'\n            this.state.template.requests[i].status.response = null\n          }\n          \n        }\n        message.error({ content: 'Test case failed', key: 'outboundSendProgress', duration: 3 });\n      }\n      this.forceUpdate()\n    }\n  }\n\n  // mockTypeSuccess = true\n  handleSendClick = async () => {\n\n    const outboundRequestID = Math.random().toString(36).substring(7);\n    message.loading({ content: 'Sending the outbound request...', key: 'outboundSendProgress' });\n    await axios.post(\"http://localhost:5050/api/outbound/template/\" + outboundRequestID, this.state.template, { headers: { 'Content-Type': 'application/json' } })\n    message.success({ content: 'Test case Sent', key: 'outboundSendProgress', duration: 2 });\n\n    // Set the status to waiting for all the requests\n    for (let i in this.state.template.requests) {\n      if (!this.state.template.requests[i].status) {\n        this.state.template.requests[i].status = {}\n      }\n      this.state.template.requests[i].status.state = 'process'\n    }\n    this.forceUpdate()\n\n\n\n\n    // // Mock status changes to simulate the outbound transfer in UI\n    // // Loop through the requests and set the status to waiting for each for some particular time\n    // const waitForSomeTime = () => {\n    //   return new Promise(function(resolve, reject) {\n    //     setTimeout(resolve, 800, 'one');\n    //   });\n    // }\n\n    // for (let i in this.state.template.requests) {\n    //   await waitForSomeTime()\n    //   this.state.template.requests[i].status.state = 'finish'\n    //   this.state.template.requests[i].status.response = { body: 'This is a sample response' }\n    //   if (!this.mockTypeSuccess && i==1) {\n    //     this.state.template.requests[i].status.state = 'error'\n    //     this.forceUpdate()\n    //     break;\n    //   }\n    //   this.forceUpdate()\n    // }\n    // this.mockTypeSuccess = !this.mockTypeSuccess\n\n  }\n\n  // Take the status property out from requests\n  convertTemplate = (template) => {\n    if (template.requests) {\n      let { requests, ...remainingProps } = template\n      const newRequests = requests.map(item => {\n        const { status, ...newRequest } = item\n        return newRequest\n      })\n      return { ...remainingProps, requests: newRequests }\n    } else {\n      return null\n    }\n  }\n\n  handleCreateNewTemplateClick = (templateName) => {\n    this.setState({template: {\n      name: templateName,\n      inputValues: {},\n      requests: []\n    }})\n  }\n\n  download = (content, fileName, contentType) => {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  handleTemplateSaveClick = (fileName) => {\n    this.download(JSON.stringify(this.convertTemplate(this.state.template), null, 2), fileName, 'text/plain');\n  }\n\n  handleImportFile = (file_to_read) => {\n    message.loading({ content: 'Reading the file...', key: 'importFileProgress' });\n    var fileRead = new FileReader();\n    fileRead.onload = (e) => {\n      var content = e.target.result;\n      try {\n        var intern = JSON.parse(content);\n        this.setState({template: intern})\n        message.success({ content: 'File Loaded', key: 'importFileProgress', duration: 2 });\n      } catch (err) {\n        message.error({ content: err.message, key: 'importFileProgress', duration: 2 });\n      }\n    };\n    fileRead.readAsText(file_to_read);\n\n  }\n\n  render() {\n\n    const addNewRequestDialogContent = (\n      <>\n      <Input \n        placeholder=\"Enter description\"\n        type=\"text\"\n        value={this.state.newRequestDescription}\n        onChange={(e) => { this.setState({newRequestDescription: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleAddNewRequestClick(this.state.newRequestDescription)\n            this.setState({addNewRequestDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Add\n      </Button>\n      </>\n    )\n\n    const createNewTemplateDialogContent = (\n      <>\n      <Input \n        placeholder=\"Template name\"\n        type=\"text\"\n        value={this.state.newTemplateName}\n        onChange={(e) => { this.setState({newTemplateName: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleCreateNewTemplateClick(this.state.newTemplateName)\n            this.setState({createNewTemplateDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Create\n      </Button>\n      </>\n    )\n\n    const saveTemplateDialogContent = (\n      <>\n      <Input \n        placeholder=\"File name\"\n        type=\"text\"\n        value={this.state.saveTemplateFileName}\n        onChange={(e) => { this.setState({saveTemplateFileName: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleTemplateSaveClick(this.state.saveTemplateFileName)\n            this.setState({saveTemplateDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Create\n      </Button>\n      </>\n    )\n\n    return (\n      <>\n        <Modal\n          centered\n          destroyOnClose\n          forceRender\n          title=\"Template\"\n          className=\"w-50 p-3\"\n          visible={this.state.showTemplate? true : false}\n          footer={null}\n          onCancel={() => { this.setState({showTemplate: false})}}\n        >\n          <pre>{JSON.stringify(this.convertTemplate(this.state.template), null, 2)}</pre>\n        </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col span={24}>\n              <Card className=\"card-profile shadow\">\n                <CardBody>\n                  <Affix offsetTop={2}>\n                  <Row>\n                    <Col span={24}>\n                      <Card className=\"bg-white shadow mb-4\">\n                        <CardBody>\n                          <Upload \n                            accept = '.json'\n                            showUploadList = {false}\n                            beforeUpload = {file => {\n                              this.handleImportFile(file)\n                              return false;\n                            }}\n                          >\n                            <Button\n                              color=\"success\"\n                              size=\"sm\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Import Template\n                            </Button>\n                          </Upload>\n\n                          <Button\n                            className=\"float-right\"\n                            color=\"danger\"\n                            size=\"sm\"\n                            onClick={this.handleSendClick}\n                          >\n                            Send\n                          </Button>\n                          <Popover\n                            className=\"float-right\"\n                            content={saveTemplateDialogContent}\n                            title=\"Enter filename to save\"\n                            trigger=\"click\"\n                            visible={this.state.saveTemplateDialogVisible}\n                            onVisibleChange={ (visible) => this.setState({saveTemplateDialogVisible: visible})}\n                          >\n                            <Button\n                                className=\"text-right float-right\"\n                                color=\"success\"\n                                size=\"sm\"\n                              >\n                                Save\n                            </Button>\n                          </Popover>\n                          <Button\n                            className=\"float-right\"\n                            color=\"info\"\n                            size=\"sm\"\n                            onClick={() => { this.setState({showTemplate: true})}}\n                          >\n                            Show Template\n                          </Button>\n                          <Popover\n                            className=\"float-right\"\n                            content={createNewTemplateDialogContent}\n                            title=\"Enter a name for the template\"\n                            trigger=\"click\"\n                            visible={this.state.createNewTemplateDialogVisible}\n                            onVisibleChange={ (visible) => this.setState({createNewTemplateDialogVisible: visible})}\n                          >\n                            <Button\n                                className=\"text-right float-right\"\n                                color=\"primary\"\n                                size=\"sm\"\n                              >\n                                New Template\n                            </Button>\n                          </Popover>\n                        </CardBody>\n                        </Card>\n                    </Col>\n                  </Row>\n                  </Affix>\n                  <Row>\n                    <Col span={24}>\n                      <InputValues values={this.state.template.inputValues} onChange={this.handleInputValuesChange} onDelete={this.handleInputValuesDelete} />\n                    </Col>\n                  </Row>\n                  <Row className=\"mt-4\">\n                    <Col span={24}>\n                    <Card className=\"card-profile shadow\">\n                      <CardHeader>\n                        {this.getStepItems()}\n                        <Popover\n                          content={addNewRequestDialogContent}\n                          title=\"Enter a description for the request\"\n                          trigger=\"click\"\n                          visible={this.state.addNewRequestDialogVisible}\n                          onVisibleChange={ (visible) => this.setState({addNewRequestDialogVisible: visible})}\n                        >\n                          <Button\n                              className=\"text-right float-right\"\n                              color=\"primary\"\n                              size=\"sm\"\n                            >\n                              Add New Request\n                          </Button>\n                        </Popover>\n                      </CardHeader>\n                      <CardBody>\n                        <Row gutter={16} >\n                          {this.getRequestGeneratorItems()}\n                        </Row>\n                      </CardBody>\n                    </Card>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* <Row>\n            <Col className=\"mt-4\" span={24}>\n              <Card className=\"card-profile shadow\">\n                <CardHeader>\n                  <div className=\"d-flex float-right\">\n                    <Button\n                      className=\"float-right\"\n                      color=\"danger\"\n                      size=\"sm\"\n                    >\n                      Clear Logs\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Logs />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default OutboundRequest;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { Grid, GridColumn as Column, GridDetailRow } from '@progress/kendo-react-grid';\nimport '@progress/kendo-theme-default/dist/all.css'\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Button\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n\nimport { Icon, Tag, Timeline } from 'antd';\n\nclass DetailComponent extends GridDetailRow {\n  render() {\n      const log = this.props.dataItem;\n      return (\n        <>\n        {log.additionalData\n          ? (\n              <div>\n                <br />\n                <div style={{ backgroundColor: '#1f4662', width: '100%', color: '#fff', fontSize: '12px' }}>\n                  <div style={{ backgroundColor: '#193549', width: '100%', fontFamily: 'monospace', color: '#ffc600' }} >\n                  </div>\n                  <pre style={{ display: 'block', width: '100%', margin: '0', overflow: 'scroll', color: '#ffffff' }}>\n                    {JSON.stringify(log.additionalData,null,2)}\n                  </pre>\n                </div>\n              </div>\n            )\n          : log.message\n        }\n        </>\n      );\n  }\n}\n\n// const getMessageTypeIcon = (messageType) => {\n//   let icon_name\n//   switch(messageType) {\n//     case 'request':\n//       icon_name = \"ni-bold-right\"\n//       break\n//     case 'response':\n//       icon_name = \"ni-bold-left\"\n//       break\n//     case 'generic':\n//     default:\n//       icon_name = \"ni-sound-wave\"\n//       break\n\n//   }\n//   const className = \"rounded-circle mr-3 ni \" + icon_name\n//   return <i className={className}></i>\n// }\n\n\nexport class Logs extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      logs: [],\n      endpoint: \"http://127.0.0.1:5050\",\n    };\n  }\n  componentDidMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"newLog\", newLog => {\n      // console.log('New log received', newLog)\n      const updatedLogs = this.state.logs.concat(newLog)\n      this.setState({ logs: updatedLogs })\n    });\n  }\n\n  expandChange = (event) => {\n    event.dataItem.expanded = !event.dataItem.expanded;\n    this.forceUpdate();\n  }\n\n\n  render() {\n  \n    return (\n      <>\n        <Row>\n          <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Logs</h3>\n                </CardHeader>\n                <Grid\n                  className=\"align-items-center table-flush\"\n                  data={this.state.logs}\n                  detail={DetailComponent}\n                  expandField=\"expanded\"\n                  onExpandChange={this.expandChange}\n                >\n                  <Column field=\"logTime\" title=\"Time\" />\n                  <Column field=\"uniqueId\" title=\"UniqueID\" />\n                  <Column field=\"message\" title=\"Message\" />\n                  <Column field=\"verbosity\" title=\"Verbosity\" />\n                </Grid>\n              </Card>\n              </div>\n        </Row>\n      </>\n    );\n  }\n}\n\nclass IncomingTimelineItem extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      logsVisible: false\n    }\n  }\n  expandChange = (event) => {\n    event.dataItem.expanded = !event.dataItem.expanded;\n    this.forceUpdate();\n  }\n\n  toggleLogsVisibility = () => {\n      this.setState({logsVisible: !this.state.logsVisible})\n  }\n\n  render () {\n    const log = this.props.logs[0]\n    const info = this.props.info\n    return (\n      <>\n      <Timeline.Item position='right'>\n        <b>{log.logTime}</b>\n        <br /><Tag color={info.erroneous ? \"#f50\" : \"#2db7f5\"} onClick={this.toggleLogsVisibility}>{info.name}</Tag>\n        <br />\n        {\n          this.state.logsVisible\n          ? (\n            <Grid\n              className=\"align-items-center table-flush\"\n              data={this.props.logs}\n              detail={DetailComponent}\n              expandField=\"expanded\"\n              onExpandChange={this.expandChange}\n            >\n              <Column field=\"logTime\" title=\"Time\" />\n              <Column field=\"message\" title=\"Message\" />\n              <Column field=\"verbosity\" title=\"Verbosity\" />\n            </Grid>\n          )\n          : null\n        }\n      </Timeline.Item>\n      </>\n    )\n  }\n}\n\nclass IncomingMonitor extends React.Component {\n\n  newState =  {\n    logs: [],\n    incomingItemsObj: {},\n    incomingItemsArr: [],\n    lastIncomingTime: null,\n    endpoint: \"http://127.0.0.1:5050\",\n  }\n\n  socket = null\n\n  constructor() {\n    super();\n    this.state = JSON.parse(JSON.stringify(this.newState))\n  }\n  \n  componentWillUnmount = () => {\n    this.socket.disconnect()\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    this.socket = socketIOClient(endpoint);\n    this.socket.on(\"newLog\", newLog => {\n      // console.log('New log received', newLog)\n      this.state.logs.push(newLog)\n\n      // Group by unique ID\n      if(!this.state.incomingItemsObj.hasOwnProperty(newLog.uniqueId)) {\n        this.state.incomingItemsObj[newLog.uniqueId] = []\n        if (!this.state.lastIncomingTime) {\n          this.state.lastIncomingTime = new Date(newLog.logTime)\n        } else {\n          const timeDiffMillis = new Date(newLog.logTime) -  this.state.lastIncomingTime\n          this.state.lastIncomingTime = new Date(newLog.logTime)\n          if (timeDiffMillis > 1000) {\n            this.state.incomingItemsArr.push(null)          }\n        }\n        let name = newLog.message\n        if (newLog.resource) {\n          name = newLog.resource.method.toUpperCase() + ' ' + newLog.resource.path\n        }\n        this.state.incomingItemsArr.push({ id: newLog.uniqueId, name, erroneous: false })\n        \n      }\n      \n      // If the verbosity of the log is error, set the entire group as erroneous\n      if (newLog.verbosity === 'error') {\n        // Find the group in incomingItemsArr array\n        const itemIndex = this.state.incomingItemsArr.findIndex(item => item? (item.id === newLog.uniqueId) : false)\n        this.state.incomingItemsArr[itemIndex].erroneous = true\n      }\n\n      this.state.incomingItemsObj[newLog.uniqueId].push(newLog)\n      this.forceUpdate()\n    });\n  }\n\n  getTimelineItems = () => {\n    return this.state.incomingItemsArr.map(item => {\n      if (item) {\n        return (\n          <IncomingTimelineItem key={item.id} info={item} logs={this.state.incomingItemsObj[item.id]} />\n        )\n      } else {\n        return (\n          <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\"><br /><br /></Timeline.Item>\n        )\n      }\n\n    })\n  }\n\n  handleClearLogs = () => {\n    this.setState(JSON.parse(JSON.stringify(this.newState)))\n  }\n\n  render () {\n    return (\n      <>\n      <Row className=\"mb-4\">\n      <div className=\"col\">\n        <Card className=\"shadow\">\n          <CardHeader className=\"border-0\">\n            <Button\n              className=\"float-right\"\n              color=\"danger\"\n              size=\"sm\"\n              onClick={this.handleClearLogs}\n            >\n              Clear\n            </Button>\n            <h3 className=\"mb-0\">Monitor</h3>\n          </CardHeader>\n          <CardBody>\n            <Timeline reverse={true} pending=\"Monitoring...\" >\n              {/* <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\n              <Timeline.Item color=\"green\">Solve initial network problems 2015-09-01</Timeline.Item>\n              <Timeline.Item>\n                <Tag color=\"#2db7f5\">GET /quotes asdf</Tag>\n                2019-01-01 00:00:00GMT\n              </Timeline.Item>\n              <Timeline.Item color=\"red\">Network problems being solved 2015-09-01</Timeline.Item>\n              <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\n              <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />}>\n                Technical testing 2015-09-01\n              </Timeline.Item> */}\n              {this.getTimelineItems()}\n            </Timeline>\n          </CardBody>\n        </Card>\n        </div>\n      </Row>\n      </>\n    )\n  }\n}\n\nclass Tables extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n\n  render() {\n  \n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <IncomingMonitor />\n          {/* <Logs /> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/dashboard/Dashboard.jsx\";\n// import Dashboard from \"views/examples/Dashboard.jsx\";\nimport Profile from \"views/examples/Profile.jsx\";\nimport Maps from \"views/examples/Maps.jsx\";\nimport Register from \"views/examples/Register.jsx\";\nimport Login from \"views/examples/Login.jsx\";\nimport Tables from \"views/examples/Tables.jsx\";\nimport Icons from \"views/examples/Icons.jsx\";\nimport RulesResponse from \"views/rules/RulesResponse.jsx\";\nimport RulesValidation from \"views/rules/RulesValidation.jsx\";\nimport RulesCallback from \"views/rules/RulesCallback.jsx\";\nimport OutboundRequest from \"views/outbound/OutboundRequest.jsx\";\nimport Monitor from \"views/monitor/Monitor.jsx\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Dashboard,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/monitoring\",\n    name: \"Monitoring\",\n    icon: \"ni ni-glasses-2 text-primary\",\n    component: Monitor,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rules_response\",\n    name: \"Sync Response Rules\",\n    subTitle: \"\",\n    icon: \"ni ni-curved-next text-primary\",\n    component: RulesResponse,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rules_validation\",\n    name: \"Validation Rules\",\n    subTitle: \"(Error Callbacks)\",\n    icon: \"ni ni-bullet-list-67 text-primary\",\n    component: RulesValidation,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rules_callback\",\n    name: \"Callback Rules\",\n    subTitle: \"(Success Callbacks)\",\n    icon: \"ni ni-bullet-list-67 text-primary\",\n    component: RulesCallback,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/outbound_request\",\n    name: \"Outbound Request\",\n    icon: \"ni ni-money-coins text-blue\",\n    component: OutboundRequest,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   icon: \"ni ni-single-02 text-yellow\",\n  //   component: Profile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Tables\",\n  //   icon: \"ni ni-bullet-list-67 text-red\",\n  //   component: Tables,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/login\",\n  //   name: \"Login\",\n  //   icon: \"ni ni-key-25 text-info\",\n  //   component: Login,\n  //   layout: \"/auth\"\n  // },\n  // {\n  //   path: \"/register\",\n  //   name: \"Register\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Register,\n  //   layout: \"/auth\"\n  // }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport AdminFooter from \"components/Footers/AdminFooter.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/mojaloop.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n// import AuthLayout from \"layouts/Auth.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      {/* <Route path=\"/auth\" render={props => <AuthLayout {...props} />} /> */}\n      <Redirect from=\"/\" to=\"/admin/index\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}