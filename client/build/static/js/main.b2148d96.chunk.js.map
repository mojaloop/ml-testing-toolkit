{"version":3,"sources":["assets/img/theme/react.jpg","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/vue.jpg","views/rules/BuilderTools.jsx","assets/img/brand/mojaloop.png","components/Navbars/AdminNavbar.jsx","components/Footers/AdminFooter.jsx","components/Sidebar/Sidebar.jsx","components/Headers/Header.jsx","views/dashboard/Dashboard.jsx","components/Headers/UserHeader.jsx","views/examples/Profile.jsx","views/examples/Maps.jsx","views/examples/Register.jsx","views/examples/Login.jsx","views/examples/Tables.jsx","views/examples/Icons.jsx","views/rules/ConditionBuilder.jsx","views/rules/EventBuilder.jsx","views/rules/RuleEditor.jsx","views/rules/RuleViewer.jsx","views/rules/RulesValidation.jsx","views/rules/RulesCallback.jsx","views/outbound/RequestBuilder.jsx","views/outbound/OutboundRequest.jsx","views/monitor/Monitor.jsx","routes.js","layouts/Admin.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","FactSelect","Ajv","allErrors","Select","Option","_React$Component","_this","Object","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidMount","componentDidUpdate","state","factData","props","factTreeData","getNodeFacts","value","undefined","selectedFact","findValueInFactData","onSelect","setState","treeData","valueArr","split","tFactData","_loop","i","tFact","find","item","v","nodeObject","length","_ret","nodeData","parentId","arguments","valuePrefix","property","properties","isLeaf","fact","type","random","Math","toString","substring","push","id","pId","title","disabled","onLoadData","treeNode","Promise","resolve","_treeNode$props","setImmediate","concat","onChange","label","extra","triggerNode","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_9__","treeDataSimpleMode","style","width","minWidth","dropdownStyle","maxHeight","overflow","placeholder","loadData","React","Component","FactDataGenerator","getBodyFactData","resourceDefinition","bodySchema","requestBody","content","schema","err","getBodySample","bodySample","getHeadersFactData","rootParameters","totalParameters","headerSchema","_Users_vijay_Work_mojaloop_pdp_testing_tool_ml_self_testing_toolkit_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","parameters","forEach","in","name","console","log","getPathParametersFactData","pathParametersSchema","AdminNavbar","react_default","Fragment","Navbar","className","expand","Container","fluid","Link","to","brandText","Footer","Sidebar","classCallCheck","possibleConstructorReturn","getPrototypeOf","collapseOpen","toggleCollapse","closeCollapse","createLinks","routes","map","prop","NavItem","es_NavLink","layout","path","tag","NavLinkRRD","onClick","activeClassName","icon","subTitle","activeRoute","bind","assertThisInitialized","routeName","location","pathname","indexOf","navbarBrandProps","_this$props","bgColor","logo","innerLink","outterLink","href","target","NavbarBrand","assign","alt","imgAlt","src","imgSrc","class","Nav","UncontrolledDropdown","nav","DropdownToggle","DropdownMenu","aria-labelledby","right","DropdownItem","divider","Collapse","navbar","isOpen","Row","Col","xs","Form","InputGroup","Input","aria-label","InputGroupAddon","addonType","InputGroupText","defaultProps","Header","minHeight","backgroundSize","backgroundPosition","Index","activeNav","chartExample1Data","toggleNavs","e","index","preventDefault","wow","setTimeout","window","Chart","parseOptions","chartOptions","Headers_Header","xl","Card","CardHeader","CardBody","es","data","chartExample2","options","Button","color","size","Table","responsive","scope","Progress","max","barClassName","UserHeader","backgroundImage","require","lg","md","MapWrapper","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","position","ajv","ValueSelector","validateAjv","handleValueChange","newValue","compile","ajvErrors","errors","getValueInput","enum","es_select","input","getErrorMessage","tooltip","errorsText","Condition","_this2","asyncToGenerator","regenerator_default","mark","_callee","selectedFactType","selectedFactPath","wrap","_context","prev","next","allFactTypes","condition","updateFactData","stop","onConditionChange","handleDelete","onDelete","factTypes","havePathParams","getFactTypeItems","tempFactTypes","toConsumableArray","JSON","stringify","handleFactTypeSelect","_ref2","_callee2","selectedValueObject","_context2","parse","t0","_x","apply","handleFactSelect","factObject","selectedOperator","operator","handleOperatorSelect","operatorDisplayNames","numericEqual","numericNotEqual","numericLessThan","numericGreaterThan","numericLessThanInclusive","numericGreaterThanInclusive","dateBefore","dateAfter","propertyTitleOperators","Amount","getOperatorItems","operatorList","displayName","FormGroup","htmlFor","BuilderTools","colSpan","ConditionBuilder_ValueSelector","align","Conditions","handleConditionChange","_this3","onConditionsChange","handleConditionDelete","conditions","splice","_this4","ConditionBuilder_Condition","resource","ConditionBuilder","_this5","newCondition","addCondition","objectSpread","handleConditionsChange","_this6","ConditionBuilder_Conditions","ConfigurableParameter","modes","inputValue","getModeMenu","EventBuilder_Option","handleModeChange","_ref","mode","abrupt","updateChanges","getValueComponent","_x2","finalValue","FixedCallbackBuilder","callbackDefinition","allParamsFromDefinition","callbackRootParameters","allParamsObject","k","description","addHeaderItemsFromDefinition","_callee3","onlyRequired","_args3","_context3","param","required","eventParams","headers","addHeaderItem","itemName","handleHeaderItemChange","handleHeaderItemDelete","_ref4","_callee4","_context4","_x3","handleBodyChange","bodyObject","body","handleAddHeaderClick","event","children","headerItemsMenu","menuItems","filter","menu","Item","paramsObject","getHeaderItems","headerItems","headerName","EventBuilder_HeaderInputComponent","itemKey","handleAddConfigParam","configurableParameterSelected","handlePopulateSampleBodyClick","_callee5","newBody","_context5","callbackObject","bodyOverride","_","merge","refs","bodyEditor","jsonEditor","update","handleConfigParamCopyToClipboard","navigator","clipboard","writeText","message","success","EventBuilder_ConfigurableParameter","card","dropdown","overlay","popover","trigger","textAlign","jsoneditor_react_es","ref","ace","theme","search","statusBar","navigationBar","HeaderInputComponent","handleNameChange","placement","defaultValue","MockCallbackBuilder","overrideChecked","handleOverrideChecked","checked","handleOverrideValuesChange","es_checkbox","EventBuilder_FixedCallbackBuilder","ParamsBuilder","eventType","EventBuilder_MockCallbackBuilder","EventBuilder","successEventTypes","errorEventTypes","handleEventTypeSelect","handleEventChange","method","getEventTypes","eventTypes","handleParamsChange","newParams","params","selectedResource","EventBuilder_ParamsBuilder","ResourceSelector","resourceOptions","getResourceOptions","openApiDefinition","paths","pathKey","methodKey","RuleEditor_Option","getResourceValue","selectedItem","eventKey","RulesEditor","callbackMap","inputRule","pathObject","methodObject","pathMethodConditions","getDefinition","sent","getCallbackMap","rule","all","delay","getConditions","getPathMethodConditions","getEvent","getRule","forceUpdate","response","axios","get","handleSave","onSave","resourceSelectHandler","getResourceDefinition","getRootParameters","rootParams","getCallbackObject","callbackObj","getCallbackRootParameters","getCallbackDefinition","handleDescriptionChange","origJson","curJson","ruleId","RuleEditor_ResourceSelector","rules_ConditionBuilder","rules_EventBuilder","rows","RuleViewer","pathCondition","methodCondition","conditionItems","cellPadding","fontSize","toUpperCase","entries","Panel","Menu","SubMenu","RulesValidation","getValidationRulesFiles","activeRulesFile","loading","validationRulesFiles","files","duration","selectedRuleFile","ruleItemActive","updateRulesFileDisplay","getValidationRulesFileContent","ruleFile","curRules","Array","isArray","getRulesFilesItems","isActive","handleRuleFileSelect","_ref3","getRulesFileContentItems","header","handleRuleClick","handleRuleDelete","rules_RuleViewer","tRule","editRule","handleAddNewRuleClick","highestRule","reduce","prevItem","newRuleId","priority","handleRuleCancelClick","handleRuleSave","newRule","newRuleFull","updatedRules","put","Content-Type","handleNewRulesFileClick","_ref6","_callee6","fileName","_context6","_x4","handleRuleFileDelete","_callee7","_context7","delete","handleRuleFileSetActive","_callee8","_context8","newFileName","modal","centered","destroyOnClose","forceRender","visible","footer","onCancel","RuleEditor","endsWith","test","error","selectedKeys","collapse","handleRuleItemActivePanelChange","RulesCallback","getCallbackRulesFiles","callbackRulesFiles","getCallbackRulesFileContent","RulesCallback_Panel","paramTypes","getParamTypeMenu","RequestBuilder_Option","handleParamTypeChange","paramType","selectedValueComponent","getRequestFactComponent","inputOptionItems","inputValues","handleParamSelect","requestSelectionOptionItems","allRequests","request","requestId","operationPath","bodyFactData","headerFactData","functionOptionItems","generateUUID","curDate","paramValue","row","col","PathBuilder","updatePath","replace","getPathItems","pathItems","span","pathParam","pathValue","dynamicPathValue","startsWith","paramName","slice","temp","borderStyle","HeaderBodyBuilder","_args4","_ref5","_x5","RequestBuilder_HeaderInputComponent","RequestBuilder_ConfigurableParameter","getDynamicValue","dynamicValue","gutter","twoToneColor","RequestBuilder","handleRequestChange","RequestBuilder_PathBuilder","RequestBuilder_HeaderBodyBuilder","Step","Steps","TabPane","Tabs","InputValues","addInputValueDialogVisible","newInputValueName","handleDeleteClick","inputValueName","getInputItems","inputItems","descriptions","values","handleAddInputValue","hasOwnProperty","addInputValueDialogContent","onVisibleChange","bordered","OutboundRequest_Option","resourceArr","RequestGenerator","getRequest","OutboundRequest_ResourceSelector","outbound_RequestBuilder","OutboundRequest","_this7","socket","componentWillUnmount","disconnect","socketIOClient","on","handleIncomingProgress","replaceInputValues","inputObject","resultObject","matchedArray","match","element","template","getRequestGeneratorItems","requests","status","tabs","defaultActiveKey","tab","OutboundRequest_RequestGenerator","handleRequestDelete","skeleton","paragraph","active","getStepItems","stepItems","spanCol","steps","current","handleInputValuesChange","handleInputValuesDelete","handleAddNewRequestClick","maxId","m","deleteIndex","findIndex","progress","handleSendClick","outboundRequestID","post","convertTemplate","remainingProps","objectWithoutProperties","newRequests","handleCreateNewTemplateClick","templateName","download","contentType","document","file","Blob","URL","createObjectURL","click","handleTemplateSaveClick","handleImportFile","file_to_read","fileRead","FileReader","onload","result","intern","readAsText","addNewRequestDialogVisible","newRequestDescription","newTemplateName","createNewTemplateDialogVisible","saveTemplateFileName","saveTemplateDialogVisible","_this8","addNewRequestDialogContent","createNewTemplateDialogContent","saveTemplateDialogContent","showTemplate","affix","offsetTop","upload","accept","showUploadList","beforeUpload","OutboundRequest_InputValues","DetailComponent","dataItem","additionalData","backgroundColor","fontFamily","display","margin","GridDetailRow","IncomingTimelineItem","expandChange","expanded","toggleLogsVisibility","logsVisible","logs","info","timeline","logTime","erroneous","main","detail","expandField","onExpandChange","field","IncomingMonitor","newState","incomingItemsObj","incomingItemsArr","lastIncomingTime","endpoint","getTimelineItems","Monitor_IncomingTimelineItem","dot","handleClearLogs","newLog","uniqueId","timeDiffMillis","Date","verbosity","itemIndex","reverse","pending","component","Dashboard","Tables","Monitor_IncomingMonitor","Admin","getRoutes","Route","getBrandText","documentElement","scrollTop","scrollingElement","mainContent","components_Sidebar_Sidebar","Navbars_AdminNavbar","Switch","AdminFooter","ReactDOM","render","BrowserRouter","layouts_Admin","Redirect","from","getElementById","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","gray","100","200","300","400","500","600","700","800","900","default","primary","secondary","danger","warning","black","white","transparent","chartExample1","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","datasets","datasetIndex","yLabel","data1","canvas","labels","data2","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","maxBarThickness","parent"],"mappings":"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","file":"static/js/main.b2148d96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.c4eb3d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.4ffd4fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.87be59a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.ab904daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.368685db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vue.9378e368.jpg\";","import React from \"react\";\n\n// reactstrap components\nimport {\n  FormGroup,\n  Form,\n  Row,\n  Button,\n  Col,\n  Table\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\nimport { Select, TreeSelect, Input, Tooltip, Tag } from 'antd';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\nexport class FactSelect extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      value: undefined,\n      treeData: [],\n      factData: null\n    };\n  }\n\n  componentDidMount = () => {\n    this.componentDidUpdate()\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.factData !== this.props.factData) {\n      let factTreeData = []\n      if (this.props.factData) {\n        factTreeData = this.getNodeFacts(this.props.factData);\n      }\n\n      let value = undefined\n      if (this.props.value) {\n        value = this.props.value\n        const selectedFact = this.findValueInFactData(value, this.props.factData)\n        this.props.onSelect(value, selectedFact)\n      }\n\n      this.setState({treeData: factTreeData, factData: this.props.factData, value})\n    }\n  }\n\n  findValueInFactData = (value, factData) => {\n    \n    const valueArr = value.split('.')\n    let tFactData = this.props.factData\n    \n    for(let i=0; i<valueArr.length; i++) {\n      const factTreeData = this.getNodeFacts(tFactData);\n      const tFact = factTreeData.find(item => {\n        return item.value === valueArr[i]\n      })\n      if(!tFact) {\n        return null\n      }\n      tFactData = tFact.nodeObject\n    }\n    return tFactData\n\n  }\n\n  getNodeFacts = (nodeData, parentId=0, valuePrefix='') => {\n    let factTreeData = [];\n    for (let property in nodeData.properties) {\n      let isLeaf = true;\n      const fact = nodeData.properties[property];\n      if (fact.type === 'object') {\n        isLeaf = false;\n      }\n      let random = Math.random()\n      .toString(36)\n      .substring(2, 6);\n      factTreeData.push({ id: random, pId: parentId, value: valuePrefix + property, nodeObject: fact, title: property, isLeaf, disabled: !isLeaf });\n    }\n    return factTreeData;\n  }\n\n  onLoadData = treeNode =>\n    new Promise(resolve => {\n      const { id, nodeObject, value } = treeNode.props;\n      setImmediate(() => {\n        this.setState({\n          treeData: this.state.treeData.concat(this.getNodeFacts(nodeObject, id, value + '.')),\n        });\n        resolve();\n      });\n    });\n\n  onChange = (value, label, extra) => {\n    this.setState({ value });\n    this.props.onSelect(value, extra.triggerNode.props.nodeObject)\n  };\n\n\n\n  render() {\n    const { treeData } = this.state;\n    return (\n      <TreeSelect\n        treeDataSimpleMode\n        style={{ width: '100%', minWidth: '200px' }}\n        value={this.state.value}\n        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n        onChange={this.onChange}\n        loadData={this.onLoadData}\n        treeData={treeData}\n      />\n    );\n  }\n}\n\nexport class FactDataGenerator {\n\n  getBodyFactData = (resourceDefinition) => {\n    let bodySchema = {}\n    try {\n      bodySchema = resourceDefinition.requestBody.content['application/json'].schema\n    } catch(err) {\n    }\n    return bodySchema\n  }\n\n  getBodySample = (resourceDefinition) => {\n    let bodySample = null\n    try {\n      bodySample = resourceDefinition['x-examples']['application/json']\n    } catch(err) {\n    }\n    return bodySample\n  }\n\n  getHeadersFactData = (resourceDefinition, rootParameters) => {\n    // Convert header array in openapi file to object like requestBody\n    let headerSchema = {\n      properties: {}\n    }\n    let totalParameters\n    if(rootParameters) {\n      totalParameters = [...rootParameters]\n    } else {\n      totalParameters = []\n    }\n    try {\n      totalParameters.concat(resourceDefinition.parameters).forEach((item) => {\n        if (item.in === 'header') {\n          headerSchema.properties[item.name] = item.schema\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n    return headerSchema\n  }\n\n  getPathParametersFactData = (rootParameters) => {\n    // Convert path parameters array in openapi file to object like requestBody\n    let pathParametersSchema = {\n      properties: {}\n    }\n    try {\n      rootParameters.forEach((item) => {\n        if (item.in === 'path') {\n          pathParametersSchema.properties[item.name] = item.schema\n        }\n      })\n    } catch(err) {\n      console.log(err)\n    }\n    return pathParametersSchema\n  }\n}\n\n\n","module.exports = __webpack_public_path__ + \"static/media/mojaloop.89213192.png\";","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Navbar,\n  Container,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form> */}\n            \n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return null\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col,\n  NavbarToggler\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n            <br /> {prop.subTitle}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n              <br />\n              <h4 class=\"mb-0\">Self Testing Toolkit</h4>\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\n// import { Button, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header bg-gradient-default opacity-8 pb-6 pt-7 pt-lg-7 d-flex align-items-center\"\n          style={{\n            minHeight: \"150px\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >          \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.jsx\";\n\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Index extends React.Component {\n  state = {\n    activeNav: 1,\n    chartExample1Data: \"data1\"\n  };\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n    let wow = () => {\n      console.log(this.state);\n    };\n    wow.bind(this);\n    setTimeout(() => wow(), 1000);\n    // this.chartReference.update();\n  };\n  componentWillMount() {\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col xl=\"6\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Resource Hits\n                      </h6>\n                      <h2 className=\"mb-0\">Incoming</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"6\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Resource Hits\n                      </h6>\n                      <h2 className=\"mb-0\">Outgoing</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Requests and Responses</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Resource name</th>\n                      <th scope=\"col\">Hits</th>\n                      <th scope=\"col\">Responses Sent</th>\n                      <th scope=\"col\">Percentage</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">GET /parties/Type/ID</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">POST /quotes</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">POST /transfer</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /parties/Type/ID</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /quotes/ID</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /transfer/ID</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /parties/Type/ID/error</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /quotes/ID/error</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">PUT /transfer/ID/error</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Rules Engine Hits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Rules Engine</th>\n                      <th scope=\"col\">Hits</th>\n                      <th scope=\"col\">Percentage</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Validation Rules</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Callback Rules</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/react.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Jesse</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n                <Button\n                  color=\"info\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Edit profile\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.jsx\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"assets/img/theme/react.jpg\")}\n                        />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Connect\n                    </Button>\n                    <Button\n                      className=\"float-right\"\n                      color=\"default\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Message\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Friends</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Photos</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Comments</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row>\n                  <div className=\"text-center\">\n                    <h3>\n                      Jessica Jones\n                      <span className=\"font-weight-light\">, 27</span>\n                    </h3>\n                    <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Bucharest, Romania\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Solution Manager - Creative Tim Officer\n                    </div>\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      University of Computer Science\n                    </div>\n                    <hr className=\"my-4\" />\n                    <p>\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                      Nick Murphy — writes, performs and records all of his own\n                      music.\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                              Username\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"lucky.jesse\"\n                              id=\"input-username\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder=\"jesse@example.com\"\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Lucky\"\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Jesse\"\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"New York\"\n                              id=\"input-city\"\n                              placeholder=\"City\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"United States\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          defaultValue=\"A beautiful Dashboard for Bootstrap 4. It is Free and\n                          Open Source.\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Register extends React.Component {\n  render() {\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <small>Sign up with</small>\n              </div>\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon mr-4\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign up with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-hat-3\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Name\" type=\"text\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative mb-3\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" />\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"text-muted font-italic\">\n                  <small>\n                    password strength:{\" \"}\n                    <span className=\"text-success font-weight-700\">strong</span>\n                  </small>\n                </div>\n                <Row className=\"my-4\">\n                  <Col xs=\"12\">\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                      <input\n                        className=\"custom-control-input\"\n                        id=\"customCheckRegister\"\n                        type=\"checkbox\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"customCheckRegister\"\n                      >\n                        <span className=\"text-muted\">\n                          I agree with the{\" \"}\n                          <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Privacy Policy\n                          </a>\n                        </span>\n                      </label>\n                    </div>\n                  </Col>\n                </Row>\n                <div className=\"text-center\">\n                  <Button className=\"mt-4\" color=\"primary\" type=\"button\">\n                    Create account\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-3\">\n                <small>Sign in with</small>\n              </div>\n              <div className=\"btn-wrapper text-center\">\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/github.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Github</span>\n                </Button>\n                <Button\n                  className=\"btn-neutral btn-icon\"\n                  color=\"default\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/icons/common/google.svg\")}\n                    />\n                  </span>\n                  <span className=\"btn-inner--text\">Google</span>\n                </Button>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div>\n              <Form role=\"form\">\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" />\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  <Button className=\"my-4\" color=\"primary\" type=\"button\">\n                    Sign in\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n            <Col className=\"text-right\" xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Create new account</small>\n              </a>\n            </Col>\n          </Row>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip742438047\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip742438047\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip941738690\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip941738690\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip804044742\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip804044742\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip996637554\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip996637554\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip746418347\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip746418347\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip102182364\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip102182364\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip406489510\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip406489510\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip476840018\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip476840018\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip753056318\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip753056318\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip441753266\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip441753266\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188462246\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188462246\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip621168444\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip621168444\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip875258217\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip875258217\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip834416663\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip834416663\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip372449339\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip372449339\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip108714769\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip108714769\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip664029969\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip664029969\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip806693074\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip806693074\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip844096937\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip844096937\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip757459971\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip757459971\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n                <CardFooter className=\"py-4\">\n                  <nav aria-label=\"...\">\n                    <Pagination\n                      className=\"pagination justify-content-end mb-0\"\n                      listClassName=\"justify-content-end mb-0\"\n                    >\n                      <PaginationItem className=\"disabled\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                          tabIndex=\"-1\"\n                        >\n                          <i className=\"fas fa-angle-left\" />\n                          <span className=\"sr-only\">Previous</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem className=\"active\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          1\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          2 <span className=\"sr-only\">(current)</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          3\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-angle-right\" />\n                          <span className=\"sr-only\">Next</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                    </Pagination>\n                  </nav>\n                </CardFooter>\n              </Card>\n            </div>\n          </Row>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip731399078\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip731399078\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip491083084\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip491083084\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip528540780\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip528540780\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip237898869\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip237898869\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188614932\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188614932\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip66535734\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip66535734\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip427561578\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip427561578\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip904098289\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip904098289\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip707904950\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip707904950\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip353988222\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip353988222\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip467171202\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip467171202\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip362118155\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362118155\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip226319315\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip226319315\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip711961370\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip711961370\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip216246707\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip216246707\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip638048561\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip638048561\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip781594051\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip781594051\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip840372212\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip840372212\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip497647175\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip497647175\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip951447946\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip951447946\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  FormGroup,\n  Form,\n  Row,\n  Button,\n  Col,\n  Table\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\nimport { Select, TreeSelect, Input, Tooltip, Tag } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport { FactDataGenerator, FactSelect } from './BuilderTools.jsx';\n// import './index.css';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\n\nclass ValueSelector extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      ajvErrors: null\n    }\n  }\n  validateAjv = null\n\n  handleValueChange = (newValue) => {\n    if (this.props.selectedFact) {\n      // TODO: The props propagations and state changes should be optimized. Currently this method is called when we update the vlaue in props.\n      // Its due to the hight level component in RulesCallback which is trying to re-render the whole page if any change in conditions detected.\n      this.validateAjv = ajv.compile(this.props.selectedFact);\n      const valid = this.validateAjv(newValue);\n      if (valid) {\n        this.props.onChange(newValue)\n        this.setState({ajvErrors: ''})\n      } else {\n        this.setState({ajvErrors: this.validateAjv.errors})\n      }\n    }\n  }\n\n\n  getValueInput = () => {\n    if(this.props.selectedFact && this.props.selectedFact.enum) {\n      return (\n        <Select\n          onChange={this.handleValueChange}\n          value={this.props.value}\n        >\n        { this.props.selectedFact.enum.map(item => {\n          return (\n            <Option key={item} value={item}>{item}</Option>\n          )\n        })}\n        </Select>\n      )\n    } else {\n      return (\n        <>\n          <Input placeholder=\"Value\" \n          value={this.props.value}\n          onChange={(e) => this.handleValueChange(e.target.value)}  />\n        </>\n      )\n    }\n  }\n\n  getErrorMessage = () => {\n    if(this.props.selectedFact && this.props.selectedFact.enum) {\n      return (null)\n    } else {\n      if(this.state.ajvErrors && this.state.ajvErrors.length > 0) {\n        return (\n          <>\n            <Tooltip title={ajv.errorsText(this.state.ajvErrors)}>\n              <Tag color=\"red\">errors found</Tag>\n            </Tooltip>\n          </>\n        )\n      }\n    }\n  }\n\n  render() {\n    return(\n      <>\n        { this.getValueInput() }\n        { this.getErrorMessage() }\n      </>\n    )\n  }\n}\n\nclass Condition extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedFactType: null,\n      selectedFact: null,\n      selectedFactPath: null,\n      factData: null,\n      selectedOperator: null\n    }\n  }\n\n  componentDidMount = async () => {\n    const selectedFactType = this.allFactTypes.find(item => {\n      return item.name === this.props.condition.fact\n    })\n    const selectedFactPath = this.props.condition.path\n    await this.setState({ selectedFactType, selectedFactPath })\n    this.updateFactData()\n  }\n\n  // handleFactChange = (newValue) => {\n  //   this.props.condition.fact = newValue\n  //   this.props.onConditionChange()\n  // }\n\n  handleValueChange = (newValue) => {\n    this.props.condition.value = newValue\n    this.props.onConditionChange()\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.index)\n    this.props.onConditionChange()\n  }\n\n  factTypes = [\n    {\n      title: 'Request Body',\n      name: 'body'\n    },\n    {\n      title: 'Request Headers',\n      name: 'headers'\n    },\n  ]\n\n  allFactTypes = [\n    {\n      title: 'Request Body',\n      name: 'body'\n    },\n    {\n      title: 'Request Headers',\n      name: 'headers'\n    },\n    {\n      title: 'Request Path Parameters',\n      name: 'pathParams'\n    }\n  ]\n\n  havePathParams = () => {\n    if (this.props.rootParameters) {\n      const firstPathItem = this.props.rootParameters.find(item => {\n        return item.in === 'path'\n      })\n      if (firstPathItem) {\n        return true\n      }\n    }\n    return false\n  }\n\n  getFactTypeItems = () => {\n    let tempFactTypes = [...this.factTypes]\n    if (this.havePathParams()) {\n      tempFactTypes.push(\n        {\n          title: 'Request Path Parameters',\n          name: 'pathParams'\n        }\n      )\n    }\n    return tempFactTypes.map((item) => {\n      return(<Option key={item.name} value={JSON.stringify(item)}>{item.title}</Option>)\n    })    \n  }\n\n  updateFactData = () => {\n    if (this.state.selectedFactType) {\n      switch(this.state.selectedFactType.name) {\n        case 'body':\n          this.setState( {factData: (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)} )\n          break\n        case 'headers':\n          this.setState( {factData: (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)} )\n          break\n        case 'pathParams':\n          this.setState( {factData: (new FactDataGenerator()).getPathParametersFactData(this.props.rootParameters)} )\n          break\n        default:\n          this.setState( {factData: null} )\n      }\n    } else {\n      this.setState( {factData: null} )\n    }\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject, selectedFact: null, selectedFactPath: null} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    // console.log('Selected', value, factObject)\n    let selectedOperator = null\n    if (this.props.condition.path === value) {\n      selectedOperator = this.props.condition.operator\n    }\n    this.setState( { selectedFact: factObject, selectedOperator, selectedFactPath: value } )\n    this.props.condition.path = value\n    this.props.condition.operator = selectedOperator\n    this.props.onConditionChange()\n  }\n\n  handleOperatorSelect = (operator) => {\n    try {\n      this.setState( {selectedOperator:  operator} )\n      this.props.condition.operator = operator\n      this.props.onConditionChange()\n    } catch(err) {}\n  }\n\n  operatorDisplayNames = {\n    numericEqual: 'Equal',\n    numericNotEqual: 'Not Equal',\n    numericLessThan: 'Less Than',\n    numericGreaterThan: 'Greater Than',\n    numericLessThanInclusive: 'Less Than or Equal to',\n    numericGreaterThanInclusive: 'Greater Than or Equal to',\n    dateBefore: 'Before',\n    dateAfter: 'After',\n  }\n  propertyTitleOperators = {\n    Amount: [ 'numericEqual', 'numericNotEqual', 'numericLessThan', 'numericGreaterThan', 'numericLessThanInclusive', 'numericGreaterThanInclusive' ],\n  }\n  getOperatorItems = () => {\n    let operatorList = []\n    if (this.state.selectedFact) {\n      // Check the selectedFact is a string type\n      if (this.state.selectedFact.type === 'string') {\n        // Check the selectedFact title in openApi file and determine the list of operators\n        if(this.propertyTitleOperators[this.state.selectedFact.title]) {\n          this.propertyTitleOperators[this.state.selectedFact.title].map(item => {\n            let displayName = item\n            // Check whether the operator name is in display names, if found replace it\n            if(this.operatorDisplayNames[item]) {\n              displayName = this.operatorDisplayNames[item]\n            }\n            operatorList.push({ displayName, name: item })\n          })\n        } else {\n          operatorList.push({displayName: 'Equal', name: 'equal'})\n          operatorList.push({displayName: 'Not Equal', name: 'notEqual'})\n        }\n      }\n    }\n\n\n    return operatorList.map(item => {\n      return(<Option key={item.name} value={item.name}>{item.displayName}</Option>)\n    })\n    // return []\n  }\n\n  render() {\n\n    return (\n      <>\n        <Table className=\"shadow\">\n          <tbody>\n          <tr>\n          <td>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-country\"\n              >\n                Fact Type\n              </label>\n              <br />\n\n              <Select \n                value={JSON.stringify(this.state.selectedFactType)}\n                onChange={this.handleFactTypeSelect}\n                style={{minWidth: '150px'}}\n              >\n                {this.getFactTypeItems()} \n              </Select>\n            </FormGroup>\n          </td>\n          <td>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-city\"\n              >\n                Fact\n              </label>\n              <br />\n              <FactSelect factData={this.state.factData} value={this.state.selectedFactPath} onSelect={this.handleFactSelect} />\n            </FormGroup>\n          </td>\n          <td>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-country\"\n              >\n                Operator\n              </label>\n              <br />\n              <Select style={{ width: 180 }} value={this.state.selectedOperator} onChange={this.handleOperatorSelect}>\n                {this.getOperatorItems()}\n              </Select>\n            </FormGroup>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan='2'>\n            <FormGroup>\n              <label\n                className=\"form-control-label\"\n                htmlFor=\"input-country\"\n              >\n                Value\n              </label>\n              <br />\n              <ValueSelector value={this.props.condition.value} selectedFact={this.state.selectedFact} onChange={this.handleValueChange} />\n\n            </FormGroup>\n          </td>\n          <td align='right'>\n            <br />\n            <Button\n              color=\"danger\"\n              onClick={this.handleDelete}\n              size=\"sm\"\n            >\n              Delete\n            </Button>\n          </td>\n          </tr>\n          </tbody>\n        </Table>\n      </>\n\n    )\n  }\n}\n\nclass Conditions extends React.Component {\n\n  // componentDidUpdate = () => {\n  //   console.log(this.props)\n  // }\n\n  handleConditionChange = (condition) => {\n    this.props.onConditionsChange()\n  }\n\n  handleConditionDelete = (index) => {\n    this.props.conditions.splice(index, 1)\n  }\n\n  render() {\n    return(\n      <>\n      {\n        this.props.conditions.map((condition, index) => {\n          return (\n            <Row key={index}>\n              <Condition condition={condition} index={index} resource={this.props.resource} resourceDefinition={this.props.resourceDefinition} rootParameters={this.props.rootParameters}\n                onConditionChange={this.handleConditionChange}\n                onDelete={this.handleConditionDelete}\n              />\n            </Row>\n          )\n        })\n      }\n      </>\n    )\n  }\n}\n\n\n\nclass ConditionBuilder extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  // async componentWillMount() {\n  //   // this.getData()\n  //   // await this.getDefinition()\n  // }\n\n  newCondition = {\n    fact: null,\n    operator: null,\n    value: null\n  }\n\n  addCondition = () => {\n    this.props.conditions.push({...this.newCondition})\n    this.handleConditionsChange()\n  }\n\n  handleConditionsChange = () => {\n    this.props.onChange({ conditions: this.props.conditions })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Conditions \n          conditions={this.props.conditions} \n          resource={this.props.resource}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters={this.props.rootParameters}\n          onConditionsChange={this.handleConditionsChange}\n        />\n        <Button\n          color=\"primary\"\n          onClick={() => this.addCondition()}\n          disabled={(this.props.resource? false : true)}\n          size=\"sm\"\n        >\n          Add Condition\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default ConditionBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n\n// reactstrap components\nimport {\n  FormGroup,\n  Row,\n  Button,\n  Col,\n  CardBody\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Select, TreeSelect, Input, Tooltip, Tag, Radio, Icon, Menu, Dropdown, Card, Popover, Checkbox, message } from 'antd';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { FactDataGenerator, FactSelect } from './BuilderTools.jsx';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\nclass ConfigurableParameter extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      mode: null,\n      factData: null,\n    }\n\n    // Set Modes Array\n    this.modes[0]='Request Path Parameter'\n    this.modes[1]='Request Body Parameter'\n    this.modes[2]='Request Header Parameter'\n    this.modes[3]='Negotiated Content Type'\n  }\n\n  modes = []\n  inputValue = null\n\n  getModeMenu = () => {\n    return this.modes.map((item, key) => {\n      return (\n        <Option key={key} value={key}>\n          {item}\n        </Option>\n      )\n    })\n  }\n  \n  handleModeChange = async (mode) => {\n    var factData = null\n    switch(mode) {\n      case 0:\n        factData = (new FactDataGenerator()).getPathParametersFactData(this.props.rootParameters)\n        break\n      case 1:\n        factData = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n        break\n      case 2:\n        factData = (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)\n        break\n      default:\n        factData = null\n    }\n    await this.setState( {mode: mode, factData: factData} )\n    this.updateChanges()\n  }\n\n  getValueComponent = () => {\n    switch(this.state.mode) {\n      case 0:\n      case 1:\n      case 2:\n        return (\n          <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n        )\n        break\n      case 3:\n      default:\n        return null\n    }\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    this.inputValue = value\n    this.updateChanges()\n  }\n\n  updateChanges = () => {\n    let finalValue = ''\n    if (!this.inputValue) {\n      this.inputValue = ''\n    }\n    switch(this.state.mode) {\n      case 0:\n        finalValue = '{$request.params.' + this.inputValue + '}'\n        break\n      case 1:\n        finalValue = '{$request.body.' + this.inputValue + '}'\n        break\n      case 2:\n        finalValue = '{$request.header.' + this.inputValue + '}'\n        break\n      case 3:\n        finalValue = '{$session.negotiatedContentType}'\n        break\n      default:\n        finalValue = this.inputValue\n    }\n    \n\n    this.props.onChange(finalValue)\n  }\n\n  handleValueChange = (newValue) => {\n    this.inputValue = newValue\n    this.updateChanges()\n  }\n\n  render() {\n\n    return (\n      <Row>\n        <Col>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.modes[this.state.mode]}\n            onSelect={this.handleModeChange}\n          >\n            {this.getModeMenu()}\n          </Select>\n        </Col>\n        <Col>\n          {this.getValueComponent()}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass FixedCallbackBuilder extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      configurableParameterSelected: '',\n      allParamsFromDefinition: [],\n      allParamsObject: {}\n    }\n  }\n\n  bodySchema = {}\n\n  componentDidMount = () => {\n    // console.log(this.props.callbackRootParameters)\n    // console.log(this.props.resourceDefinition.parameters)\n    // console.log(this.props.callbackDefinition)\n    this.bodySchema = (new FactDataGenerator()).getBodyFactData(this.props.callbackDefinition)\n\n\n    let allParamsFromDefinition = []\n    if (this.props.callbackRootParameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.callbackRootParameters)\n    }\n    if (this.props.callbackDefinition.parameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.callbackDefinition.parameters)\n    }\n\n    let allParamsObject = {}\n    for (let k in allParamsFromDefinition) {\n      allParamsObject[allParamsFromDefinition[k].name] = {\n        description: allParamsFromDefinition[k].description\n      }\n    }\n    this.setState({allParamsFromDefinition, allParamsObject})\n\n  }\n  // componentDidUpdate = () => {\n  //   // console.log(this.props.callbackRootParameters)\n  //   // console.log(this.props.resourceDefinition.parameters)\n  //   // console.log(this.props.callbackDefinition)\n    \n\n\n  // }\n\n\n  addHeaderItemsFromDefinition = async (onlyRequired=false) => {\n    this.state.allParamsFromDefinition.forEach((param) => {\n      if (param.in==='header') {\n        if (!onlyRequired || param.required) {\n          if (!this.props.eventParams.headers) {\n            this.props.eventParams.headers = {}\n            this.props.eventParams.headers[param.name] = ''\n          }\n          else if (!this.props.eventParams.headers[param.name]) {\n            this.props.eventParams.headers[param.name] = ''\n          }\n        }\n      }\n    })\n    this.updateChanges()\n  }\n\n  addHeaderItem = (itemName) => {\n    if (!this.props.eventParams.headers) {\n      this.props.eventParams.headers = {}\n    }\n    this.props.eventParams.headers[itemName] = this.props.eventParams.headers[itemName] ? this.props.eventParams.headers[itemName] : \"\"\n    this.updateChanges()\n  }\n  handleHeaderItemChange = (key, name, value) => {\n    this.props.eventParams.headers[name] = value\n    this.updateChanges()\n  }\n  handleHeaderItemDelete = async (name) => {\n    delete this.props.eventParams.headers[name]\n    this.updateChanges()\n  }\n\n  handleBodyChange = (bodyObject) => {\n    // console.log(ace.getCursorPosition())\n    this.props.eventParams.body = bodyObject\n    this.updateChanges()\n  }\n\n  handleAddHeaderClick = (event) => {\n    this.addHeaderItem(event.item.props.children);\n  };\n\n  headerItemsMenu = () => {    \n    const headerParams = this.state.allParamsFromDefinition.filter(item => {\n      return item.in === 'header'\n    })\n    const menuItems = headerParams.map((item, key) => {\n      return (\n        <Menu.Item key={key}>{item.name}</Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={this.handleAddHeaderClick}>\n        {menuItems}\n      </Menu>\n    )\n  }\n\n  updateChanges = () => {\n    const paramsObject = {}\n    paramsObject.headers = this.props.eventParams.headers\n    paramsObject.body = this.props.eventParams.body\n    this.props.onChange(paramsObject)\n  }\n\n  getHeaderItems = () => {\n    let headerItems = []\n    let k=0\n    if (this.props.eventParams) {\n      for( let headerName in this.props.eventParams.headers ) {\n        const item = {\n          name: headerName,\n          value: this.props.eventParams.headers[headerName]\n        }\n        const key = k++\n        headerItems.push(\n          <HeaderInputComponent key={key} itemKey={item.name} name={item.name} value={item.value} description={this.state.allParamsObject[item.name]? this.state.allParamsObject[item.name].description: null} rootParameters={this.props.rootParameters} resourceDefinition={this.props.resourceDefinition} onChange={this.handleHeaderItemChange} onDelete={this.handleHeaderItemDelete} />\n        )\n      }\n    }\n    return headerItems\n\n  }\n\n  handleAddConfigParam = (newValue) => {\n    this.setState({configurableParameterSelected: newValue})\n  }\n\n\n  handlePopulateSampleBodyClick = async () => {\n    const newBody = (new FactDataGenerator()).getBodySample(this.props.callbackDefinition)\n    if(newBody) {\n      if(this.props.callbackObject && this.props.callbackObject.bodyOverride) {\n        _.merge(newBody, this.props.callbackObject.bodyOverride)\n      }\n      this.props.eventParams.body = newBody\n      this.refs.bodyEditor.jsonEditor.update(this.props.eventParams.body)\n      this.updateChanges()\n    }\n  }\n\n  handleConfigParamCopyToClipboard = () => {\n    navigator.clipboard.writeText(this.state.configurableParameterSelected)\n    message.success('Copied to clipboard');\n  }\n\n  render() {\n\n    const content = (\n      <>\n      <Row>\n        <Col>\n          <ConfigurableParameter\n            onChange={this.handleAddConfigParam}\n            rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n          />\n        </Col>\n      </Row>\n      {\n        this.state.configurableParameterSelected ?\n        (\n          <Row className=\"mt-4 text-center\">\n            <Col>\n              <Tag color=\"geekblue\"><a onClick={this.handleConfigParamCopyToClipboard}>{this.state.configurableParameterSelected}</a></Tag>\n            </Col>\n          </Row>\n        )\n        : null\n      }\n      </>\n    )\n\n    return (\n      <>\n        <Row>\n          <Col>\n            <Card size=\"small\" title=\"Headers\">\n              <Row>\n                <Col lg=\"12\">\n                  <FormGroup>\n                    <Row>\n                      <Col lg=\"4\">\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Name\n                        </label>\n                      </Col>\n                      <Col lg=\"4\">\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Value\n                        </label>\n                      </Col>\n                    </Row>\n                    { this.getHeaderItems() }\n                  </FormGroup>\n                  <Dropdown overlay={this.headerItemsMenu()}>\n                    <Button\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Add Header\n                    </Button>\n\n                  </Dropdown>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => this.addHeaderItemsFromDefinition(true)}\n                    size=\"sm\"\n                  >\n                    Add Required Headers\n                  </Button>\n                  <Button\n                    color=\"info\"\n                    onClick={() => this.addHeaderItemsFromDefinition(false)}\n                    size=\"sm\"\n                  >\n                    Add All Headers\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row className='mt-2'>\n          <Col>\n            <Card size=\"small\" title=\"Body\">\n              <Row className='mb-2'>\n                <Col lg=\"6\">\n                  <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n                    <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n                  </Popover>\n                </Col>\n                <Col lg=\"6\" style={{textAlign: 'right'}}>\n                  <Button color=\"success\" size=\"sm\" onClick={this.handlePopulateSampleBodyClick} >Populate with sample body</Button>\n                </Col>\n              </Row>\n              <Row >\n                <Col lg=\"12\">\n                  <Editor\n                    ref=\"bodyEditor\"\n                    value={ this.props.eventParams.body? this.props.eventParams.body : {} }\n                    ace={ace}\n                    ajv={ajv}\n                    theme=\"ace/theme/tomorrow_night_blue\"\n                    mode=\"code\"\n                    search={false}\n                    statusBar={false}\n                    navigationBar={false}\n                    onChange={this.handleBodyChange}\n                    schema={this.bodySchema}\n                    // onError={this.handleError}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n}\n\n\nclass HeaderInputComponent extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      value: ''\n    }\n  }\n  inputValue = null\n\n  componentDidMount = () => {\n    this.inputValue = this.props.value\n  }\n\n  componentDidUpdate = () => {\n    this.inputValue = this.props.value\n  }\n\n  handleNameChange = (event) => {\n    // this.setState({name: event.target.value})\n    this.props.onChange(this.props.itemKey, event.target.value, this.props.value)\n  }\n  handleAddConfigParam = (newValue) => {\n    this.inputValue = newValue\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n  handleValueChange = (event) => {\n    this.inputValue = event.target.value\n    // console.log(event.target.value)\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.itemKey)\n  }\n\n  \n  render() {\n\n    const content = (\n      <ConfigurableParameter\n        name={this.props.name}\n        value={this.props.value}\n        onChange={this.handleAddConfigParam}\n        rootParameters={this.props.rootParameters}\n        resourceDefinition={this.props.resourceDefinition}\n      />\n    )\n\n    \n    return (\n      <>\n      <Row>\n        <Col lg=\"4\">\n          <Tooltip placement=\"topLeft\" title={this.props.description}>\n            <Input\n              className=\"form-control-alternative\"\n              placeholder=\"Name\"\n              type=\"text\"\n              defaultValue={this.props.name}\n              value={this.props.name}\n              onChange={this.handleNameChange}\n              disabled={false}\n            />\n          </Tooltip>\n        </Col>\n        \n        <Col lg=\"6\">\n          <Input\n            className=\"form-control-alternative\"\n            placeholder=\"Name\"\n            type=\"text\"\n            defaultValue={this.props.value}\n            value={this.props.value}\n            onChange={this.handleValueChange}\n            disabled={false}\n          />\n          <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n            <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n          </Popover>\n\n        </Col>\n        <Col lg=\"2\">\n          <Button\n            color=\"danger\"\n            key={this.props.name}\n            onClick={this.handleDelete}\n            size=\"sm\"\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\nclass MockCallbackBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      overrideChecked: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (this.props.eventParams) {\n      if (this.props.eventParams.headers || this.props.eventParams.body) {\n        this.setState({overrideChecked: true})\n      }\n    }\n    \n  }\n\n  handleOverrideChecked = (event) => {\n    this.setState({overrideChecked: event.target.checked})\n    if (!event.target.checked) {\n      this.handleOverrideValuesChange({})\n    }\n  }\n\n  handleOverrideValuesChange = (paramsObject) => {\n    // const paramsObject = {}\n    // paramsObject.header = this.getHeaderObject()\n    // paramsObject.body = this.state.body\n  \n    this.props.onChange(paramsObject)\n  }\n\n  render () {\n    return (\n      <>\n      <Row>\n        <Col>\n          <Checkbox checked={this.state.overrideChecked} onChange={this.handleOverrideChecked}>Override some parameters</Checkbox>\n        </Col>\n      </Row>\n      { this.state.overrideChecked?\n            <Row className='mt-3'>\n            <Col>\n              <FixedCallbackBuilder\n                eventParams={this.props.eventParams}\n                onChange={this.handleOverrideValuesChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n                callbackDefinition={this.props.callbackDefinition}\n                callbackRootParameters={this.props.callbackRootParameters}\n                callbackObject={this.props.callbackObject}\n              />\n            </Col>\n          </Row>\n        : null\n      }\n\n      </>\n    )\n  }\n}\n\nclass ParamsBuilder extends React.Component {\n  \n  render() {\n    if (this.props.eventType === 'FIXED_CALLBACK' || this.props.eventType === 'FIXED_ERROR_CALLBACK') {\n      return (\n        <FixedCallbackBuilder\n          eventParams={this.props.eventParams}\n          onChange={this.props.onChange}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters = {this.props.rootParameters}\n          callbackDefinition={this.props.callbackDefinition}\n          callbackRootParameters={this.props.callbackRootParameters}\n          callbackObject={this.props.callbackObject}\n        />\n      )\n    }\n    else if (this.props.eventType === 'MOCK_CALLBACK' || this.props.eventType === 'MOCK_ERROR_CALLBACK') {\n      return (\n        <MockCallbackBuilder\n          eventParams={this.props.eventParams}\n          onChange={this.props.onChange}\n          resourceDefinition={this.props.resourceDefinition}\n          rootParameters = {this.props.rootParameters}\n          callbackDefinition={this.props.callbackDefinition}\n          callbackRootParameters={this.props.callbackRootParameters}\n          callbackObject={this.props.callbackObject}\n        />\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nclass EventBuilder extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedResource: null\n    };\n  }\n\n  // componentDidMount = () => {\n  //   console.log(this.props)\n  // }\n\n  // componentDidUpdate = () => {\n  //   console.log(this.props.event)\n  // }\n\n  successEventTypes = [\n    {\n      name: 'FIXED_CALLBACK',\n      title: 'Fixed Callback'\n    },\n    {\n      name: 'MOCK_CALLBACK',\n      title: 'Mock Callback'\n    }\n  ]\n\n  errorEventTypes = [\n    {\n      name: 'FIXED_ERROR_CALLBACK',\n      title: 'Fixed Error Callback'\n    },\n    {\n      name: 'MOCK_ERROR_CALLBACK',\n      title: 'Mock Error Callback'\n    }\n  ]\n\n  handleEventTypeSelect = (eventType) => {\n    this.props.event.type = eventType\n    this.handleEventChange()\n  }\n\n  handleEventChange = () => {\n    if (this.props.callbackObject) {\n      this.props.event.method = this.props.callbackObject.method\n      this.props.event.path = this.props.callbackObject.path\n    }\n\n    this.props.onChange(this.props.event)\n  }\n\n  getEventTypes = () => {\n    let eventTypes = this.successEventTypes\n    if (this.props.mode === 'validation') {\n      eventTypes = this.errorEventTypes\n    }\n    return eventTypes.map(item => {\n      return (\n        <Option key={item.name} value={item.name}>{item.title}</Option>\n      )\n    })\n  }\n\n  handleParamsChange = (newParams) => {\n    if (newParams) {\n      this.props.event.params = newParams\n    } else {\n      delete this.props.event.params\n    }\n    this.handleEventChange()\n  }\n\n  render() {\n\n    return (\n      <>\n        <div className=\"pl-lg-4\">\n          <Row>\n            <Col md=\"12\">\n              <FormGroup>\n                <label\n                  className=\"form-control-label\"\n                  htmlFor=\"input-address\"\n                >\n                  Event Type\n                </label>\n                <Select\n                  value={this.props.event.type}\n                  onChange={this.handleEventTypeSelect}\n                  disabled={(this.props.resource? false : true)}\n                >\n                  {this.getEventTypes()}\n                </Select>\n              </FormGroup>\n            </Col>\n          </Row>\n          <ParamsBuilder\n            eventType={this.props.event.type}\n            eventParams={this.props.event.params}\n            onChange={this.handleParamsChange}\n            resourceDefinition={this.props.resourceDefinition}\n            rootParameters = {this.props.rootParameters}\n            callbackDefinition={this.props.callbackDefinition}\n            callbackRootParameters={this.props.callbackRootParameters}\n            callbackObject={this.props.callbackObject}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EventBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  FormGroup,\n  CardHeader,\n  Form,\n  Input,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n// core components\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\n\nimport { Select } from 'antd';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport axios from 'axios';\nimport './fixAce.css';\nimport ConditionBuilder from './ConditionBuilder'\nimport EventBuilder from './EventBuilder'\n\nconst { Option } = Select;\n\nclass ResourceSelector extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedItem: null\n    }\n  }\n  resourceOptions = []\n\n  getResourceOptions = () => {\n    this.resourceOptions = []\n    if(this.props.openApiDefinition.paths) {\n      let currentResourceGroup = ''\n      for ( let pathKey in this.props.openApiDefinition.paths ) {\n        for ( let methodKey in this.props.openApiDefinition.paths[pathKey]) {\n          let itemKey = JSON.stringify({\n            method: methodKey,\n            path: pathKey\n          })\n          switch(methodKey) {\n            case 'get':\n            case 'post':\n              if (pathKey === '/parties/{Type}/{ID}' || pathKey === '/quotes' || pathKey === '/transfers') {\n                this.resourceOptions.push(<Option key={itemKey} value={itemKey}>{methodKey} {pathKey}</Option>)                \n              }\n              break\n          }\n        }\n      }\n    }\n    return this.resourceOptions\n  }\n\n  getResourceValue = () => {\n    if(this.props.value) {\n      return JSON.stringify(this.props.value)\n    } else {\n      return null\n    }\n    \n  }\n\n  render() {\n\n    const resourceSelectHandler = (eventKey) => {\n      this.state.selectedItem = JSON.parse(eventKey)\n      this.props.onSelect(this.state.selectedItem)\n      // console.log(this.props.openApiDefinition.paths[selectedItem.path][selectedItem.method])\n    }\n\n    return(\n      <Select onChange={resourceSelectHandler}\n        disabled={(this.state.selectedItem? true : false)}\n        style={{ width: 300 }}\n        placeholder=\"Select a resource\"\n        value={this.getResourceValue()}\n      >\n      {this.getResourceOptions()}\n      </Select>\n    )\n  }\n}\n\nclass RulesEditor extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      origJson: [],\n      curJson: {},\n      description: '',\n      event: {},\n      conditions: [],\n      pathMethodConditions: [],\n      openApiDefinition: {},\n      selectedResource: null,\n      callbackMap: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    const openApiDefinition = await this.getDefinition()\n    const callbackMap = await this.getCallbackMap()\n    // Deep clone the input rule to a new object to work with (Copying without object references recursively)\n    const inputRule = JSON.parse(JSON.stringify(this.props.rule))\n    let selectedResource = null\n    try {\n      const pathObject = inputRule.conditions.all.find(item => (item.fact === 'operationPath'))\n      const methodObject = inputRule.conditions.all.find(item => (item.fact === 'method'))\n      if(pathObject && methodObject) {\n        selectedResource = {\n          method: methodObject.value,\n          path: pathObject.value\n        }\n      }\n    } catch(err) {}\n\n    let pathMethodConditions = []\n    let conditions = []\n    try {\n      pathMethodConditions = inputRule.conditions.all.filter(item => {\n        if(item.fact === 'method' || item.fact === 'operationPath') {\n          return true\n        } else {\n          return false\n        }\n      })\n      conditions = inputRule.conditions.all.filter(item => {\n        if(item.fact === 'method' || item.fact === 'operationPath') {\n          return false\n        } else {\n          return true\n        }\n      })\n    } catch(err){}\n\n    let event = {\n      method: null,\n      path: null,\n      params: {},\n      delay: 0\n    }\n    if (inputRule.event) {\n      event = inputRule.event\n    }\n\n    let description = ''\n    if (inputRule.description) {\n      description = inputRule.description\n    }\n    this.setState({description, conditions, pathMethodConditions, event, selectedResource, openApiDefinition, callbackMap})\n  }\n\n  getConditions = () => {\n    return this.state.conditions\n  }\n\n  getPathMethodConditions = () => {\n    return this.state.pathMethodConditions\n  }\n\n  getEvent = () => {\n    return this.state.event\n  }\n  // async componentWillMount() {\n  //   await this.getDefinition()\n  //   await this.getCallbackMap()\n  // }\n\n  getRule = () => {\n    const rule = {\n      description: this.state.description,\n      conditions: {\n        \"all\": [...this.state.conditions, ...this.state.pathMethodConditions]\n      },\n      event: this.state.event,\n    }\n    return JSON.stringify(rule, null, 2)\n  }\n\n  handleConditionsChange = () => {\n    this.forceUpdate()\n    // this.setState({conditions});\n  };\n\n  handleEventChange = (event) => {\n    this.setState({event});\n  };\n\n  getDefinition = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/definition/1.1\")\n    // console.log(response.data)\n    return response.data\n    // this.setState(  { openApiDefinition: response.data } )\n  }\n\n  getCallbackMap = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/callback_map/1.1\")\n    return response.data\n    // this.setState(  { callbackMap: response.data } )\n  }\n\n  handleSave = () => {\n    // const newJson = this.refs.editor.jsonEditor.get()\n    // // this.setState( { curJson: [ ...newJson ]} )\n    // axios.put(\"http://localhost:5050/api/rules/callback\", newJson, { headers: { 'Content-Type': 'application/json' } })\n    this.props.onSave(JSON.parse(this.getRule()))\n  }\n\n  resourceSelectHandler = (resource) => {\n    this.state.pathMethodConditions = []\n    this.state.pathMethodConditions.push({\n      fact: 'operationPath',\n      operator: 'equal',\n      value: resource.path\n    })\n    this.state.pathMethodConditions.push({\n      fact: 'method',\n      operator: 'equal',\n      value: resource.method\n    })\n    this.setState({selectedResource: resource})\n\n  }\n\n  getResourceDefinition = () => {\n    if (this.state.selectedResource && this.state.openApiDefinition) {\n      return this.state.openApiDefinition.paths[this.state.selectedResource.path][this.state.selectedResource.method]\n    }\n    return null\n  }\n  getRootParameters = () => {\n    var rootParams = []\n    if (this.state.selectedResource && this.state.openApiDefinition) {\n      rootParams = this.state.openApiDefinition.paths[this.state.selectedResource.path].parameters\n    }\n    return rootParams\n  }\n\n  getCallbackObject = () => {\n      let callbackObj = null\n      try {\n        if(this.props.mode === 'validation') {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['errorCallback']\n        } else {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['successCallback']\n        }\n      } catch(err){\n      }\n      return callbackObj\n  }\n\n  getCallbackRootParameters = () => {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path].parameters\n      } catch(err) {\n        return []\n      }\n \n  }\n\n  getCallbackDefinition = () => {\n    if (this.state.selectedResource) {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path][callbackObj.method]\n      } catch(err) {\n        return null\n      }\n\n    }\n    return null\n  }\n\n  handleDescriptionChange = (newValue) => {\n    this.setState({description: newValue})\n  }\n\n\n  render() {\n    return (\n      <>\n          <Row>\n            {/* <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"6\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex float-right\">\n                    <Button\n                      className=\"float-right\"\n                      color=\"primary\"\n                      href=\"#pablo\"\n                      onClick={this.handleSave}\n                      size=\"sm\"\n                    >\n                      Save\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <div className=\"text-left\">\n                    <pre>{this.getRule()}</pre>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col> */}\n            <Col className=\"order-xl-1\" xl=\"12\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"2\">\n                      <h3 className=\"mb-0\">Rule #{this.props.rule.ruleId}</h3>\n                    </Col>\n                    <Col xs=\"6\" className=\"text-center\">\n                      <b>Resource:</b> <ResourceSelector value={this.state.selectedResource} openApiDefinition={this.state.openApiDefinition} onSelect={this.resourceSelectHandler} />\n                    </Col>\n                    <Col xs=\"4\">\n                      <Row className=\"text-right float-right\">\n                        <Col>\n                          <Button\n                            color=\"danger\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                            size=\"sm\"\n                          >\n                            Reset\n                          </Button>\n                        </Col>\n                        <Col>\n                          <Button\n                            className=\"float-right\"\n                            color=\"primary\"\n                            href=\"#pablo\"\n                            onClick={this.handleSave}\n                            size=\"sm\"\n                          >\n                            Save\n                          </Button>\n                        </Col>\n                      </Row>\n\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Conditions\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <ConditionBuilder\n                        conditions={this.getConditions()}\n                        pathMethodConditions={this.getPathMethodConditions()}\n                        onChange={this.handleConditionsChange} \n                        openApiDefinition={this.state.openApiDefinition}\n                        resource={this.state.selectedResource}\n                        resourceDefinition={this.getResourceDefinition()}\n                        rootParameters={this.getRootParameters()}\n                      />\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Event\n                    </h6>\n                    <EventBuilder\n                      event={this.getEvent()}\n                      onChange={this.handleEventChange}\n                      resource={this.state.selectedResource}\n                      resourceDefinition={this.getResourceDefinition()}\n                      rootParameters={this.getRootParameters()}\n                      callbackDefinition={this.getCallbackDefinition()}\n                      callbackRootParameters={this.getCallbackRootParameters()}\n                      callbackObject={this.getCallbackObject()}\n                      mode={this.props.mode}\n                    />\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">Rule Details</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>Rule Description</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about the rule ...\"\n                          onChange={(e) => this.handleDescriptionChange(e.target.value)}\n                          rows=\"4\"\n                          value={this.state.description}\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n      </>\n    );\n  }\n}\n\nexport default RulesEditor;\n","import React from \"react\";\n\nimport { Card, Tag, Icon, Button, Row, Col } from 'antd';\n\nclass RuleViewer extends React.Component {\n\n  render () {\n    const inputRule = this.props.rule\n    let resource = {}\n    let conditions = []\n    try {\n      const pathCondition = inputRule.conditions.all.find(item => {\n        if(item.fact === 'operationPath') {\n          return true\n        } else {\n          return false\n        }\n      })\n      if(pathCondition) {\n        resource.path = pathCondition.value\n      }\n      const methodCondition = inputRule.conditions.all.find(item => {\n        if(item.fact === 'method') {\n          return true\n        } else {\n          return false\n        }\n      })\n      if(methodCondition) {\n        resource.method = methodCondition.value\n      }\n\n      conditions = inputRule.conditions.all.filter(item => {\n        if(item.fact === 'method' || item.fact === 'operationPath') {\n          return false\n        } else {\n          return true\n        }\n      })\n    } catch(err){}\n\n    const conditionItems = conditions.map(item => {\n      return (\n        <>\n        <Card size=\"small\" className=\"mt-1\" >\n          <Tag color=\"cyan\">{item.fact}.{item.path}</Tag>\n          <Tag>{item.operator}</Tag>\n          <Tag color=\"blue\">{item.value}</Tag>\n          </Card>\n        </>\n      )\n    })\n\n    return (\n      <>\n        <table width='100%' cellPadding=\"5px\">\n        <tr>\n          <td className=\"align-text-top\" width='25px'>\n              <Icon type=\"double-right\" style={{ fontSize: '20px', color: '#08c' }}></Icon>\n          </td>\n          <td>\n            <h3>{resource.method.toUpperCase()+' '+resource.path}</h3>\n          </td>\n        </tr>\n        {\n          conditions.length > 0\n          ? (\n            <tr>\n              <td className=\"align-text-top\">\n                <Icon type=\"question\" style={{ fontSize: '20px', color: '#08c' }}></Icon>\n              </td>\n              <td>\n                <h3>Conditions</h3>\n                {conditionItems}\n              </td>\n            </tr>\n          )\n          : null\n        }\n        <tr>\n          <td className=\"align-text-top\">\n            <Icon type=\"double-left\" style={{ fontSize: '20px', color: '#08c' }}></Icon>\n          </td>\n          <td>\n            <h3>Event</h3>\n            {\n              Object.entries(inputRule.event.params).length > 0\n              ? (\n                <Card size=\"small\" className=\"mt-4\" title={inputRule.event.type}>\n                  <pre>{JSON.stringify(inputRule.event.params, null, 2)}</pre>\n                </Card>\n              )\n              : inputRule.event.type\n            }\n          </td>\n        </tr>\n        </table>\n      </>\n    )\n  }\n}\n\nexport default RuleViewer;","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n\nimport { Input, Select, Menu, Collapse, Modal, Icon, message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from 'axios';\nimport RulesEditor from './RuleEditor'\nimport RuleViewer from './RuleViewer'\n\nconst { Option } = Select;\nconst { SubMenu } = Menu;\nconst { Panel } = Collapse;\n\n\nclass RulesValidation extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      validationRulesFiles: [],\n      activeRulesFile: null,\n      selectedRuleFile: null,\n      curRules: [],\n      editRule: null,\n      mode: null\n    };\n  }\n\n  componentDidMount() {\n    this.getValidationRulesFiles()\n  }\n\n  getValidationRulesFiles = async () => {\n    message.loading({ content: 'Getting rules files...', key: 'getFilesProgress' });\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/validation\")\n    const activeRulesFile = response.data.activeRulesFile\n    await this.setState(  { validationRulesFiles: response.data.files, activeRulesFile } )\n    message.success({ content: 'Loaded', key: 'getFilesProgress', duration: -1 });\n\n    // Select the active rules file by default\n    await this.setState({selectedRuleFile: activeRulesFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n\n  }\n\n  getValidationRulesFileContent = async (ruleFile) => {\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/validation/\" + ruleFile)\n    let curRules = []\n    if (response.data && Array.isArray(response.data)) {\n      curRules = response.data\n    }\n    this.setState(  { curRules } )\n  }\n\n  getRulesFilesItems = () => {\n    return this.state.validationRulesFiles.map(ruleFile => {\n      const isActive = (ruleFile === this.state.activeRulesFile)\n      return (\n      <Menu.Item key={ruleFile}>{isActive?(<Icon type=\"check\" />):''} {ruleFile}</Menu.Item>\n      )\n    })\n  }\n\n  handleRuleFileSelect = async (selectedItem) => {\n    const selectedRuleFile = selectedItem.key\n    await this.setState({selectedRuleFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  updateRulesFileDisplay = () => {\n    this.getValidationRulesFileContent(this.state.selectedRuleFile)\n  }\n\n  getRulesFileContentItems = () => {\n    return this.state.curRules.map((rule, key) => {\n      return (\n        <Panel header={rule.description} key={key}>\n          <Row>\n            <Col xs=\"12\" style={{textAlign: 'right'}}>\n              <Button\n                color=\"info\"\n                onClick={this.handleRuleClick(rule)}\n                size=\"sm\"\n              >\n                Edit\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={this.handleRuleDelete(rule.ruleId)}\n                size=\"sm\"\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <RuleViewer rule={rule} />\n            </Col>\n          </Row>\n        </Panel>\n      )\n    })\n  }\n\n  handleRuleClick = (tRule={}) => {\n    // console.log(rule)\n    return () => {\n      this.setState({editRule: tRule, mode: 'edit'})\n    }\n  }\n\n  handleAddNewRuleClick = () => {\n    // Calculate the new rule ID which is the next number of the highest rule ID in the list\n    const highestRule = this.state.curRules.reduce((prevItem, item) => {\n      return (prevItem.ruleId > item.ruleId ? prevItem : item)\n    }, this.state.curRules[0])\n\n    let newRuleId = 1\n    if (highestRule) {\n      newRuleId = highestRule.ruleId + 1\n    }\n    \n    const tRule = {\n      ruleId: newRuleId,\n      priority: 1\n    }\n\n    this.setState({editRule: tRule, mode: 'create'})\n  }\n\n  handleRuleCancelClick = () => {\n    this.setState({editRule: null})\n  }\n\n  handleRuleSave = async (newRule) => {\n    const newRuleFull = {\n      ruleId: this.state.editRule.ruleId,\n      priority: this.state.editRule.priority,\n      ...newRule\n    }\n\n    let updatedRules = null\n    if(this.state.mode == 'create') {\n      updatedRules = this.state.curRules.concat(newRuleFull)\n    } else if(this.state.mode == 'edit') {\n      updatedRules = this.state.curRules.map(item => {\n        if (item.ruleId === newRuleFull.ruleId) {\n          return newRuleFull\n        } else {\n          return item\n        }\n      })\n    }\n\n    if (updatedRules) {\n      message.loading({ content: 'Saving the rule...', key: 'ruleSaveProgress' });\n      await axios.put(\"http://localhost:5050/api/rules/files/validation/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n      await this.setState({editRule: null, curRules: updatedRules})\n      message.success({ content: 'Saved', key: 'ruleSaveProgress', duration: 2 });\n    }\n  }\n\n  handleRuleDelete = (ruleId) => {\n    return async () => {\n      const updatedRules = this.state.curRules.filter(item => {\n        return item.ruleId !== ruleId\n      })\n      if (updatedRules) {\n        message.loading({ content: 'Deleting rule...', key: 'deleteProgress' });\n        await axios.put(\"http://localhost:5050/api/rules/files/validation/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n        message.success({ content: 'Deleted', key: 'deleteProgress', duration: 2 });\n        this.setState({editRule: null, curRules: updatedRules})\n      }\n    }\n  }\n\n  handleNewRulesFileClick = async (fileName) => {\n    message.loading({ content: 'Creating new file...', key: 'fileNewProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/validation/\" + fileName)\n    await this.getValidationRulesFiles()\n    await this.setState({selectedRuleFile: fileName, ruleItemActive: null})\n    message.success({ content: 'Created', key: 'fileNewProgress', duration: 2 });\n    this.updateRulesFileDisplay()\n  }\n\n  handleRuleFileDelete = async () => {\n    message.loading({ content: 'Deleting file...', key: 'deleteFileProgress' });\n    await axios.delete(\"http://localhost:5050/api/rules/files/validation/\" + this.state.selectedRuleFile)\n    await this.getValidationRulesFiles()\n    await this.setState({selectedRuleFile: null, ruleItemActive: null})\n    message.success({ content: 'Deleted', key: 'deleteFileProgress', duration: 2 });\n  }\n\n  handleRuleFileSetActive = async () => {\n    message.loading({ content: 'Activating rule file...', key: 'activateFileProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/validation\", { type: 'activeRulesFile', fileName: this.state.selectedRuleFile }, { headers: { 'Content-Type': 'application/json' } })\n    await this.getValidationRulesFiles()\n    this.updateRulesFileDisplay()\n    message.success({ content: 'Activated', key: 'activateFileProgress', duration: 2 });\n  }\n\n\n  render() {\n    var newFileName = ''\n    var newFileNameErrorMessage = ''\n    const newFileCreateConfirm = () => {\n      // Validate filename format\n      // TODO: Some additional validation for the filename format\n      if (!newFileName.endsWith('.json')) {\n        message.error('Filename should be ended with .json');\n        return\n      }\n\n      if (/\\s/.test(newFileName)) {\n        message.error('Filename contains spaces');\n        return\n      }\n\n      this.setState({ mode: null})\n      this.handleNewRulesFileClick(newFileName)\n    }\n\n    return (\n      <>\n          <Modal\n            centered\n            destroyOnClose\n            forceRender\n            title=\"Rule Builder\"\n            className=\"w-50 p-3\"\n            visible={this.state.editRule? true : false}\n            footer={null}\n            onCancel={this.handleRuleCancelClick}\n          >\n            <RulesEditor\n              rule={this.state.editRule}\n              onSave={this.handleRuleSave}\n              mode='validation'\n            />\n          </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      onClick={() => {this.setState({ mode: 'newFile'})}}\n                      size=\"sm\"\n                    >\n                      New Rules File\n                    </Button>\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          color=\"success\"\n                          onClick={this.handleRuleFileSetActive}\n                          size=\"sm\"\n                        >\n                          Set as active\n                        </Button>\n                      )\n                      : null\n                    }\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          className=\"float-right\"\n                          color=\"danger\"\n                          onClick={this.handleRuleFileDelete}\n                          size=\"sm\"\n                        >\n                          Delete\n                        </Button>\n                      )\n                      : null\n                    }\n                  </div>\n                  {\n                    (this.state.mode === 'newFile') ?\n                    (\n                      <table className=\"mt-2\">\n                      <tbody>\n                      <tr><td>\n                        <Input\n                          placeholder=\"File Name\"\n                          type=\"text\"\n                          onChange={(e) => { newFileName = e.target.value }}\n                        />\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={newFileCreateConfirm}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"check\" />\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={() => {this.setState({ mode: null})}}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"close\" />\n                        </Button>\n                      </td>\n                      </tr>\n                      </tbody>\n                      </table>\n                    )\n                    : null\n                  }\n\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Menu\n                    mode=\"inline\"\n                    theme=\"light\"\n                    selectedKeys={[this.state.selectedRuleFile]}\n                    onSelect={this.handleRuleFileSelect}\n                  >\n                    {this.getRulesFilesItems()}\n                  </Menu>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            {\n              this.state.selectedRuleFile\n              ? (\n                <Card className=\"bg-secondary shadow\">\n                  <CardHeader className=\"bg-white border-0\">\n                    <Row className=\"align-items-center\">\n                      <Col xs=\"6\">\n                        <h3 className=\"mb-0\">{this.state.selectedRuleFile}</h3>\n                      </Col>\n                      <Col className=\"text-right\" xs=\"6\">\n                        <Button\n                          color=\"info\"\n                          href=\"#pablo\"\n                          onClick={this.handleAddNewRuleClick}\n                          size=\"sm\"\n                        >\n                          Add a new Rule\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Collapse\n                      onChange={this.handleRuleItemActivePanelChange}\n                    >\n                      {this.getRulesFileContentItems()}\n                    </Collapse>\n                  </CardBody>\n                </Card>\n              )\n              : (\n                <Card className=\"bg-secondary shadow\" style={{minHeight: '300px'}}>\n                  <CardHeader className=\"bg-white border-0\"></CardHeader>\n                  <CardBody>\n                  <Row>\n                    <Col xs=\"12\" style={{textAlign: 'center'}}>\n                      <p>Please select a file</p>\n                    </Col>\n                  </Row>\n                  </CardBody>\n                </Card>\n              )\n            }\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default RulesValidation;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Row,\n  Button,\n  Col,\n} from \"reactstrap\";\n\nimport { Input, Select, Menu, Collapse, Modal, Icon, message } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from 'axios';\nimport RulesEditor from './RuleEditor'\nimport RuleViewer from './RuleViewer'\n\nconst { Option } = Select;\nconst { SubMenu } = Menu;\nconst { Panel } = Collapse;\n\n\nclass RulesCallback extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      callbackRulesFiles: [],\n      activeRulesFile: null,\n      selectedRuleFile: null,\n      curRules: [],\n      editRule: null,\n      mode: null\n    };\n  }\n\n  componentDidMount() {\n    this.getCallbackRulesFiles()\n  }\n\n  getCallbackRulesFiles = async () => {\n    message.loading({ content: 'Getting rules files...', key: 'getFilesProgress' });\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/callback\")\n    const activeRulesFile = response.data.activeRulesFile\n    await this.setState(  { callbackRulesFiles: response.data.files, activeRulesFile } )\n    message.success({ content: 'Loaded', key: 'getFilesProgress', duration: -1 });\n\n    // Select the active rules file by default\n    await this.setState({selectedRuleFile: activeRulesFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  getCallbackRulesFileContent = async (ruleFile) => {\n    const response = await axios.get(\"http://localhost:5050/api/rules/files/callback/\" + ruleFile)\n    let curRules = []\n    if (response.data && Array.isArray(response.data)) {\n      curRules = response.data\n    }\n    this.setState(  { curRules } )\n  }\n\n  getRulesFilesItems = () => {\n    return this.state.callbackRulesFiles.map(ruleFile => {\n      const isActive = (ruleFile === this.state.activeRulesFile)\n      return (\n      <Menu.Item key={ruleFile}>{isActive?(<Icon type=\"check\" />):''} {ruleFile}</Menu.Item>\n      )\n    })\n  }\n\n  handleRuleFileSelect = async (selectedItem) => {\n    const selectedRuleFile = selectedItem.key\n    await this.setState({selectedRuleFile, ruleItemActive: null})\n    this.updateRulesFileDisplay()\n  }\n\n  updateRulesFileDisplay = () => {\n    this.getCallbackRulesFileContent(this.state.selectedRuleFile)\n  }\n\n  getRulesFileContentItems = () => {\n    return this.state.curRules.map((rule, key) => {\n      return (\n        <Panel header={rule.description} key={key}>\n          <Row>\n            <Col xs=\"12\" style={{textAlign: 'right'}}>\n              <Button\n                color=\"info\"\n                onClick={this.handleRuleClick(rule)}\n                size=\"sm\"\n              >\n                Edit\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={this.handleRuleDelete(rule.ruleId)}\n                size=\"sm\"\n              >\n                Delete\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <RuleViewer rule={rule} />\n            </Col>\n          </Row>\n        </Panel>\n      )\n    })\n  }\n\n  handleRuleClick = (tRule={}) => {\n    // console.log(rule)\n    return () => {\n      this.setState({editRule: tRule, mode: 'edit'})\n    }\n  }\n\n  handleAddNewRuleClick = () => {\n    // Calculate the new rule ID which is the next number of the highest rule ID in the list\n    const highestRule = this.state.curRules.reduce((prevItem, item) => {\n      return (prevItem.ruleId > item.ruleId ? prevItem : item)\n    }, this.state.curRules[0])\n\n    let newRuleId = 1\n    if (highestRule) {\n      newRuleId = highestRule.ruleId + 1\n    }\n    \n    const tRule = {\n      ruleId: newRuleId,\n      priority: 1\n    }\n\n    this.setState({editRule: tRule, mode: 'create'})\n  }\n\n  handleRuleCancelClick = () => {\n    this.setState({editRule: null})\n  }\n\n  handleRuleSave = async (newRule) => {\n    const newRuleFull = {\n      ruleId: this.state.editRule.ruleId,\n      priority: this.state.editRule.priority,\n      ...newRule\n    }\n\n    let updatedRules = null\n    if(this.state.mode == 'create') {\n      updatedRules = this.state.curRules.concat(newRuleFull)\n    } else if(this.state.mode == 'edit') {\n      updatedRules = this.state.curRules.map(item => {\n        if (item.ruleId === newRuleFull.ruleId) {\n          return newRuleFull\n        } else {\n          return item\n        }\n      })\n    }\n\n    if (updatedRules) {\n      message.loading({ content: 'Saving the rule...', key: 'ruleSaveProgress' });\n      await axios.put(\"http://localhost:5050/api/rules/files/callback/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n      this.setState({editRule: null, curRules: updatedRules})\n      message.success({ content: 'Saved', key: 'ruleSaveProgress', duration: 2 });\n    }\n  }\n\n  handleRuleDelete = (ruleId) => {\n    return async () => {\n      const updatedRules = this.state.curRules.filter(item => {\n        return item.ruleId !== ruleId\n      })\n      if (updatedRules) {\n        message.loading({ content: 'Deleting rule...', key: 'deleteProgress' });\n        await axios.put(\"http://localhost:5050/api/rules/files/callback/\" + this.state.selectedRuleFile, updatedRules, { headers: { 'Content-Type': 'application/json' } })\n        message.success({ content: 'Deleted', key: 'deleteProgress', duration: 2 });\n        this.setState({editRule: null, curRules: updatedRules})\n      }\n    }\n  }\n\n  handleNewRulesFileClick = async (fileName) => {\n    message.loading({ content: 'Creating new file...', key: 'fileNewProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/callback/\" + fileName)\n    await this.getCallbackRulesFiles()\n    await this.setState({selectedRuleFile: fileName, ruleItemActive: null})\n    message.success({ content: 'Created', key: 'fileNewProgress', duration: 2 });\n    this.updateRulesFileDisplay()\n  }\n\n  handleRuleFileDelete = async () => {\n    message.loading({ content: 'Deleting file...', key: 'deleteFileProgress' });\n    await axios.delete(\"http://localhost:5050/api/rules/files/callback/\" + this.state.selectedRuleFile)\n    await this.getCallbackRulesFiles()\n    await this.setState({selectedRuleFile: null, ruleItemActive: null})\n    message.success({ content: 'Deleted', key: 'deleteFileProgress', duration: 2 });\n  }\n\n  handleRuleFileSetActive = async () => {\n    message.loading({ content: 'Activating rule file...', key: 'activateFileProgress' });\n    await axios.put(\"http://localhost:5050/api/rules/files/callback\", { type: 'activeRulesFile', fileName: this.state.selectedRuleFile }, { headers: { 'Content-Type': 'application/json' } })\n    await this.getCallbackRulesFiles()\n    this.updateRulesFileDisplay()\n    message.success({ content: 'Activated', key: 'activateFileProgress', duration: 2 });\n  }\n\n\n  render() {\n    var newFileName = ''\n    var newFileNameErrorMessage = ''\n    const newFileCreateConfirm = () => {\n      // Validate filename format\n      // TODO: Some additional validation for the filename format\n      if (!newFileName.endsWith('.json')) {\n        message.error('Filename should be ended with .json');\n        return\n      }\n\n      if (/\\s/.test(newFileName)) {\n        message.error('Filename contains spaces');\n        return\n      }\n\n      this.setState({ mode: null})\n      this.handleNewRulesFileClick(newFileName)\n    }\n\n    return (\n      <>\n          <Modal\n            centered\n            destroyOnClose\n            forceRender\n            title=\"Rule Builder\"\n            className=\"w-50 p-3\"\n            visible={this.state.editRule? true : false}\n            footer={null}\n            onCancel={this.handleRuleCancelClick}\n          >\n            <RulesEditor\n              rule={this.state.editRule}\n              onSave={this.handleRuleSave}\n              mode='callback'\n            />\n          </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      className=\"mr-4\"\n                      color=\"info\"\n                      onClick={() => {this.setState({ mode: 'newFile'})}}\n                      size=\"sm\"\n                    >\n                      New Rules File\n                    </Button>\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          color=\"success\"\n                          onClick={this.handleRuleFileSetActive}\n                          size=\"sm\"\n                        >\n                          Set as active\n                        </Button>\n                      )\n                      : null\n                    }\n                    {\n                      this.state.selectedRuleFile\n                      ? (\n                        <Button\n                          className=\"float-right\"\n                          color=\"danger\"\n                          onClick={this.handleRuleFileDelete}\n                          size=\"sm\"\n                        >\n                          Delete\n                        </Button>\n                      )\n                      : null\n                    }\n                  </div>\n                  {\n                    (this.state.mode === 'newFile') ?\n                    (\n                      <table className=\"mt-2\">\n                      <tbody>\n                      <tr><td>\n                        <Input\n                          placeholder=\"File Name\"\n                          type=\"text\"\n                          onChange={(e) => { newFileName = e.target.value }}\n                        />\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={newFileCreateConfirm}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"check\" />\n                        </Button>\n                      </td>\n                      <td>\n                        <Button\n                          className=\"float-right\"\n                          color=\"secondary\"\n                          onClick={() => {this.setState({ mode: null})}}\n                          size=\"sm\"\n                        >\n                          <Icon type=\"close\" />\n                        </Button>\n                      </td>\n                      </tr>\n                      </tbody>\n                      </table>\n                    )\n                    : null\n                  }\n\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Menu\n                    mode=\"inline\"\n                    theme=\"light\"\n                    selectedKeys={[this.state.selectedRuleFile]}\n                    onSelect={this.handleRuleFileSelect}\n                  >\n                    {this.getRulesFilesItems()}\n                  </Menu>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            {\n              this.state.selectedRuleFile\n              ? (\n                <Card className=\"bg-secondary shadow\">\n                  <CardHeader className=\"bg-white border-0\">\n                    <Row className=\"align-items-center\">\n                      <Col xs=\"6\">\n                        <h3 className=\"mb-0\">{this.state.selectedRuleFile}</h3>\n                      </Col>\n                      <Col className=\"text-right\" xs=\"6\">\n                        <Button\n                          color=\"info\"\n                          href=\"#pablo\"\n                          onClick={this.handleAddNewRuleClick}\n                          size=\"sm\"\n                        >\n                          Add a new Rule\n                        </Button>\n                      </Col>\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Collapse\n                      onChange={this.handleRuleItemActivePanelChange}\n                    >\n                      {this.getRulesFileContentItems()}\n                    </Collapse>\n                  </CardBody>\n                </Card>\n              )\n              : (\n                <Card className=\"bg-secondary shadow\" style={{minHeight: '300px'}}>\n                  <CardHeader className=\"bg-white border-0\"></CardHeader>\n                  <CardBody>\n                  <Row>\n                    <Col xs=\"12\" style={{textAlign: 'center'}}>\n                      <p>Please select a file</p>\n                    </Col>\n                  </Row>\n                  </CardBody>\n                </Card>\n              )\n            }\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default RulesCallback;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n\n// reactstrap components\nimport {\n  FormGroup,\n  Button,\n  CardBody\n} from \"reactstrap\";\n// core components\nimport axios from 'axios';\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Select, TreeSelect, Input, Tooltip, Tag, Radio, Icon, Menu, Dropdown, Card, Popover, Checkbox, message, Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { FactDataGenerator, FactSelect } from '../rules/BuilderTools.jsx';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport Ajv from 'ajv';\nconst ajv = new Ajv({allErrors: true});\n\nconst { Option } = Select;\n\nclass ConfigurableParameter extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      paramType: null,\n      factData: null,\n      selectedValueComponent: null\n    }\n\n    // Set paramTypes Array\n    this.paramTypes[0]='Input Values'\n    this.paramTypes[1]='Previous Request'\n    this.paramTypes[2]='Previous Response'\n    this.paramTypes[3]='Function'\n  }\n\n  paramTypes = []\n  inputValue = null\n\n  getParamTypeMenu = () => {\n    return this.paramTypes.map((item, key) => {\n      return (\n        <Option key={key} value={key}>\n          {item}\n        </Option>\n      )\n    })\n  }\n  \n  // handleParamTypeChange = async (paramType) => {\n  //   var factData = null\n  //   switch(paramType) {\n  //     case 0:\n  //       factData = (new FactDataGenerator()).getPathParametersFactData(this.props.rootParameters)\n  //       break\n  //     case 1:\n  //       factData = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n  //       break\n  //     case 2:\n  //       factData = (new FactDataGenerator()).getHeadersFactData(this.props.resourceDefinition, this.props.rootParameters)\n  //       break\n  //     default:\n  //       factData = null\n  //   }\n  //   await this.setState( {paramType: paramType, factData: factData} )\n  //   this.updateChanges()\n  // }\n  handleParamTypeChange = async (paramType) => {\n    this.setState( {paramType: paramType, factData: null, selectedValueComponent: null} )\n  }\n\n  // getValueComponent = () => {\n  //   switch(this.state.paramType) {\n  //     case 0:\n  //     case 1:\n  //     case 2:\n  //       return (\n  //         <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n  //       )\n  //       break\n  //     case 3:\n  //     default:\n  //       return null\n  //   }\n  // }\n\n  getRequestFactComponent = () => {\n    if (this.state.factData) {\n      return (\n        <FactSelect key={this.props.name} factData={this.state.factData} onSelect={this.handleFactSelect} />\n      )\n    } else {\n      return null\n    }\n\n  }\n\n  getValueComponent = () => {\n    switch(this.state.paramType) {\n      case 0:\n        let inputOptionItems = []\n        for (let item in this.props.inputValues) {\n          inputOptionItems.push(\n            <Option key={item} value={item}>{item}</Option>\n          )\n        }\n        return (\n          <>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.state.selectedValueComponent}\n            onChange={(value) => {\n              this.state.selectedValueComponent = value\n              this.handleParamSelect('{$inputs.'+value+'}')\n            }}\n          >\n            {inputOptionItems}\n          </Select>\n          </>\n        )\n        break\n      case 1:\n      case 2:\n        let requestSelectionOptionItems = []\n        requestSelectionOptionItems = this.props.allRequests.map(request => {\n          return (\n            <Option key={request.id} value={request.id}>{request.description}</Option>\n          )\n        })\n        return (\n          <>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.state.selectedValueComponent}\n            onChange={(requestId) => {\n              const request = this.props.allRequests.find(item => item.id === requestId)\n              let resourceDefinition = null\n              let rootParams = null\n              if (this.state.paramType === 1) {\n                resourceDefinition = this.props.openApiDefinition.paths[request.operationPath][request.method]\n                rootParams = this.props.openApiDefinition.paths[request.operationPath].parameters\n              } else {\n                const callbackObj = this.props.callbackMap[request.operationPath][request.method]['successCallback']\n                resourceDefinition = this.props.openApiDefinition.paths[callbackObj.path][callbackObj.method]\n                rootParams = this.props.openApiDefinition.paths[callbackObj.path].parameters\n              }\n              const bodyFactData = (new FactDataGenerator()).getBodyFactData(resourceDefinition)\n              const headerFactData = (new FactDataGenerator()).getHeadersFactData(resourceDefinition, rootParams)\n              const factData = {\n                properties: {\n                  body: bodyFactData,\n                  headers: { type: 'object', ...headerFactData }\n                }\n              }\n              this.setState({selectedValueComponent: requestId, factData})\n            }}\n          >\n            {requestSelectionOptionItems}\n          </Select>\n          </>\n        )\n        break\n      case 3:\n        // TODO: Get the function list and type of functions from backend. Include another subtype to select\n        let functionList = {\n          generateUUID: {\n            description: 'Generates unique id'\n          },\n          curDate: {\n            description: 'Get current date and time'\n          }\n        }\n        let functionOptionItems = []\n        for (let item in functionList) {\n          functionOptionItems.push(\n            <Option key={item} value={item}>{item}</Option>\n          )\n        }\n        return (\n          <>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.state.selectedValueComponent}\n            onChange={(value) => {\n              this.state.selectedValueComponent = value\n              this.handleParamSelect('{$function.generic.'+value+'}')\n            }}\n          >\n            {functionOptionItems}\n          </Select>\n          </>\n        )\n        break\n      default:\n        return null\n    }\n  }\n\n  handleParamSelect = (paramValue) => {\n    this.props.onChange(paramValue)\n  }\n\n  handleFactTypeSelect = async (value) => {\n    try {\n      const selectedValueObject = JSON.parse(value)\n      await this.setState( {selectedFactType:  selectedValueObject} )\n      this.props.condition.fact = selectedValueObject.name\n      this.props.onConditionChange()\n      this.updateFactData()\n    } catch(err) {}\n  }\n\n  handleFactSelect = (value, factObject) => {\n    this.inputValue = value\n    this.handleParamSelect('{$prev.'+this.state.selectedValueComponent+'.'+(this.state.paramType===1?'request':'response')+'.'+value+'}')\n    // this.updateChanges()\n  }\n\n  updateChanges = () => {\n    let finalValue = ''\n    if (!this.inputValue) {\n      this.inputValue = ''\n    }\n    switch(this.state.paramType) {\n      case 0:\n        finalValue = '{$request.params.' + this.inputValue + '}'\n        break\n      case 1:\n        finalValue = '{$request.body.' + this.inputValue + '}'\n        break\n      case 2:\n        finalValue = '{$request.header.' + this.inputValue + '}'\n        break\n      case 3:\n        finalValue = '{$session.negotiatedContentType}'\n        break\n      default:\n        finalValue = this.inputValue\n    }\n    \n\n    this.props.onChange(finalValue)\n  }\n\n  handleValueChange = (newValue) => {\n    this.inputValue = newValue\n    this.updateChanges()\n  }\n\n  render() {\n\n    return (\n      <Row>\n        <Col>\n          <Select\n            placeholder=\"Please Select\"\n            style={{ width: 200 }}\n            value={this.paramTypes[this.state.paramType]}\n            onSelect={this.handleParamTypeChange}\n          >\n            {this.getParamTypeMenu()}\n          </Select>\n        </Col>\n        <Col>\n          {this.getValueComponent()}\n        </Col>\n        <Col>\n          {this.getRequestFactComponent()}\n        </Col>\n      </Row>\n    )\n  }\n}\n\nclass PathBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      params: {}\n    }\n  }\n\n  handleValueChange = async (name, value) => {\n    let params = this.state.params\n    params[name] = value\n    this.props.request.params = params\n    await this.setState({params})\n    this.updatePath()\n  }\n\n  updatePath = () => {\n    let operationPath = this.props.request.operationPath\n    for (let k in this.state.params) {\n      operationPath = operationPath.replace('{'+k+'}', this.state.params[k])      \n    }\n    this.props.request.path = operationPath\n    this.props.onChange()\n  }\n\n  getPathItems = () => {\n    // TODO: read the path parameters from resource parameters also\n    // Currently only rootParameters are considered\n    if (!this.props.rootParameters) {\n      return null\n    }\n    const pathItems = this.props.rootParameters.filter(item => {\n      return item.in === 'path'\n    })\n    if (pathItems.length<=0) {\n      return null\n    }\n    return (\n      <Row className=\"mb-2\">\n        <Col>\n          <Card size=\"small\" title=\"Path Parameters\">\n            <Row>\n              <Col span={24}>\n                <FormGroup>\n                  {(\n                    pathItems.map(item => {\n                      return (\n                        <Row className=\"mb-2\" key={item.name}>\n                          <Col span={8}>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              {item.name}\n                            </label>\n                          </Col>\n                          <Col span={16}>\n                            { this.getValueInput(item) }\n                          </Col>\n                        </Row>\n                      )\n                    })\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    )\n\n  }\n\n  getValueInput = (pathParam) => {\n    if (!this.props.request.params) {\n      this.props.request.params = {}\n    }\n    if(!this.props.request.params[pathParam.name]) {\n      this.props.request.params[pathParam.name] = ''\n    }\n    const pathValue = this.props.request.params[pathParam.name]\n    let dynamicPathValue = null\n    //Check if the path value is a configurable input parameter\n    if (pathValue.startsWith('{$inputs.')) {\n      // Find the parameter name\n      const paramName = pathValue.slice(9,pathValue.length-1)\n      // if (this.props.inputValues)\n      const temp = _.get(this.props.inputValues, paramName)\n      if (temp) {\n        dynamicPathValue = (\n          <Tag style={{ borderStyle: 'dashed' }}>{temp}</Tag>\n        )\n      }\n    }\n    if(pathParam.schema && pathParam.schema.enum) {\n      return (\n        <>\n        <Select\n          onChange={(value) => this.handleValueChange(pathParam.name, value)}\n          value={this.props.request.params[pathParam.name]}\n        >\n        { pathParam.schema.enum.map(item => {\n          return (\n            <Option key={item} value={item}>{item}</Option>\n          )\n        })}\n        </Select>\n        {dynamicPathValue}\n        </>\n      )\n    } else {\n      return (\n        <>\n          <Input placeholder=\"Value\" value={this.props.request.params[pathParam.name]}\n          onChange={(e) => this.handleValueChange(pathParam.name, e.target.value)}  />\n          {dynamicPathValue}\n        </>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n      <>\n      { this.getPathItems() }\n      </>\n    )\n  }\n}\n\nclass HeaderBodyBuilder extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      configurableParameterSelected: '',\n      allParamsFromDefinition: [],\n      allParamsObject: {}\n    }\n  }\n\n  bodySchema = {}\n\n  componentDidMount = () => {\n    // console.log(this.props.rootParameters)\n    // console.log(this.props.resourceDefinition.parameters)\n    this.bodySchema = (new FactDataGenerator()).getBodyFactData(this.props.resourceDefinition)\n\n    let allParamsFromDefinition = []\n    if (this.props.rootParameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.rootParameters)\n    }\n    if (this.props.resourceDefinition.parameters) {\n      allParamsFromDefinition = allParamsFromDefinition.concat(this.props.resourceDefinition.parameters)\n    }\n\n    let allParamsObject = {}\n    for (let k in allParamsFromDefinition) {\n      allParamsObject[allParamsFromDefinition[k].name] = {\n        description: allParamsFromDefinition[k].description\n      }\n    }\n    this.setState({allParamsFromDefinition, allParamsObject})\n  }\n\n  componentDidUpdate = () => {\n    // console.log(this.props.request.body)\n    if(this.refs.bodyEditor) {\n      this.refs.bodyEditor.jsonEditor.update(this.props.request.body)\n    }\n    // console.log(this.props.resourceDefinition.parameters)\n    // console.log(this.props.resourceDefinition)\n  }\n\n\n  addHeaderItemsFromDefinition = async (onlyRequired=false) => {\n    this.state.allParamsFromDefinition.forEach((param) => {\n      if (param.in==='header') {\n        if (!onlyRequired || param.required) {\n          if (!this.props.request.headers) {\n            this.props.request.headers = {}\n            this.props.request.headers[param.name] = ''\n          }\n          else if (!this.props.request.headers[param.name]) {\n            this.props.request.headers[param.name] = ''\n          }\n        }\n      }\n    })\n    this.updateChanges()\n  }\n\n  addHeaderItem = (itemName) => {\n    if (!this.props.request.headers) {\n      this.props.request.headers = {}\n    }\n    this.props.request.headers[itemName] = this.props.request.headers[itemName] ? this.props.request.headers[itemName] : \"\"\n    this.updateChanges()\n  }\n  handleHeaderItemChange = (key, name, value) => {\n    this.props.request.headers[name] = value\n    this.updateChanges()\n  }\n  handleHeaderItemDelete = async (name) => {\n    delete this.props.request.headers[name]\n    this.updateChanges()\n  }\n\n  handleBodyChange = (bodyObject) => {\n    // console.log(ace.getCursorPosition())\n    this.props.request.body = bodyObject\n    this.updateChanges()\n  }\n\n  handleAddHeaderClick = (event) => {\n    this.addHeaderItem(event.item.props.children);\n  };\n\n  headerItemsMenu = () => {\n    const headerParams = this.state.allParamsFromDefinition.filter(item => {\n      return item.in === 'header'\n    })\n    const menuItems = headerParams.map((item, key) => {\n      return (\n        <Menu.Item key={key}>{item.name}</Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={this.handleAddHeaderClick}>\n        {menuItems}\n      </Menu>\n    )\n  }\n\n  updateChanges = () => {\n    this.props.onChange(this.props.request)\n  }\n\n  getHeaderItems = () => {\n    // console.log(this.props.resourceDefinition)\n    let headerItems = []\n    let k=0\n    if (this.props.request) {\n      for( let headerName in this.props.request.headers ) {\n        const item = {\n          name: headerName,\n          value: this.props.request.headers[headerName]\n        }\n        const key = k++\n        headerItems.push(\n          <HeaderInputComponent\n            key={key}\n            itemKey={item.name}\n            name={item.name}\n            value={item.value}\n            description={this.state.allParamsObject[item.name]? this.state.allParamsObject[item.name].description: null} rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n            onChange={this.handleHeaderItemChange}\n            onDelete={this.handleHeaderItemDelete}\n            inputValues={this.props.inputValues}\n          />\n        )\n      }\n    }\n    return headerItems\n\n  }\n\n  handleAddConfigParam = (newValue) => {\n    this.setState({configurableParameterSelected: newValue})\n  }\n\n\n  handlePopulateSampleBodyClick = async () => {\n    const newBody = (new FactDataGenerator()).getBodySample(this.props.resourceDefinition)\n    if(newBody) {\n      // if(this.props.callbackObject && this.props.callbackObject.bodyOverride) {\n      //   _.merge(newBody, this.props.callbackObject.bodyOverride)\n      // }\n      this.props.request.body = newBody\n      this.refs.bodyEditor.jsonEditor.update(this.props.request.body)\n      this.updateChanges()\n    }\n  }\n\n  handleConfigParamCopyToClipboard = () => {\n    navigator.clipboard.writeText(this.state.configurableParameterSelected)\n    message.success('Copied to clipboard');\n  }\n\n  render() {\n    const content = (\n      <>\n      <Row>\n        <Col>\n          <ConfigurableParameter\n            onChange={this.handleAddConfigParam}\n            rootParameters={this.props.rootParameters}\n            resourceDefinition={this.props.resourceDefinition}\n            openApiDefinition={this.props.openApiDefinition}\n            callbackMap={this.props.callbackMap}\n            inputValues={this.props.inputValues}\n            allRequests={this.props.allRequests}\n          />\n        </Col>\n      </Row>\n      {\n        this.state.configurableParameterSelected ?\n        (\n          <Row className=\"mt-4 text-center\">\n            <Col>\n              <Tag color=\"geekblue\"><a onClick={this.handleConfigParamCopyToClipboard}>{this.state.configurableParameterSelected}</a></Tag>\n            </Col>\n          </Row>\n        )\n        : null\n      }\n      </>\n    )\n\n    return (\n      <>\n        <Row>\n          <Col>\n            <Card size=\"small\" title=\"Headers\">\n              <Row>\n                <Col span={24}>\n                  <FormGroup>\n                    <Row>\n                      <Col span={8}>\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Name\n                        </label>\n                      </Col>\n                      <Col span={8}>\n                        <label\n                          className=\"form-control-label\"\n                          htmlFor=\"input-city\"\n                        >\n                          Value\n                        </label>\n                      </Col>\n                    </Row>\n                    { this.getHeaderItems() }\n                  </FormGroup>\n                  <Dropdown overlay={this.headerItemsMenu()}>\n                    <Button\n                      color=\"primary\"\n                      size=\"sm\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Add Header\n                    </Button>\n\n                  </Dropdown>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => this.addHeaderItemsFromDefinition(true)}\n                    size=\"sm\"\n                  >\n                    Add Required Headers\n                  </Button>\n                  <Button\n                    color=\"info\"\n                    onClick={() => this.addHeaderItemsFromDefinition(false)}\n                    size=\"sm\"\n                  >\n                    Add All Headers\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        {\n          this.props.resourceDefinition.requestBody\n          ? (\n            <Row className='mt-2'>\n              <Col>\n                <Card size=\"small\" title=\"Body\">\n                  <Row className='mb-2'>\n                    <Col span={12}>\n                      <Popover content={content} title=\"Select a Configurable Parameter\" trigger=\"click\">\n                        <Button color=\"secondary\" size=\"sm\">Add Configurable Params</Button>\n                      </Popover>\n                    </Col>\n                    <Col span={12} style={{textAlign: 'right'}}>\n                      <Button color=\"success\" size=\"sm\" onClick={this.handlePopulateSampleBodyClick} >Populate with sample body</Button>\n                    </Col>\n                  </Row>\n                  <Row >\n                    <Col span={24}>\n                      <Editor\n                        ref=\"bodyEditor\"\n                        value={ this.props.request.body? this.props.request.body : {} }\n                        ace={ace}\n                        ajv={ajv}\n                        theme=\"ace/theme/tomorrow_night_blue\"\n                        mode=\"code\"\n                        search={false}\n                        statusBar={false}\n                        navigationBar={false}\n                        onChange={this.handleBodyChange}\n                        schema={this.bodySchema}\n                        // onError={this.handleError}\n                      />\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n          )\n          : null\n        }\n      </>\n    )\n  }\n}\n\n\nclass HeaderInputComponent extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      value: ''\n    }\n  }\n  inputValue = null\n\n  componentDidMount = () => {\n    this.inputValue = this.props.value\n  }\n\n  componentDidUpdate = () => {\n    this.inputValue = this.props.value\n  }\n\n  getDynamicValue = () => {\n    let dynamicValue = null\n    //Check if the path value is a configurable input parameter\n    if (this.inputValue && this.inputValue.startsWith('{$inputs.')) {\n      // Find the parameter name\n      const paramName = this.inputValue.slice(9,this.inputValue.length-1)\n      // if (this.props.inputValues)\n      const temp = _.get(this.props.inputValues, paramName)\n      if (temp) {\n        dynamicValue = (\n          <Tag style={{ borderStyle: 'dashed' }}>{temp}</Tag>\n        )\n      }\n    }\n    return dynamicValue\n  }\n\n  handleNameChange = (event) => {\n    // this.setState({name: event.target.value})\n    this.props.onChange(this.props.itemKey, event.target.value, this.props.value)\n  }\n  handleValueChange = (event) => {\n    this.inputValue = event.target.value\n    // console.log(event.target.value)\n    // this.setState({value: event.target.value})\n    this.props.onChange(this.props.itemKey, this.props.name, this.inputValue)\n  }\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.itemKey)\n  }\n\n  \n  render() {\n    return (\n      <>\n      <Row className=\"mb-2\" gutter={16}>\n        <Col span={8}>\n          <Tooltip placement=\"topLeft\" title={this.props.description}>\n            <Input\n              className=\"form-control-alternative\"\n              placeholder=\"Name\"\n              type=\"text\"\n              defaultValue={this.props.name}\n              value={this.props.name}\n              onChange={this.handleNameChange}\n              disabled={false}\n            />\n          </Tooltip>\n        </Col>\n        \n        <Col span={14}>\n          <Input\n            className=\"form-control-alternative\"\n            placeholder=\"Value\"\n            type=\"text\"\n            defaultValue={this.props.value}\n            value={this.props.value}\n            onChange={this.handleValueChange}\n            disabled={false}\n          />\n          {this.getDynamicValue()}\n        </Col>\n        <Col span={2}>\n          <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#eb2f96\"\n            key={this.props.name}\n            onClick={this.handleDelete}\n          />\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\n\nclass RequestBuilder extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n    }\n  }\n\n  // componentDidMount = () => {\n  //   if (this.props.eventParams) {\n  //     if (this.props.request.headers || this.props.request.body) {\n  //       this.setState({overrideChecked: true})\n  //     }\n  //   }\n    \n  // }\n\n  handleRequestChange = () => {\n    // if (newParams) {\n    //   this.props.request.params = newParams\n    // } else {\n    //   delete this.props.request.params\n    // }\n\n    this.props.onChange(this.props.request)\n  }\n\n  render () {\n    return (\n      <>\n      <div>\n        <Row className='mt-2'>\n          <Col>\n          {\n            this.props.resource\n            ? (\n              <>\n              <PathBuilder\n                request={this.props.request}\n                inputValues={this.props.inputValues}\n                onChange={this.handleRequestChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n              />\n              <HeaderBodyBuilder\n                request={this.props.request}\n                inputValues={this.props.inputValues}\n                allRequests={this.props.allRequests}\n                onChange={this.handleRequestChange}\n                resourceDefinition={this.props.resourceDefinition}\n                rootParameters = {this.props.rootParameters}\n                openApiDefinition={this.props.openApiDefinition}\n                callbackMap={this.props.callbackMap}\n              />\n              </>\n            )\n            : null\n          }\n\n          </Col>\n        </Row>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default RequestBuilder;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport _ from 'lodash';\n \n// reactstrap components\nimport {\n  Card,\n  CardBody,\n  FormGroup,\n  CardHeader,\n  Form,\n  Container,\n  Button,\n} from \"reactstrap\";\n// core components\n\nimport socketIOClient from \"socket.io-client\";\n\nimport Header from \"components/Headers/Header.jsx\";\n\n\nimport { Select, Input, Row, Col, Affix, Steps, Descriptions, Switch, Tabs, Modal, Icon, Skeleton, message, Popover, Upload } from 'antd';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow_night_blue';\nimport axios from 'axios';\nimport './fixAce.css';\nimport RequestBuilder from './RequestBuilder'\n\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { TabPane } = Tabs;\n\n\nclass InputValues extends React.Component {\n\n  state = {\n    addInputValueDialogVisible: false,\n    newInputValueName: ''\n  };\n\n  handleDeleteClick = (inputValueName) => {\n    this.props.onDelete(inputValueName)\n  }\n\n  getInputItems = () => {\n    let inputItems = []\n    let i = 0\n    for (let inputValueName in this.props.values) {\n      inputItems.push(\n        <>\n        <Descriptions.Item label={inputValueName}>\n          <Row gutter={8}>\n            <Col span={23}>\n              <Input\n                value={this.props.values[inputValueName]}\n                onChange={(e) => this.props.onChange(inputValueName, e.target.value)}\n              />\n            </Col>\n            <Col span={1}>\n              <Icon key={inputValueName} type=\"delete\" theme=\"filled\"\n                onClick={ () => this.handleDeleteClick(inputValueName) }\n              />\n            </Col>\n          </Row>\n          \n        </Descriptions.Item>\n        </>\n      )\n    }\n    return inputItems\n  }\n\n  handleAddInputValue = (inputValueName) => {\n    // Check if the input value name already exists\n    if (this.props.values.hasOwnProperty(inputValueName)) {\n      message.error({ content: 'The input value name already exists', key: 'InputValueNameExists', duration: 3 });\n    } else {\n      // Save the input value\n      this.props.onChange(inputValueName, '')\n      this.state.newInputValueName = ''\n    }\n  }\n\n\n  render () {\n    const addInputValueDialogContent = (\n      <>\n      <Input \n        placeholder=\"Input Value Name\"\n        type=\"text\"\n        value={this.state.newInputValueName}\n        onChange={(e) => { this.setState({newInputValueName: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleAddInputValue(this.state.newInputValueName)\n            this.setState({addInputValueDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Add\n      </Button>\n      </>\n    )\n\n    return (\n      <>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Card className=\"bg-white shadow\">\n            <CardBody>\n              <Popover\n                content={addInputValueDialogContent}\n                title=\"Enter a new name\"\n                trigger=\"click\"\n                visible={this.state.addInputValueDialogVisible}\n                onVisibleChange={ (visible) => this.setState({addInputValueDialogVisible: visible})}\n              >\n                <Button\n                    className=\"text-right float-right\"\n                    color=\"primary\"\n                    size=\"sm\"\n                  >\n                    Add Input Value\n                </Button>\n              </Popover>\n\n              <Form>\n                <Descriptions title=\"Input Values\" bordered>\n                  {this.getInputItems()}\n                </Descriptions>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </>\n    )\n  }\n}\n\n\n\nclass ResourceSelector extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      selectedItem: null\n    }\n  }\n  resourceOptions = []\n\n  getResourceOptions = () => {\n    this.resourceOptions = []\n    if(this.props.openApiDefinition.paths) {\n      let currentResourceGroup = ''\n      for ( let pathKey in this.props.openApiDefinition.paths ) {\n        for ( let methodKey in this.props.openApiDefinition.paths[pathKey]) {\n          let itemKey = methodKey + \" \" + pathKey\n          switch(methodKey) {\n            case 'get':\n            case 'post':\n              this.resourceOptions.push(<Option key={itemKey} value={itemKey}>{itemKey}</Option>)\n              break\n          }\n        }\n      }\n    }\n    return this.resourceOptions\n  }\n\n  getResourceValue = () => {\n    // console.log(this.props.value)\n    if(this.props.value) {\n      return this.props.value.method + ' ' + this.props.value.path\n    } else {\n      return null\n    }\n    \n  }\n\n  render() {\n\n    const resourceSelectHandler = (eventKey) => {\n      const resourceArr = eventKey.split(' ')\n      const resource = {\n        method: resourceArr[0],\n        path: resourceArr[1]\n      }\n      this.state.selectedItem = resource\n      // this.state.selectedItem = JSON.parse(eventKey)\n      this.props.onSelect(resource)\n      // console.log(this.props.openApiDefinition.paths[selectedItem.path][selectedItem.method])\n    }\n\n    return(\n      <Select onChange={resourceSelectHandler}\n        disabled={(this.props.value? true : false)}\n        style={{ width: 300 }}\n        placeholder=\"Select a resource\"\n        value={this.getResourceValue()}\n      >\n      {this.getResourceOptions()}\n      </Select>\n    )\n  }\n}\n\nclass RequestGenerator extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      origJson: [],\n      curJson: {},\n      description: '',\n      request: {},\n      conditions: [],\n      pathMethodConditions: [],\n      openApiDefinition: {},\n      selectedResource: null,\n      callbackMap: {}\n    };\n  }\n\n  componentDidMount = async () => {\n    const openApiDefinition = await this.getDefinition()\n    const callbackMap = await this.getCallbackMap()\n    // Deep clone the input rule to a new object to work with (Copying without object references recursively)\n    const inputRule = {}\n    let selectedResource = null\n    if (this.props.request && this.props.request.operationPath && this.props.request.method) {\n      selectedResource = {\n        path: this.props.request.operationPath,\n        method: this.props.request.method\n      }\n    }\n\n    this.setState({selectedResource, openApiDefinition, callbackMap})\n  }\n\n  getConditions = () => {\n    return this.state.conditions\n  }\n\n  getPathMethodConditions = () => {\n    return this.state.pathMethodConditions\n  }\n\n  getRequest = () => {\n    return this.state.request\n  }\n  // async componentWillMount() {\n  //   await this.getDefinition()\n  //   await this.getCallbackMap()\n  // }\n\n  getRule = () => {\n    const rule = {\n      description: this.state.description,\n      conditions: {\n        \"all\": [...this.state.conditions, ...this.state.pathMethodConditions]\n      },\n      request: this.state.request,\n    }\n    return JSON.stringify(rule, null, 2)\n  }\n\n  handleConditionsChange = () => {\n    this.forceUpdate()\n    // this.setState({conditions});\n  };\n\n  handleRequestChange = (request) => {\n    this.setState({request});\n    this.props.onChange(request)\n  };\n\n  getDefinition = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/definition/1.1\")\n    // console.log(response.data)\n    return response.data\n    // this.setState(  { openApiDefinition: response.data } )\n  }\n\n  getCallbackMap = async () => {\n    const response = await axios.get(\"http://localhost:5050/api/openapi/callback_map/1.1\")\n    return response.data\n    // this.setState(  { callbackMap: response.data } )\n  }\n\n  resourceSelectHandler = (resource) => {\n    const request = this.props.request\n    request.operationPath = resource.path\n    request.path = resource.path\n    request.method = resource.method\n    this.props.onChange(request)\n    this.setState({selectedResource: resource, request})\n  }\n\n  getResourceDefinition = () => {\n    if (this.state.selectedResource && this.state.openApiDefinition && this.state.selectedResource.path && this.state.selectedResource.method) {\n      return this.state.openApiDefinition.paths[this.state.selectedResource.path][this.state.selectedResource.method]\n    }\n    return null\n  }\n  getRootParameters = () => {\n    var rootParams = []\n    if (this.state.selectedResource && this.state.openApiDefinition && this.state.selectedResource.path && this.state.selectedResource.method) {\n      rootParams = this.state.openApiDefinition.paths[this.state.selectedResource.path].parameters\n    }\n    return rootParams\n  }\n\n  getCallbackObject = () => {\n      let callbackObj = null\n      try {\n        if(this.props.mode === 'validation') {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['errorCallback']\n        } else {\n          callbackObj = this.state.callbackMap[this.state.selectedResource.path][this.state.selectedResource.method]['successCallback']\n        }\n      } catch(err){\n      }\n      return callbackObj\n  }\n\n  getCallbackRootParameters = () => {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path].parameters\n      } catch(err) {\n        return []\n      }\n \n  }\n\n  getCallbackDefinition = () => {\n    if (this.state.selectedResource) {\n      try {\n        const callbackObj = this.getCallbackObject()\n        return this.state.openApiDefinition.paths[callbackObj.path][callbackObj.method]\n      } catch(err) {\n        return null\n      }\n\n    }\n    return null\n  }\n\n  handleDescriptionChange = (newValue) => {\n    this.setState({description: newValue})\n  }\n\n\n  render() {\n    return (\n      <>\n          <Row>\n            <Col span={24}>\n                  <Row className=\"align-items-center\">\n                    <Col span={16}>\n                      <ResourceSelector value={this.state.selectedResource} openApiDefinition={this.state.openApiDefinition} onSelect={this.resourceSelectHandler} />\n                    </Col>\n                    <Col span={8}>\n                      <Row className=\"text-right float-right\">\n                        <Col>\n                          <Button\n                            className=\"float-right\"\n                            color=\"danger\"\n                            size=\"sm\"\n                            onClick={() => {this.props.onDelete(this.props.request.id)}}\n                          >\n                            Delete\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <Form>\n                        <RequestBuilder\n                          request={this.props.request}\n                          allRequests={this.props.allRequests}\n                          inputValues={this.props.inputValues}\n                          onChange={this.handleRequestChange}\n                          resource={this.state.selectedResource}\n                          resourceDefinition={this.getResourceDefinition()}\n                          rootParameters={this.getRootParameters()}\n                          openApiDefinition={this.state.openApiDefinition}\n                          callbackMap={this.state.callbackMap}\n                        />\n                      </Form>\n                    </Col>\n                  </Row>\n            </Col>\n          </Row>\n      </>\n    );\n  }\n}\n\nclass OutboundRequest extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      request: {},\n      template: {},\n      addNewRequestDialogVisible: false,\n      newRequestDescription: '',\n      newTemplateName: '',\n      createNewTemplateDialogVisible: false,\n      saveTemplateFileName: '',\n      saveTemplateDialogVisible: false,\n    };\n  }\n\n  socket = null\n\n  componentWillUnmount = () => {\n    this.socket.disconnect()\n  }\n  \n  componentDidMount = () => {\n    // const sampleTemplate = require('./sample1.json')\n    // this.setState({template: sampleTemplate})\n    this.socket = socketIOClient('http://127.0.0.1:5050');\n    this.socket.on(\"outboundProgress\", this.handleIncomingProgress);\n  }\n\n  replaceInputValues = (inputObject, inputValues) => {\n    var resultObject\n    // Check whether inputObject is string or object. If it is object, then convert that to JSON string and parse it while return\n    if (typeof inputObject === 'string') {\n      resultObject = inputObject\n    } else if (typeof inputObject === 'object') {\n      resultObject = JSON.stringify(inputObject)\n    } else {\n      return inputObject\n    }\n  \n    // Check the string for any inclusions like {$some_param}\n    const matchedArray = resultObject.match(/{\\$([^}]+)}/g)\n    if (matchedArray) {\n      matchedArray.forEach(element => {\n        // Check for the function type of param, if its function we need to call a function in custom-functions and replace the returned value\n        const splitArr = element.split('.')\n        switch (splitArr[0]) {\n          case '{$inputs':\n          default:\n            const paramName = element.slice(9,element.length-1)\n            const temp = _.get(this.state.template.inputValues, paramName)\n            if (temp) {\n              resultObject = resultObject.replace(element, temp)\n            }\n        }\n      })\n    }\n  \n    if (typeof inputObject === 'object') {\n      return JSON.parse(resultObject)\n    } else {\n      return resultObject\n    }\n  }\n\n  getRequestGeneratorItems = () => {\n    if (this.state.template.requests) {\n      return this.state.template.requests.map(item => {\n        return (\n          <Col span={24 / (this.state.template.requests.length ? this.state.template.requests.length : 1)}>\n            {\n              item.status && (item.status.state === 'waiting' || item.status.state === 'process')\n              ? (<Skeleton paragraph={ {rows: 10} } active />)\n              : (\n                <Tabs defaultActiveKey='1'>\n                  <TabPane tab=\"Request\" key=\"1\">\n                    {\n                      item.headers\n                      ? (\n                        <>\n                        <h4>Header</h4>\n                        <pre>{JSON.stringify(this.replaceInputValues(item.headers),null,2)}</pre>\n                        </>\n                      )\n                      : null\n                    }\n                    {\n                      item.body\n                      ? (\n                        <>\n                        <h4>Body</h4>\n                        <pre>{JSON.stringify(this.replaceInputValues(item.body),null,2)}</pre>\n                        </>\n                      )\n                      : null\n                    }\n                  </TabPane>\n                  <TabPane tab=\"Editor\" key=\"2\">\n                    <RequestGenerator\n                      request={item}\n                      allRequests={this.state.template.requests}\n                      inputValues={this.state.template.inputValues}\n                      onChange={this.handleRequestChange}\n                      onDelete={this.handleRequestDelete}\n                    />\n                  </TabPane>\n                  {\n                    item.status && item.status.response\n                    ? (\n                      <TabPane tab=\"Response\" key=\"3\">\n                        {\n                          item.status.response.headers\n                          ? (\n                            <>\n                              <h4>Header</h4>\n                              <pre>{JSON.stringify(item.status.response.headers,null,2)}</pre>\n                            </>\n                          )\n                          : null\n                        }\n                        {\n                          item.status.response.body\n                          ? (\n                            <>\n                              <h4>Body</h4>\n                              <pre>{JSON.stringify(item.status.response.body,null,2)}</pre>\n                            </>\n                          )\n                          : null\n                        }\n                      </TabPane>\n                    )\n                    : null\n                  }\n                </Tabs>\n              )\n            }\n\n          </Col>\n        )\n      })\n    } else {\n      return null\n    }\n  }\n\n  getStepItems = () => {\n    if (this.state.template.requests) {\n      const stepItems = this.state.template.requests.map(item => {\n        return (\n          <Step status={item.status? item.status.state : null} title={item.method} subTitle={item.operationPath} description={item.description} />\n        )\n      })\n      const spanCol = stepItems.length < 3 ? stepItems.length * 8 : 24\n      return (\n        <Row>\n          <Col span={spanCol}>\n            <Steps current={-1} type=\"navigation\" size=\"default\">\n              {stepItems}\n            </Steps>\n          </Col>\n        </Row>\n      )\n      \n    } else {\n      return null\n    }\n  }\n\n  handleRequestChange = (request) => {\n    this.setState({request: request})\n  }\n\n  handleInputValuesChange = (name, value) => {\n    this.state.template.inputValues[name] = value\n    this.forceUpdate()\n  }\n\n  handleInputValuesDelete = (name) => {\n    delete this.state.template.inputValues[name]\n    this.forceUpdate()\n  }\n\n  handleAddNewRequestClick = (description) => {\n    // Find highest request id to determine the new ID\n    let maxId = +this.state.template.requests.reduce(function(m, k){ return k.id > m ? k.id : m }, 0)\n\n    this.state.template.requests.push({ id: maxId+1, description})\n    this.forceUpdate()\n  }\n\n  handleRequestDelete = (requestId) => {\n    const deleteIndex = this.state.template.requests.findIndex(item => item.id == requestId)\n    this.state.template.requests.splice(deleteIndex,1)\n    this.forceUpdate()\n  }\n\n  handleIncomingProgress = (progress) => {\n    // console.log(progress)\n    let request = this.state.template.requests.find(item => item.id === progress.id)\n    if (request.status) {\n      if (progress.status === 'SUCCESS') {\n        console.log(request)\n        request.status.state = 'finish'\n        request.status.response = progress.response\n      } else if (progress.status === 'ERROR') {\n        request.status.state = 'error'\n        request.status.response = { body: progress.error }\n        // Clear the waiting status of the remaining requests\n        for (let i in this.state.template.requests) {\n          if (!this.state.template.requests[i].status) {\n            this.state.template.requests[i].status = {}\n          }\n          if (this.state.template.requests[i].status.state === 'process') {\n            this.state.template.requests[i].status.state = 'wait'\n            this.state.template.requests[i].status.response = null\n          }\n          \n        }\n        message.error({ content: 'Test case failed', key: 'outboundSendProgress', duration: 3 });\n      }\n      this.forceUpdate()\n    }\n  }\n\n  // mockTypeSuccess = true\n  handleSendClick = async () => {\n\n    const outboundRequestID = Math.random().toString(36).substring(7);\n    message.loading({ content: 'Sending the outbound request...', key: 'outboundSendProgress' });\n    await axios.post(\"http://localhost:5050/api/outbound/template/\" + outboundRequestID, this.state.template, { headers: { 'Content-Type': 'application/json' } })\n    message.success({ content: 'Test case Sent', key: 'outboundSendProgress', duration: 2 });\n\n    // Set the status to waiting for all the requests\n    for (let i in this.state.template.requests) {\n      if (!this.state.template.requests[i].status) {\n        this.state.template.requests[i].status = {}\n      }\n      this.state.template.requests[i].status.state = 'process'\n    }\n    this.forceUpdate()\n\n\n\n\n    // // Mock status changes to simulate the outbound transfer in UI\n    // // Loop through the requests and set the status to waiting for each for some particular time\n    // const waitForSomeTime = () => {\n    //   return new Promise(function(resolve, reject) {\n    //     setTimeout(resolve, 800, 'one');\n    //   });\n    // }\n\n    // for (let i in this.state.template.requests) {\n    //   await waitForSomeTime()\n    //   this.state.template.requests[i].status.state = 'finish'\n    //   this.state.template.requests[i].status.response = { body: 'This is a sample response' }\n    //   if (!this.mockTypeSuccess && i==1) {\n    //     this.state.template.requests[i].status.state = 'error'\n    //     this.forceUpdate()\n    //     break;\n    //   }\n    //   this.forceUpdate()\n    // }\n    // this.mockTypeSuccess = !this.mockTypeSuccess\n\n  }\n\n  // Take the status property out from requests\n  convertTemplate = (template) => {\n    if (template.requests) {\n      let { requests, ...remainingProps } = template\n      const newRequests = requests.map(item => {\n        const { status, ...newRequest } = item\n        return newRequest\n      })\n      return { ...remainingProps, requests: newRequests }\n    } else {\n      return null\n    }\n  }\n\n  handleCreateNewTemplateClick = (templateName) => {\n    this.setState({template: {\n      name: templateName,\n      inputValues: {},\n      requests: []\n    }})\n  }\n\n  download = (content, fileName, contentType) => {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  handleTemplateSaveClick = (fileName) => {\n    this.download(JSON.stringify(this.convertTemplate(this.state.template), null, 2), fileName, 'text/plain');\n  }\n\n  handleImportFile = (file_to_read) => {\n    message.loading({ content: 'Reading the file...', key: 'importFileProgress' });\n    var fileRead = new FileReader();\n    fileRead.onload = (e) => {\n      var content = e.target.result;\n      try {\n        var intern = JSON.parse(content);\n        this.setState({template: intern})\n        message.success({ content: 'File Loaded', key: 'importFileProgress', duration: 2 });\n      } catch (err) {\n        message.error({ content: err.message, key: 'importFileProgress', duration: 2 });\n      }\n    };\n    fileRead.readAsText(file_to_read);\n\n  }\n\n  render() {\n\n    const addNewRequestDialogContent = (\n      <>\n      <Input \n        placeholder=\"Enter description\"\n        type=\"text\"\n        value={this.state.newRequestDescription}\n        onChange={(e) => { this.setState({newRequestDescription: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleAddNewRequestClick(this.state.newRequestDescription)\n            this.setState({addNewRequestDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Add\n      </Button>\n      </>\n    )\n\n    const createNewTemplateDialogContent = (\n      <>\n      <Input \n        placeholder=\"Template name\"\n        type=\"text\"\n        value={this.state.newTemplateName}\n        onChange={(e) => { this.setState({newTemplateName: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleCreateNewTemplateClick(this.state.newTemplateName)\n            this.setState({createNewTemplateDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Create\n      </Button>\n      </>\n    )\n\n    const saveTemplateDialogContent = (\n      <>\n      <Input \n        placeholder=\"File name\"\n        type=\"text\"\n        value={this.state.saveTemplateFileName}\n        onChange={(e) => { this.setState({saveTemplateFileName: e.target.value })}}\n      />\n      <Button\n          className=\"text-right mt-2\"\n          color=\"success\"\n          href=\"#pablo\"\n          onClick={ () => {\n            this.handleTemplateSaveClick(this.state.saveTemplateFileName)\n            this.setState({saveTemplateDialogVisible: false})\n          }}\n          size=\"sm\"\n        >\n          Create\n      </Button>\n      </>\n    )\n\n    return (\n      <>\n        <Modal\n          centered\n          destroyOnClose\n          forceRender\n          title=\"Template\"\n          className=\"w-50 p-3\"\n          visible={this.state.showTemplate? true : false}\n          footer={null}\n          onCancel={() => { this.setState({showTemplate: false})}}\n        >\n          <pre>{JSON.stringify(this.convertTemplate(this.state.template), null, 2)}</pre>\n        </Modal>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col span={24}>\n              <Card className=\"card-profile shadow\">\n                <CardBody>\n                  <Affix offsetTop={2}>\n                  <Row>\n                    <Col span={24}>\n                      <Card className=\"bg-white shadow mb-4\">\n                        <CardBody>\n                          <Upload \n                            accept = '.json'\n                            showUploadList = {false}\n                            beforeUpload = {file => {\n                              this.handleImportFile(file)\n                              return false;\n                            }}\n                          >\n                            <Button\n                              color=\"success\"\n                              size=\"sm\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Import Template\n                            </Button>\n                          </Upload>\n\n                          <Button\n                            className=\"float-right\"\n                            color=\"danger\"\n                            size=\"sm\"\n                            onClick={this.handleSendClick}\n                          >\n                            Send\n                          </Button>\n                          <Popover\n                            className=\"float-right\"\n                            content={saveTemplateDialogContent}\n                            title=\"Enter filename to save\"\n                            trigger=\"click\"\n                            visible={this.state.saveTemplateDialogVisible}\n                            onVisibleChange={ (visible) => this.setState({saveTemplateDialogVisible: visible})}\n                          >\n                            <Button\n                                className=\"text-right float-right\"\n                                color=\"success\"\n                                size=\"sm\"\n                              >\n                                Save\n                            </Button>\n                          </Popover>\n                          <Button\n                            className=\"float-right\"\n                            color=\"info\"\n                            size=\"sm\"\n                            onClick={() => { this.setState({showTemplate: true})}}\n                          >\n                            Show Template\n                          </Button>\n                          <Popover\n                            className=\"float-right\"\n                            content={createNewTemplateDialogContent}\n                            title=\"Enter a name for the template\"\n                            trigger=\"click\"\n                            visible={this.state.createNewTemplateDialogVisible}\n                            onVisibleChange={ (visible) => this.setState({createNewTemplateDialogVisible: visible})}\n                          >\n                            <Button\n                                className=\"text-right float-right\"\n                                color=\"primary\"\n                                size=\"sm\"\n                              >\n                                New Template\n                            </Button>\n                          </Popover>\n                        </CardBody>\n                        </Card>\n                    </Col>\n                  </Row>\n                  </Affix>\n                  <Row>\n                    <Col span={24}>\n                      <InputValues values={this.state.template.inputValues} onChange={this.handleInputValuesChange} onDelete={this.handleInputValuesDelete} />\n                    </Col>\n                  </Row>\n                  <Row className=\"mt-4\">\n                    <Col span={24}>\n                    <Card className=\"card-profile shadow\">\n                      <CardHeader>\n                        {this.getStepItems()}\n                        <Popover\n                          content={addNewRequestDialogContent}\n                          title=\"Enter a description for the request\"\n                          trigger=\"click\"\n                          visible={this.state.addNewRequestDialogVisible}\n                          onVisibleChange={ (visible) => this.setState({addNewRequestDialogVisible: visible})}\n                        >\n                          <Button\n                              className=\"text-right float-right\"\n                              color=\"primary\"\n                              size=\"sm\"\n                            >\n                              Add New Request\n                          </Button>\n                        </Popover>\n                      </CardHeader>\n                      <CardBody>\n                        <Row gutter={16} >\n                          {this.getRequestGeneratorItems()}\n                        </Row>\n                      </CardBody>\n                    </Card>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* <Row>\n            <Col className=\"mt-4\" span={24}>\n              <Card className=\"card-profile shadow\">\n                <CardHeader>\n                  <div className=\"d-flex float-right\">\n                    <Button\n                      className=\"float-right\"\n                      color=\"danger\"\n                      size=\"sm\"\n                    >\n                      Clear Logs\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  <Logs />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default OutboundRequest;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { Grid, GridColumn as Column, GridDetailRow } from '@progress/kendo-react-grid';\nimport '@progress/kendo-theme-default/dist/all.css'\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Button\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\n\nimport { Icon, Tag, Timeline } from 'antd';\n\nclass DetailComponent extends GridDetailRow {\n  render() {\n      const log = this.props.dataItem;\n      return (\n        <>\n        {log.additionalData\n          ? (\n              <div>\n                <br />\n                <div style={{ backgroundColor: '#1f4662', width: '100%', color: '#fff', fontSize: '12px' }}>\n                  <div style={{ backgroundColor: '#193549', width: '100%', fontFamily: 'monospace', color: '#ffc600' }} >\n                  </div>\n                  <pre style={{ display: 'block', width: '100%', margin: '0', overflow: 'scroll', color: '#ffffff' }}>\n                    {JSON.stringify(log.additionalData,null,2)}\n                  </pre>\n                </div>\n              </div>\n            )\n          : log.message\n        }\n        </>\n      );\n  }\n}\n\n// const getMessageTypeIcon = (messageType) => {\n//   let icon_name\n//   switch(messageType) {\n//     case 'request':\n//       icon_name = \"ni-bold-right\"\n//       break\n//     case 'response':\n//       icon_name = \"ni-bold-left\"\n//       break\n//     case 'generic':\n//     default:\n//       icon_name = \"ni-sound-wave\"\n//       break\n\n//   }\n//   const className = \"rounded-circle mr-3 ni \" + icon_name\n//   return <i className={className}></i>\n// }\n\n\nexport class Logs extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      logs: [],\n      endpoint: \"http://127.0.0.1:5050\",\n    };\n  }\n  componentDidMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"newLog\", newLog => {\n      // console.log('New log received', newLog)\n      const updatedLogs = this.state.logs.concat(newLog)\n      this.setState({ logs: updatedLogs })\n    });\n  }\n\n  expandChange = (event) => {\n    event.dataItem.expanded = !event.dataItem.expanded;\n    this.forceUpdate();\n  }\n\n\n  render() {\n  \n    return (\n      <>\n        <Row>\n          <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Logs</h3>\n                </CardHeader>\n                <Grid\n                  className=\"align-items-center table-flush\"\n                  data={this.state.logs}\n                  detail={DetailComponent}\n                  expandField=\"expanded\"\n                  onExpandChange={this.expandChange}\n                >\n                  <Column field=\"logTime\" title=\"Time\" />\n                  <Column field=\"uniqueId\" title=\"UniqueID\" />\n                  <Column field=\"message\" title=\"Message\" />\n                  <Column field=\"verbosity\" title=\"Verbosity\" />\n                </Grid>\n              </Card>\n              </div>\n        </Row>\n      </>\n    );\n  }\n}\n\nclass IncomingTimelineItem extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      logsVisible: false\n    }\n  }\n  expandChange = (event) => {\n    event.dataItem.expanded = !event.dataItem.expanded;\n    this.forceUpdate();\n  }\n\n  toggleLogsVisibility = () => {\n      this.setState({logsVisible: !this.state.logsVisible})\n  }\n\n  render () {\n    const log = this.props.logs[0]\n    const info = this.props.info\n    return (\n      <>\n      <Timeline.Item position='right'>\n        <b>{log.logTime}</b>\n        <br /><Tag color={info.erroneous ? \"#f50\" : \"#2db7f5\"} onClick={this.toggleLogsVisibility}>{info.name}</Tag>\n        <br />\n        {\n          this.state.logsVisible\n          ? (\n            <Grid\n              className=\"align-items-center table-flush\"\n              data={this.props.logs}\n              detail={DetailComponent}\n              expandField=\"expanded\"\n              onExpandChange={this.expandChange}\n            >\n              <Column field=\"logTime\" title=\"Time\" />\n              <Column field=\"message\" title=\"Message\" />\n              <Column field=\"verbosity\" title=\"Verbosity\" />\n            </Grid>\n          )\n          : null\n        }\n      </Timeline.Item>\n      </>\n    )\n  }\n}\n\nclass IncomingMonitor extends React.Component {\n\n  newState =  {\n    logs: [],\n    incomingItemsObj: {},\n    incomingItemsArr: [],\n    lastIncomingTime: null,\n    endpoint: \"http://127.0.0.1:5050\",\n  }\n\n  socket = null\n\n  constructor() {\n    super();\n    this.state = JSON.parse(JSON.stringify(this.newState))\n  }\n  \n  componentWillUnmount = () => {\n    this.socket.disconnect()\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    this.socket = socketIOClient(endpoint);\n    this.socket.on(\"newLog\", newLog => {\n      // console.log('New log received', newLog)\n      this.state.logs.push(newLog)\n\n      // Group by unique ID\n      if(!this.state.incomingItemsObj.hasOwnProperty(newLog.uniqueId)) {\n        this.state.incomingItemsObj[newLog.uniqueId] = []\n        if (!this.state.lastIncomingTime) {\n          this.state.lastIncomingTime = new Date(newLog.logTime)\n        } else {\n          const timeDiffMillis = new Date(newLog.logTime) -  this.state.lastIncomingTime\n          this.state.lastIncomingTime = new Date(newLog.logTime)\n          if (timeDiffMillis > 1000) {\n            this.state.incomingItemsArr.push(null)          }\n        }\n        let name = newLog.message\n        if (newLog.resource) {\n          name = newLog.resource.method.toUpperCase() + ' ' + newLog.resource.path\n        }\n        this.state.incomingItemsArr.push({ id: newLog.uniqueId, name, erroneous: false })\n        \n      }\n      \n      // If the verbosity of the log is error, set the entire group as erroneous\n      if (newLog.verbosity === 'error') {\n        // Find the group in incomingItemsArr array\n        const itemIndex = this.state.incomingItemsArr.findIndex(item => item? (item.id === newLog.uniqueId) : false)\n        this.state.incomingItemsArr[itemIndex].erroneous = true\n      }\n\n      this.state.incomingItemsObj[newLog.uniqueId].push(newLog)\n      this.forceUpdate()\n    });\n  }\n\n  getTimelineItems = () => {\n    return this.state.incomingItemsArr.map(item => {\n      if (item) {\n        return (\n          <IncomingTimelineItem key={item.id} info={item} logs={this.state.incomingItemsObj[item.id]} />\n        )\n      } else {\n        return (\n          <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\"><br /><br /></Timeline.Item>\n        )\n      }\n\n    })\n  }\n\n  handleClearLogs = () => {\n    this.setState(JSON.parse(JSON.stringify(this.newState)))\n  }\n\n  render () {\n    return (\n      <>\n      <Row className=\"mb-4\">\n      <div className=\"col\">\n        <Card className=\"shadow\">\n          <CardHeader className=\"border-0\">\n            <Button\n              className=\"float-right\"\n              color=\"danger\"\n              size=\"sm\"\n              onClick={this.handleClearLogs}\n            >\n              Clear\n            </Button>\n            <h3 className=\"mb-0\">Monitor</h3>\n          </CardHeader>\n          <CardBody>\n            <Timeline reverse={true} pending=\"Monitoring...\" >\n              {/* <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\n              <Timeline.Item color=\"green\">Solve initial network problems 2015-09-01</Timeline.Item>\n              <Timeline.Item>\n                <Tag color=\"#2db7f5\">GET /quotes asdf</Tag>\n                2019-01-01 00:00:00GMT\n              </Timeline.Item>\n              <Timeline.Item color=\"red\">Network problems being solved 2015-09-01</Timeline.Item>\n              <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\n              <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />}>\n                Technical testing 2015-09-01\n              </Timeline.Item> */}\n              {this.getTimelineItems()}\n            </Timeline>\n          </CardBody>\n        </Card>\n        </div>\n      </Row>\n      </>\n    )\n  }\n}\n\nclass Tables extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n\n  render() {\n  \n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <IncomingMonitor />\n          {/* <Logs /> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/dashboard/Dashboard.jsx\";\n// import Dashboard from \"views/examples/Dashboard.jsx\";\nimport Profile from \"views/examples/Profile.jsx\";\nimport Maps from \"views/examples/Maps.jsx\";\nimport Register from \"views/examples/Register.jsx\";\nimport Login from \"views/examples/Login.jsx\";\nimport Tables from \"views/examples/Tables.jsx\";\nimport Icons from \"views/examples/Icons.jsx\";\nimport RulesValidation from \"views/rules/RulesValidation.jsx\";\nimport RulesCallback from \"views/rules/RulesCallback.jsx\";\nimport OutboundRequest from \"views/outbound/OutboundRequest.jsx\";\nimport Monitor from \"views/monitor/Monitor.jsx\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Dashboard,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/monitoring\",\n    name: \"Monitoring\",\n    icon: \"ni ni-glasses-2 text-primary\",\n    component: Monitor,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rules_validation\",\n    name: \"Validation Rules\",\n    subTitle: \"(Error Callbacks)\",\n    icon: \"ni ni-bullet-list-67 text-primary\",\n    component: RulesValidation,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/rules_callback\",\n    name: \"Callback Rules\",\n    subTitle: \"(Success Callbacks)\",\n    icon: \"ni ni-curved-next text-primary\",\n    component: RulesCallback,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/outbound_request\",\n    name: \"Outbound Request\",\n    icon: \"ni ni-money-coins text-blue\",\n    component: OutboundRequest,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   icon: \"ni ni-single-02 text-yellow\",\n  //   component: Profile,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Tables\",\n  //   icon: \"ni ni-bullet-list-67 text-red\",\n  //   component: Tables,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/login\",\n  //   name: \"Login\",\n  //   icon: \"ni ni-key-25 text-info\",\n  //   component: Login,\n  //   layout: \"/auth\"\n  // },\n  // {\n  //   path: \"/register\",\n  //   name: \"Register\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Register,\n  //   layout: \"/auth\"\n  // }\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport AdminFooter from \"components/Footers/AdminFooter.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/mojaloop.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\n// import AuthLayout from \"layouts/Auth.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      {/* <Route path=\"/auth\" render={props => <AuthLayout {...props} />} /> */}\n      <Redirect from=\"/\" to=\"/admin/index\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    },\n    maxBarThickness: 10\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.jsx (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.jsx (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"GET /parties/{Type}/{ID}\", \"POST /quotes\", \"POST /transfers\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30]\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.jsx\n  parseOptions, // used inside src/views/Index.jsx\n  chartExample1, // used inside src/views/Index.jsx\n  chartExample2 // used inside src/views/Index.jsx\n};\n"],"sourceRoot":""}